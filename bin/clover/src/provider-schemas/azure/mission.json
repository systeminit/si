{
  "swagger": "2.0",
  "info": {
    "title": "Azure mission",
    "version": "2025-05-01-preview-preview",
    "description": "Azure mission service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.Mission/approvals": {
      "get": {
        "operationId": "Approval_ListByParent",
        "tags": [
          "Approval"
        ],
        "description": "List ApprovalResource resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ApprovalResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ApprovalResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Approval Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "parentResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Parameter for optimizing query results"
                          },
                          "grandparentResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Parameter for optimizing query results"
                          },
                          "approvers": {
                            "type": "array",
                            "description": "List of approvers for the approval request",
                            "items": {
                              "type": "object",
                              "description": "Approver Metadata for approvals request.",
                              "properties": {
                                "approverEntraId": {
                                  "type": "string",
                                  "description": "Entra ObjectID of the approver"
                                },
                                "actionPerformed": {
                                  "description": "Action Performed by approver",
                                  "type": "string",
                                  "enum": [
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ActionPerformed",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Approved",
                                        "value": "Approved",
                                        "description": "Action was Approved"
                                      },
                                      {
                                        "name": "Rejected",
                                        "value": "Rejected",
                                        "description": "Action was Rejected"
                                      }
                                    ]
                                  }
                                },
                                "lastUpdatedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "approval request last updated at"
                                }
                              },
                              "required": [
                                "approverEntraId",
                                "lastUpdatedAt"
                              ]
                            },
                            "x-ms-identifiers": [
                              "approverEntraId"
                            ]
                          },
                          "ticketId": {
                            "type": "string",
                            "description": "Ticket ID for the approval request"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Approval request creation time"
                          },
                          "stateChangedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                          },
                          "requestMetadata": {
                            "description": "Request metadata for the approval request.",
                            "type": "object",
                            "properties": {
                              "resourceAction": {
                                "type": "string",
                                "description": "Resource Action of the item being approved or declined."
                              },
                              "approvalCallbackRoute": {
                                "type": "string",
                                "description": "Route name for the approval callback"
                              },
                              "approvalCallbackPayload": {
                                "type": "string",
                                "description": "Payload to be sent upon any action on approval request"
                              },
                              "approvalStatus": {
                                "type": "string",
                                "description": "Status of the approval. Uses ApprovalStatus enum.",
                                "default": "Pending",
                                "enum": [
                                  "Approved",
                                  "Rejected",
                                  "Pending",
                                  "Deleted",
                                  "Expired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Approved",
                                      "value": "Approved",
                                      "description": "ApprovalStatus Type Approved"
                                    },
                                    {
                                      "name": "Rejected",
                                      "value": "Rejected",
                                      "description": "ApprovalStatus Type Rejected"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "ApprovalStatus Type Pending"
                                    },
                                    {
                                      "name": "Deleted",
                                      "value": "Deleted",
                                      "description": "ApprovalStatus Type Deleted"
                                    },
                                    {
                                      "name": "Expired",
                                      "value": "Expired",
                                      "description": "ApprovalStatus Type Expired"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceAction"
                            ]
                          }
                        },
                        "required": [
                          "requestMetadata"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Mission/approvals/{approvalName}": {
      "get": {
        "operationId": "Approval_Get",
        "tags": [
          "Approval"
        ],
        "description": "Get a ApprovalResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Approval Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "type": "string",
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "default": "Pending",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceAction"
                      ]
                    }
                  },
                  "required": [
                    "requestMetadata"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Approval_CreateOrUpdate",
        "tags": [
          "Approval"
        ],
        "description": "Create a ApprovalResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Approval Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "type": "string",
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "default": "Pending",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceAction"
                      ]
                    }
                  },
                  "required": [
                    "requestMetadata"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApprovalResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Approval Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "type": "string",
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "default": "Pending",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceAction"
                      ]
                    }
                  },
                  "required": [
                    "requestMetadata"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ApprovalResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Approval Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "type": "string",
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "default": "Pending",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceAction"
                      ]
                    }
                  },
                  "required": [
                    "requestMetadata"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Approval_Update",
        "tags": [
          "Approval"
        ],
        "description": "Update a ApprovalResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Approvals patch model.",
              "properties": {
                "properties": {
                  "description": "Approval Patch properties",
                  "type": "object",
                  "properties": {
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "type": "string",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Approval Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "parentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "grandparentResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Parameter for optimizing query results"
                    },
                    "approvers": {
                      "type": "array",
                      "description": "List of approvers for the approval request",
                      "items": {
                        "type": "object",
                        "description": "Approver Metadata for approvals request.",
                        "properties": {
                          "approverEntraId": {
                            "type": "string",
                            "description": "Entra ObjectID of the approver"
                          },
                          "actionPerformed": {
                            "description": "Action Performed by approver",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "ActionPerformed",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "Action was Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "Action was Rejected"
                                }
                              ]
                            }
                          },
                          "lastUpdatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "approval request last updated at"
                          }
                        },
                        "required": [
                          "approverEntraId",
                          "lastUpdatedAt"
                        ]
                      },
                      "x-ms-identifiers": [
                        "approverEntraId"
                      ]
                    },
                    "ticketId": {
                      "type": "string",
                      "description": "Ticket ID for the approval request"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request creation time"
                    },
                    "stateChangedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                    },
                    "requestMetadata": {
                      "description": "Request metadata for the approval request.",
                      "type": "object",
                      "properties": {
                        "resourceAction": {
                          "type": "string",
                          "description": "Resource Action of the item being approved or declined."
                        },
                        "approvalCallbackRoute": {
                          "type": "string",
                          "description": "Route name for the approval callback"
                        },
                        "approvalCallbackPayload": {
                          "type": "string",
                          "description": "Payload to be sent upon any action on approval request"
                        },
                        "approvalStatus": {
                          "type": "string",
                          "description": "Status of the approval. Uses ApprovalStatus enum.",
                          "default": "Pending",
                          "enum": [
                            "Approved",
                            "Rejected",
                            "Pending",
                            "Deleted",
                            "Expired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "ApprovalStatus Type Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "ApprovalStatus Type Rejected"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "ApprovalStatus Type Pending"
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "ApprovalStatus Type Deleted"
                              },
                              {
                                "name": "Expired",
                                "value": "Expired",
                                "description": "ApprovalStatus Type Expired"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceAction"
                      ]
                    }
                  },
                  "required": [
                    "requestMetadata"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Approval_Delete",
        "tags": [
          "Approval"
        ],
        "description": "Delete a ApprovalResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Mission/approvals/{approvalName}/notifyInitiator": {
      "post": {
        "operationId": "Approval_NotifyInitiator",
        "tags": [
          "Approval"
        ],
        "description": "Upon receiving approval or rejection from approver, this facilitates actions on approval resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status indicating 'Approved' or 'Rejected'",
                  "enum": [
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "approvalStatus"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Mission/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListBySubscription",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CommunityResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CommunityResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Community Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "addressSpace": {
                            "type": "string",
                            "description": "Address Space.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dnsServers": {
                            "type": "array",
                            "description": "DNS Servers.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by communities.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "managedResourceGroupName": {
                            "type": "string",
                            "description": "Managed resource group name.",
                            "readOnly": true
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          },
                          "governedServiceList": {
                            "type": "array",
                            "description": "List of services governed by a community.",
                            "items": {
                              "type": "object",
                              "description": "GovernedServiceItem Properties",
                              "properties": {
                                "serviceId": {
                                  "description": "Service ID",
                                  "type": "string",
                                  "enum": [
                                    "AKS",
                                    "AppService",
                                    "AzureFirewalls",
                                    "ContainerRegistry",
                                    "CosmosDB",
                                    "DataConnectors",
                                    "Insights",
                                    "KeyVault",
                                    "Logic",
                                    "MicrosoftSQL",
                                    "Monitoring",
                                    "PostgreSQL",
                                    "PrivateDNSZones",
                                    "ServiceBus",
                                    "Storage"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceIdentifier",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AKS",
                                        "value": "AKS",
                                        "description": "Service identifier for AKS"
                                      },
                                      {
                                        "name": "AppService",
                                        "value": "AppService",
                                        "description": "Service identifier for App Service"
                                      },
                                      {
                                        "name": "AzureFirewalls",
                                        "value": "AzureFirewalls",
                                        "description": "Service identifier for Azure Firewalls"
                                      },
                                      {
                                        "name": "ContainerRegistry",
                                        "value": "ContainerRegistry",
                                        "description": "Service identifier for Container Registry"
                                      },
                                      {
                                        "name": "CosmosDB",
                                        "value": "CosmosDB",
                                        "description": "Service identifier for CosmosDB"
                                      },
                                      {
                                        "name": "DataConnectors",
                                        "value": "DataConnectors",
                                        "description": "Service identifier for Data Connectors"
                                      },
                                      {
                                        "name": "Insights",
                                        "value": "Insights",
                                        "description": "Service identifier for Insights"
                                      },
                                      {
                                        "name": "KeyVault",
                                        "value": "KeyVault",
                                        "description": "Service identifier for Key Vault"
                                      },
                                      {
                                        "name": "Logic",
                                        "value": "Logic",
                                        "description": "Service identifier for Logic"
                                      },
                                      {
                                        "name": "MicrosoftSql",
                                        "value": "MicrosoftSQL",
                                        "description": "Service identifier for Microsoft SQL"
                                      },
                                      {
                                        "name": "Monitoring",
                                        "value": "Monitoring",
                                        "description": "Service identifier for Monitoring"
                                      },
                                      {
                                        "name": "PostgreSql",
                                        "value": "PostgreSQL",
                                        "description": "Service identifier for PostgreSQL"
                                      },
                                      {
                                        "name": "PrivateDNSZones",
                                        "value": "PrivateDNSZones",
                                        "description": "Service identifier for Private DNS Zones"
                                      },
                                      {
                                        "name": "ServiceBus",
                                        "value": "ServiceBus",
                                        "description": "Service identifier for Service Bus"
                                      },
                                      {
                                        "name": "Storage",
                                        "value": "Storage",
                                        "description": "Service identifier for Storage"
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "type": "string",
                                  "description": "Service name.",
                                  "readOnly": true
                                },
                                "option": {
                                  "type": "string",
                                  "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                                  "enum": [
                                    "Allow",
                                    "Deny",
                                    "ExceptionOnly",
                                    "NotApplicable"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "enforcement": {
                                  "type": "string",
                                  "description": "Initiative enforcement (Enabled or Disabled).",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "policyAction": {
                                  "type": "string",
                                  "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                                  "enum": [
                                    "AuditOnly",
                                    "Enforce",
                                    "None"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "initiatives": {
                                  "type": "array",
                                  "description": "Initiatives associated with this service.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "serviceId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "policyOverride": {
                            "type": "string",
                            "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                            "enum": [
                              "Enclave",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "communityRoleAssignments": {
                            "type": "array",
                            "description": "Community role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "firewallSku": {
                            "type": "string",
                            "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                            "default": "Standard",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "FirewallSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Basic",
                                  "value": "Basic",
                                  "description": "FirewallSKU Basic"
                                },
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "FirwallSKU Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium",
                                  "description": "FirewallSKU Premium"
                                }
                              ]
                            }
                          },
                          "approvalSettings": {
                            "description": "Approval requirements for various actions on the community's resources.",
                            "type": "object",
                            "properties": {
                              "endpointCreation": {
                                "description": "Approval required for endpoint creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "endpointUpdate": {
                                "description": "Approval required for endpoint update (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "endpointDeletion": {
                                "description": "Approval required for endpoint deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionCreation": {
                                "description": "Approval required for enclave connection creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionUpdate": {
                                "description": "Approval required for enclave connection update (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionDeletion": {
                                "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "enclaveCreation": {
                                "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "enclaveDeletion": {
                                "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "maintenanceMode": {
                                "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "serviceCatalogDeployment": {
                                "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalCreation": {
                                "description": "Notification will be sent on creation of an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalAction": {
                                "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalDeletion": {
                                "description": "Notification will be sent on deletion of an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "mandatoryApprovers": {
                                "type": "array",
                                "description": "List of mandatory approvers for the approval request",
                                "items": {
                                  "type": "object",
                                  "description": "Approver Metadata for approvals request.",
                                  "properties": {
                                    "approverEntraId": {
                                      "type": "string",
                                      "description": "EntraId of the approver"
                                    }
                                  },
                                  "required": [
                                    "approverEntraId"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "approverEntraId"
                                ]
                              },
                              "minimumApproversRequired": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Minimum number of approvers required for the approval request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "maintenanceModeConfiguration": {
                            "description": "Maintenance Mode configuration.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Current mode of Maintenance Mode Configuration",
                                "default": "Off",
                                "enum": [
                                  "On",
                                  "CanNotDelete",
                                  "Off",
                                  "General",
                                  "Advanced"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              },
                              "principals": {
                                "type": "array",
                                "description": "The user, group or service principal object affected by Maintenance Mode",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Principal for maintenance mode or role assignments",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The object id associated with the principal"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                                      "enum": [
                                        "User",
                                        "Group",
                                        "ServicePrincipal"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type"
                                  ]
                                }
                              },
                              "justification": {
                                "type": "string",
                                "description": "Justification for entering or exiting Maintenance Mode",
                                "default": "Off",
                                "enum": [
                                  "Networking",
                                  "Governance",
                                  "Off"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListBySubscription",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CommunityEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CommunityEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "CommunityEndpoint Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "ruleCollection": {
                            "type": "array",
                            "description": "Community Endpoint Rule Collection.",
                            "items": {
                              "type": "object",
                              "description": "Base type for destination rules.",
                              "properties": {
                                "destinationType": {
                                  "description": "Destination Type.",
                                  "type": "string",
                                  "enum": [
                                    "FQDN",
                                    "FQDNTag",
                                    "IPAddress",
                                    "PrivateNetwork"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DestinationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "FQDN",
                                        "value": "FQDN",
                                        "description": "DestinationType Type FQDN"
                                      },
                                      {
                                        "name": "FQDNTag",
                                        "value": "FQDNTag",
                                        "description": "DestinationType Type FQDNTag"
                                      },
                                      {
                                        "name": "IPAddress",
                                        "value": "IPAddress",
                                        "description": "DestinationType Type IPAddress"
                                      },
                                      {
                                        "name": "PrivateNetwork",
                                        "value": "PrivateNetwork",
                                        "description": "DestinationType Type PrivateNetwork"
                                      }
                                    ]
                                  }
                                },
                                "protocols": {
                                  "type": "array",
                                  "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                                  "items": {
                                    "type": "string",
                                    "description": "Community Endpoint Protocol Enum",
                                    "enum": [
                                      "ANY",
                                      "TCP",
                                      "UDP",
                                      "ICMP",
                                      "ESP",
                                      "AH",
                                      "HTTPS",
                                      "HTTP"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CommunityEndpointProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ANY",
                                          "value": "ANY",
                                          "description": "CommunityEndpointProtocol Type ANY"
                                        },
                                        {
                                          "name": "TCP",
                                          "value": "TCP",
                                          "description": "CommunityEndpointProtocol Type TCP"
                                        },
                                        {
                                          "name": "UDP",
                                          "value": "UDP",
                                          "description": "CommunityEndpointProtocol Type UDP"
                                        },
                                        {
                                          "name": "ICMP",
                                          "value": "ICMP",
                                          "description": "CommunityEndpointProtocol Type ICMP"
                                        },
                                        {
                                          "name": "ESP",
                                          "value": "ESP",
                                          "description": "CommunityEndpointProtocol Type ESP"
                                        },
                                        {
                                          "name": "AH",
                                          "value": "AH",
                                          "description": "CommunityEndpointProtocol Type AH"
                                        },
                                        {
                                          "name": "HTTPS",
                                          "value": "HTTPS",
                                          "description": "CommunityEndpointProtocol Type HTTPS"
                                        },
                                        {
                                          "name": "HTTP",
                                          "value": "HTTP",
                                          "description": "CommunityEndpointProtocol Type HTTP"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "transitHubResourceId": {
                                  "description": "Transit Hub Resource Id.",
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Mission/communities/transitHubs"
                                      }
                                    ]
                                  }
                                },
                                "endpointRuleName": {
                                  "type": "string",
                                  "description": "Endpoint Rule Name."
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                                },
                                "ports": {
                                  "type": "string",
                                  "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by community endpoint.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "ruleCollection"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListBySubscription",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a TransitHubResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The TransitHubResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "TransitHub Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "state": {
                            "description": "The state of the transitHub.",
                            "type": "string",
                            "enum": [
                              "PendingApproval",
                              "Approved",
                              "PendingUpdate",
                              "Active",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "TransitHubState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "TransitHubState Type PendingApproval"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "TransitHubState Type Approved"
                                },
                                {
                                  "name": "PendingUpdate",
                                  "value": "PendingUpdate",
                                  "description": "TransitHubState Type PendingUpdate"
                                },
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "TransitHubState Type Active"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "TransitHubState Type Failed"
                                }
                              ]
                            }
                          },
                          "transitOption": {
                            "description": "The TransitOption of the transitHub.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Transit Option Type.",
                                "type": "string",
                                "enum": [
                                  "ExpressRoute",
                                  "Gateway",
                                  "Peering"
                                ],
                                "x-ms-enum": {
                                  "name": "TransitOptionType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "ExpressRoute",
                                      "value": "ExpressRoute",
                                      "description": "TransitOptionType ExpressRoute"
                                    },
                                    {
                                      "name": "Gateway",
                                      "value": "Gateway",
                                      "description": "TransitOptionType Gateway"
                                    },
                                    {
                                      "name": "Peering",
                                      "value": "Peering",
                                      "description": "TransitOptionType Peering"
                                    }
                                  ]
                                }
                              },
                              "params": {
                                "description": "Transit Option Params",
                                "type": "object",
                                "properties": {
                                  "scaleUnits": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Transit Option Params scaleUnits."
                                  },
                                  "remoteVirtualNetworkId": {
                                    "description": "Transit Option Params remoteVirtualNetworkId.",
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.Network/virtualNetworks"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids modified by transitHubs.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListBySubscription",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveConnectionResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveConnectionResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "EnclaveConnection Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "The state of the enclaveConnection.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "PendingApproval",
                              "PendingUpdate",
                              "Approved",
                              "Active",
                              "Failed",
                              "Connected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "EnclaveConnectionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "EnclaveConnectionState Type Pending Approval"
                                },
                                {
                                  "name": "PendingUpdate",
                                  "value": "PendingUpdate",
                                  "description": "EnclaveConnectionState Type Pending Update"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "EnclaveConnectionState Type Approved"
                                },
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "EnclaveConnectionState Type Active"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "EnclaveConnectionState Type Failed"
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "EnclaveConnectionState Type Connected"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "EnclaveConnectionState Type Disconnected"
                                }
                              ]
                            }
                          },
                          "communityResourceId": {
                            "description": "Community Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities"
                                }
                              ]
                            }
                          },
                          "sourceResourceId": {
                            "description": "Source Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/virtualEnclaves"
                                },
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "sourceCidr": {
                            "type": "string",
                            "description": "Source CIDR."
                          },
                          "destinationEndpointId": {
                            "description": "Destination Endpoint Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                                },
                                {
                                  "type": "Microsoft.Mission/communities/communityEndpoints"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids modified by enclave Connections.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "communityResourceId",
                          "sourceResourceId",
                          "destinationEndpointId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListBySubscription",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Virtual Enclave Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "enclaveVirtualNetwork": {
                            "description": "Virtual Network.",
                            "type": "object",
                            "properties": {
                              "networkName": {
                                "type": "string",
                                "description": "Network Name."
                              },
                              "networkSize": {
                                "type": "string",
                                "description": "Network Size.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "customCidrRange": {
                                "type": "string",
                                "description": "Custom CIDR Range.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "subnetConfigurations": {
                                "type": "array",
                                "description": "Subnet Configurations.",
                                "items": {
                                  "type": "object",
                                  "description": "Subnet Configuration",
                                  "properties": {
                                    "subnetName": {
                                      "type": "string",
                                      "description": "Subnet name."
                                    },
                                    "subnetResourceId": {
                                      "description": "Subnet Resource ID.",
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/virtualNetworks/subnets"
                                          }
                                        ]
                                      }
                                    },
                                    "networkPrefixSize": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Network prefix size."
                                    },
                                    "subnetDelegation": {
                                      "type": "string",
                                      "description": "Subnet delegation."
                                    },
                                    "addressPrefix": {
                                      "type": "string",
                                      "description": "Address prefix.",
                                      "readOnly": true
                                    },
                                    "networkSecurityGroupResourceId": {
                                      "description": "Network security group ID.",
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/networkSecurityGroups"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "subnetName",
                                    "networkPrefixSize"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "allowSubnetCommunication": {
                                "type": "boolean",
                                "description": "Allow Subnet Communication.",
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "enclaveAddressSpaces": {
                            "description": "Enclave Address Spaces",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "enclaveAddressSpace": {
                                "type": "string",
                                "description": "Enclave Address Space"
                              },
                              "managedAddressSpace": {
                                "type": "string",
                                "description": "Managed Address Space"
                              }
                            }
                          },
                          "communityResourceId": {
                            "description": "Community Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by Virtual Enclave.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "managedResourceGroupName": {
                            "type": "string",
                            "description": "Managed resource group name.",
                            "readOnly": true
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          },
                          "bastionEnabled": {
                            "type": "boolean",
                            "description": "Deploy Bastion service (True or False).",
                            "default": false
                          },
                          "enclaveRoleAssignments": {
                            "type": "array",
                            "description": "Enclave role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "workloadRoleAssignments": {
                            "type": "array",
                            "description": "Workload role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "governedServiceList": {
                            "type": "array",
                            "description": "Enclave specific policies",
                            "items": {
                              "type": "object",
                              "description": "GovernedServiceItem Properties",
                              "properties": {
                                "serviceId": {
                                  "description": "Service ID",
                                  "type": "string",
                                  "enum": [
                                    "AKS",
                                    "AppService",
                                    "AzureFirewalls",
                                    "ContainerRegistry",
                                    "CosmosDB",
                                    "DataConnectors",
                                    "Insights",
                                    "KeyVault",
                                    "Logic",
                                    "MicrosoftSQL",
                                    "Monitoring",
                                    "PostgreSQL",
                                    "PrivateDNSZones",
                                    "ServiceBus",
                                    "Storage"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceIdentifier",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AKS",
                                        "value": "AKS",
                                        "description": "Service identifier for AKS"
                                      },
                                      {
                                        "name": "AppService",
                                        "value": "AppService",
                                        "description": "Service identifier for App Service"
                                      },
                                      {
                                        "name": "AzureFirewalls",
                                        "value": "AzureFirewalls",
                                        "description": "Service identifier for Azure Firewalls"
                                      },
                                      {
                                        "name": "ContainerRegistry",
                                        "value": "ContainerRegistry",
                                        "description": "Service identifier for Container Registry"
                                      },
                                      {
                                        "name": "CosmosDB",
                                        "value": "CosmosDB",
                                        "description": "Service identifier for CosmosDB"
                                      },
                                      {
                                        "name": "DataConnectors",
                                        "value": "DataConnectors",
                                        "description": "Service identifier for Data Connectors"
                                      },
                                      {
                                        "name": "Insights",
                                        "value": "Insights",
                                        "description": "Service identifier for Insights"
                                      },
                                      {
                                        "name": "KeyVault",
                                        "value": "KeyVault",
                                        "description": "Service identifier for Key Vault"
                                      },
                                      {
                                        "name": "Logic",
                                        "value": "Logic",
                                        "description": "Service identifier for Logic"
                                      },
                                      {
                                        "name": "MicrosoftSql",
                                        "value": "MicrosoftSQL",
                                        "description": "Service identifier for Microsoft SQL"
                                      },
                                      {
                                        "name": "Monitoring",
                                        "value": "Monitoring",
                                        "description": "Service identifier for Monitoring"
                                      },
                                      {
                                        "name": "PostgreSql",
                                        "value": "PostgreSQL",
                                        "description": "Service identifier for PostgreSQL"
                                      },
                                      {
                                        "name": "PrivateDNSZones",
                                        "value": "PrivateDNSZones",
                                        "description": "Service identifier for Private DNS Zones"
                                      },
                                      {
                                        "name": "ServiceBus",
                                        "value": "ServiceBus",
                                        "description": "Service identifier for Service Bus"
                                      },
                                      {
                                        "name": "Storage",
                                        "value": "Storage",
                                        "description": "Service identifier for Storage"
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "type": "string",
                                  "description": "Service name.",
                                  "readOnly": true
                                },
                                "option": {
                                  "type": "string",
                                  "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                                  "enum": [
                                    "Allow",
                                    "Deny",
                                    "ExceptionOnly",
                                    "NotApplicable"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "enforcement": {
                                  "type": "string",
                                  "description": "Initiative enforcement (Enabled or Disabled).",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "policyAction": {
                                  "type": "string",
                                  "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                                  "enum": [
                                    "AuditOnly",
                                    "Enforce",
                                    "None"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "initiatives": {
                                  "type": "array",
                                  "description": "Initiatives associated with this service.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "serviceId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "enclaveDefaultSettings": {
                            "description": "Enclave default settings.",
                            "type": "object",
                            "properties": {
                              "keyVaultResourceId": {
                                "description": "Key Vault Resource Id.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.KeyVault/vaults"
                                    }
                                  ]
                                }
                              },
                              "storageAccountResourceId": {
                                "description": "Storage Account Resource Id.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Storage/storageAccounts"
                                    }
                                  ]
                                }
                              },
                              "logAnalyticsResourceIdCollection": {
                                "type": "array",
                                "description": "Log Analytics Resource Ids.",
                                "items": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.OperationalInsights/workspaces"
                                      }
                                    ]
                                  }
                                },
                                "readOnly": true
                              },
                              "diagnosticDestination": {
                                "type": "string",
                                "description": "Diagnostic Destination.",
                                "default": "EnclaveOnly",
                                "enum": [
                                  "CommunityOnly",
                                  "EnclaveOnly",
                                  "Both"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticDestination",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "CommunityOnly",
                                      "value": "CommunityOnly",
                                      "description": "DiagnosticDestination Type CommunityOnly"
                                    },
                                    {
                                      "name": "EnclaveOnly",
                                      "value": "EnclaveOnly",
                                      "description": "DiagnosticDestination Type EnclaveOnly"
                                    },
                                    {
                                      "name": "Both",
                                      "value": "Both",
                                      "description": "DiagnosticDestination Type Both"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maintenanceModeConfiguration": {
                            "description": "Maintenance Mode configuration.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Current mode of Maintenance Mode Configuration",
                                "default": "Off",
                                "enum": [
                                  "On",
                                  "CanNotDelete",
                                  "Off",
                                  "General",
                                  "Advanced"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              },
                              "principals": {
                                "type": "array",
                                "description": "The user, group or service principal object affected by Maintenance Mode",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Principal for maintenance mode or role assignments",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The object id associated with the principal"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                                      "enum": [
                                        "User",
                                        "Group",
                                        "ServicePrincipal"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type"
                                  ]
                                }
                              },
                              "justification": {
                                "type": "string",
                                "description": "Justification for entering or exiting Maintenance Mode",
                                "default": "Off",
                                "enum": [
                                  "Networking",
                                  "Governance",
                                  "Off"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "enclaveVirtualNetwork",
                          "communityResourceId"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListBySubscription",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "EnclaveEndpoint Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "ruleCollection": {
                            "type": "array",
                            "description": "Enclave Endpoint Rule Collection.",
                            "items": {
                              "type": "object",
                              "description": "Enclave Endpoint Rule Properties",
                              "properties": {
                                "protocols": {
                                  "type": "array",
                                  "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                                  "items": {
                                    "type": "string",
                                    "description": "Enclave Endpoint Protocol Enum",
                                    "enum": [
                                      "ANY",
                                      "TCP",
                                      "UDP",
                                      "ICMP",
                                      "ESP",
                                      "AH"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnclaveEndpointProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ANY",
                                          "value": "ANY",
                                          "description": "EndpointProtocol Type ANY"
                                        },
                                        {
                                          "name": "TCP",
                                          "value": "TCP",
                                          "description": "EndpointProtocol Type TCP"
                                        },
                                        {
                                          "name": "UDP",
                                          "value": "UDP",
                                          "description": "EndpointProtocol Type UDP"
                                        },
                                        {
                                          "name": "ICMP",
                                          "value": "ICMP",
                                          "description": "EndpointProtocol Type ICMP"
                                        },
                                        {
                                          "name": "ESP",
                                          "value": "ESP",
                                          "description": "EndpointProtocol Type ESP"
                                        },
                                        {
                                          "name": "AH",
                                          "value": "AH",
                                          "description": "EndpointProtocol Type AH"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "endpointRuleName": {
                                  "type": "string",
                                  "description": "Endpoint Rule Name."
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                                },
                                "ports": {
                                  "type": "string",
                                  "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by community endpoint.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "ruleCollection"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListBySubscription",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workload Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceGroupCollection": {
                            "type": "array",
                            "description": "List of resource group ids.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListByResourceGroup",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CommunityResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CommunityResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Community Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "addressSpace": {
                            "type": "string",
                            "description": "Address Space.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dnsServers": {
                            "type": "array",
                            "description": "DNS Servers.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by communities.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "managedResourceGroupName": {
                            "type": "string",
                            "description": "Managed resource group name.",
                            "readOnly": true
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          },
                          "governedServiceList": {
                            "type": "array",
                            "description": "List of services governed by a community.",
                            "items": {
                              "type": "object",
                              "description": "GovernedServiceItem Properties",
                              "properties": {
                                "serviceId": {
                                  "description": "Service ID",
                                  "type": "string",
                                  "enum": [
                                    "AKS",
                                    "AppService",
                                    "AzureFirewalls",
                                    "ContainerRegistry",
                                    "CosmosDB",
                                    "DataConnectors",
                                    "Insights",
                                    "KeyVault",
                                    "Logic",
                                    "MicrosoftSQL",
                                    "Monitoring",
                                    "PostgreSQL",
                                    "PrivateDNSZones",
                                    "ServiceBus",
                                    "Storage"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceIdentifier",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AKS",
                                        "value": "AKS",
                                        "description": "Service identifier for AKS"
                                      },
                                      {
                                        "name": "AppService",
                                        "value": "AppService",
                                        "description": "Service identifier for App Service"
                                      },
                                      {
                                        "name": "AzureFirewalls",
                                        "value": "AzureFirewalls",
                                        "description": "Service identifier for Azure Firewalls"
                                      },
                                      {
                                        "name": "ContainerRegistry",
                                        "value": "ContainerRegistry",
                                        "description": "Service identifier for Container Registry"
                                      },
                                      {
                                        "name": "CosmosDB",
                                        "value": "CosmosDB",
                                        "description": "Service identifier for CosmosDB"
                                      },
                                      {
                                        "name": "DataConnectors",
                                        "value": "DataConnectors",
                                        "description": "Service identifier for Data Connectors"
                                      },
                                      {
                                        "name": "Insights",
                                        "value": "Insights",
                                        "description": "Service identifier for Insights"
                                      },
                                      {
                                        "name": "KeyVault",
                                        "value": "KeyVault",
                                        "description": "Service identifier for Key Vault"
                                      },
                                      {
                                        "name": "Logic",
                                        "value": "Logic",
                                        "description": "Service identifier for Logic"
                                      },
                                      {
                                        "name": "MicrosoftSql",
                                        "value": "MicrosoftSQL",
                                        "description": "Service identifier for Microsoft SQL"
                                      },
                                      {
                                        "name": "Monitoring",
                                        "value": "Monitoring",
                                        "description": "Service identifier for Monitoring"
                                      },
                                      {
                                        "name": "PostgreSql",
                                        "value": "PostgreSQL",
                                        "description": "Service identifier for PostgreSQL"
                                      },
                                      {
                                        "name": "PrivateDNSZones",
                                        "value": "PrivateDNSZones",
                                        "description": "Service identifier for Private DNS Zones"
                                      },
                                      {
                                        "name": "ServiceBus",
                                        "value": "ServiceBus",
                                        "description": "Service identifier for Service Bus"
                                      },
                                      {
                                        "name": "Storage",
                                        "value": "Storage",
                                        "description": "Service identifier for Storage"
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "type": "string",
                                  "description": "Service name.",
                                  "readOnly": true
                                },
                                "option": {
                                  "type": "string",
                                  "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                                  "enum": [
                                    "Allow",
                                    "Deny",
                                    "ExceptionOnly",
                                    "NotApplicable"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "enforcement": {
                                  "type": "string",
                                  "description": "Initiative enforcement (Enabled or Disabled).",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "policyAction": {
                                  "type": "string",
                                  "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                                  "enum": [
                                    "AuditOnly",
                                    "Enforce",
                                    "None"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "initiatives": {
                                  "type": "array",
                                  "description": "Initiatives associated with this service.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "serviceId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "policyOverride": {
                            "type": "string",
                            "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                            "enum": [
                              "Enclave",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "communityRoleAssignments": {
                            "type": "array",
                            "description": "Community role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "firewallSku": {
                            "type": "string",
                            "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                            "default": "Standard",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "FirewallSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Basic",
                                  "value": "Basic",
                                  "description": "FirewallSKU Basic"
                                },
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "FirwallSKU Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium",
                                  "description": "FirewallSKU Premium"
                                }
                              ]
                            }
                          },
                          "approvalSettings": {
                            "description": "Approval requirements for various actions on the community's resources.",
                            "type": "object",
                            "properties": {
                              "endpointCreation": {
                                "description": "Approval required for endpoint creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "endpointUpdate": {
                                "description": "Approval required for endpoint update (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "endpointDeletion": {
                                "description": "Approval required for endpoint deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionCreation": {
                                "description": "Approval required for enclave connection creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionUpdate": {
                                "description": "Approval required for enclave connection update (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "connectionDeletion": {
                                "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "enclaveCreation": {
                                "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "enclaveDeletion": {
                                "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "maintenanceMode": {
                                "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "serviceCatalogDeployment": {
                                "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalCreation": {
                                "description": "Notification will be sent on creation of an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalAction": {
                                "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "notificationOnApprovalDeletion": {
                                "description": "Notification will be sent on deletion of an Approval Request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired"
                                ],
                                "x-ms-enum": {
                                  "name": "ApprovalPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Required",
                                      "value": "Required",
                                      "description": "Approval will be required for the specified action."
                                    },
                                    {
                                      "name": "NotRequired",
                                      "value": "NotRequired",
                                      "description": "Approval will not be required for the specified action."
                                    }
                                  ]
                                }
                              },
                              "mandatoryApprovers": {
                                "type": "array",
                                "description": "List of mandatory approvers for the approval request",
                                "items": {
                                  "type": "object",
                                  "description": "Approver Metadata for approvals request.",
                                  "properties": {
                                    "approverEntraId": {
                                      "type": "string",
                                      "description": "EntraId of the approver"
                                    }
                                  },
                                  "required": [
                                    "approverEntraId"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "approverEntraId"
                                ]
                              },
                              "minimumApproversRequired": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Minimum number of approvers required for the approval request",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "maintenanceModeConfiguration": {
                            "description": "Maintenance Mode configuration.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Current mode of Maintenance Mode Configuration",
                                "default": "Off",
                                "enum": [
                                  "On",
                                  "CanNotDelete",
                                  "Off",
                                  "General",
                                  "Advanced"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              },
                              "principals": {
                                "type": "array",
                                "description": "The user, group or service principal object affected by Maintenance Mode",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Principal for maintenance mode or role assignments",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The object id associated with the principal"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                                      "enum": [
                                        "User",
                                        "Group",
                                        "ServicePrincipal"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type"
                                  ]
                                }
                              },
                              "justification": {
                                "type": "string",
                                "description": "Justification for entering or exiting Maintenance Mode",
                                "default": "Off",
                                "enum": [
                                  "Networking",
                                  "Governance",
                                  "Off"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}": {
      "get": {
        "operationId": "Community_Get",
        "tags": [
          "Community"
        ],
        "description": "Get a CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Community Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addressSpace": {
                      "type": "string",
                      "description": "Address Space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by communities.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "type": "string",
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "default": "Standard",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "endpointCreation": {
                          "description": "Approval required for endpoint creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointUpdate": {
                          "description": "Approval required for endpoint update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointDeletion": {
                          "description": "Approval required for endpoint deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionCreation": {
                          "description": "Approval required for enclave connection creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionUpdate": {
                          "description": "Approval required for enclave connection update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionDeletion": {
                          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveCreation": {
                          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveDeletion": {
                          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "maintenanceMode": {
                          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "serviceCatalogDeployment": {
                          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalCreation": {
                          "description": "Notification will be sent on creation of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalAction": {
                          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalDeletion": {
                          "description": "Notification will be sent on deletion of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        },
                        "minimumApproversRequired": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimum number of approvers required for the approval request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Community_CreateOrUpdate",
        "tags": [
          "Community"
        ],
        "description": "Create a CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Community Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addressSpace": {
                      "type": "string",
                      "description": "Address Space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by communities.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "type": "string",
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "default": "Standard",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "endpointCreation": {
                          "description": "Approval required for endpoint creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointUpdate": {
                          "description": "Approval required for endpoint update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointDeletion": {
                          "description": "Approval required for endpoint deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionCreation": {
                          "description": "Approval required for enclave connection creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionUpdate": {
                          "description": "Approval required for enclave connection update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionDeletion": {
                          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveCreation": {
                          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveDeletion": {
                          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "maintenanceMode": {
                          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "serviceCatalogDeployment": {
                          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalCreation": {
                          "description": "Notification will be sent on creation of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalAction": {
                          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalDeletion": {
                          "description": "Notification will be sent on deletion of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        },
                        "minimumApproversRequired": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimum number of approvers required for the approval request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CommunityResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Community Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addressSpace": {
                      "type": "string",
                      "description": "Address Space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by communities.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "type": "string",
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "default": "Standard",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "endpointCreation": {
                          "description": "Approval required for endpoint creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointUpdate": {
                          "description": "Approval required for endpoint update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointDeletion": {
                          "description": "Approval required for endpoint deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionCreation": {
                          "description": "Approval required for enclave connection creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionUpdate": {
                          "description": "Approval required for enclave connection update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionDeletion": {
                          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveCreation": {
                          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveDeletion": {
                          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "maintenanceMode": {
                          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "serviceCatalogDeployment": {
                          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalCreation": {
                          "description": "Notification will be sent on creation of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalAction": {
                          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalDeletion": {
                          "description": "Notification will be sent on deletion of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        },
                        "minimumApproversRequired": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimum number of approvers required for the approval request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'CommunityResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Community Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addressSpace": {
                      "type": "string",
                      "description": "Address Space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by communities.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "type": "string",
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "default": "Standard",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "endpointCreation": {
                          "description": "Approval required for endpoint creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointUpdate": {
                          "description": "Approval required for endpoint update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointDeletion": {
                          "description": "Approval required for endpoint deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionCreation": {
                          "description": "Approval required for enclave connection creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionUpdate": {
                          "description": "Approval required for enclave connection update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionDeletion": {
                          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveCreation": {
                          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveDeletion": {
                          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "maintenanceMode": {
                          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "serviceCatalogDeployment": {
                          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalCreation": {
                          "description": "Notification will be sent on creation of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalAction": {
                          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalDeletion": {
                          "description": "Notification will be sent on deletion of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        },
                        "minimumApproversRequired": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimum number of approvers required for the approval request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Community_Update",
        "tags": [
          "Community"
        ],
        "description": "Update a CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Community Patch Resource",
              "properties": {
                "properties": {
                  "description": "Community Patch properties",
                  "type": "object",
                  "properties": {
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The identities assigned to this resource by the user.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Community Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addressSpace": {
                      "type": "string",
                      "description": "Address Space.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "DNS Servers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by communities.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "List of services governed by a community.",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyOverride": {
                      "type": "string",
                      "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                      "enum": [
                        "Enclave",
                        "None"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    },
                    "communityRoleAssignments": {
                      "type": "array",
                      "description": "Community role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "firewallSku": {
                      "type": "string",
                      "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                      "default": "Standard",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FirewallSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "FirewallSKU Basic"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "FirwallSKU Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "FirewallSKU Premium"
                          }
                        ]
                      }
                    },
                    "approvalSettings": {
                      "description": "Approval requirements for various actions on the community's resources.",
                      "type": "object",
                      "properties": {
                        "endpointCreation": {
                          "description": "Approval required for endpoint creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointUpdate": {
                          "description": "Approval required for endpoint update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "endpointDeletion": {
                          "description": "Approval required for endpoint deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionCreation": {
                          "description": "Approval required for enclave connection creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionUpdate": {
                          "description": "Approval required for enclave connection update (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "connectionDeletion": {
                          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveCreation": {
                          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "enclaveDeletion": {
                          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "maintenanceMode": {
                          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "serviceCatalogDeployment": {
                          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalCreation": {
                          "description": "Notification will be sent on creation of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalAction": {
                          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "notificationOnApprovalDeletion": {
                          "description": "Notification will be sent on deletion of an Approval Request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Required",
                            "NotRequired"
                          ],
                          "x-ms-enum": {
                            "name": "ApprovalPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "Approval will be required for the specified action."
                              },
                              {
                                "name": "NotRequired",
                                "value": "NotRequired",
                                "description": "Approval will not be required for the specified action."
                              }
                            ]
                          }
                        },
                        "mandatoryApprovers": {
                          "type": "array",
                          "description": "List of mandatory approvers for the approval request",
                          "items": {
                            "type": "object",
                            "description": "Approver Metadata for approvals request.",
                            "properties": {
                              "approverEntraId": {
                                "type": "string",
                                "description": "EntraId of the approver"
                              }
                            },
                            "required": [
                              "approverEntraId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "approverEntraId"
                          ]
                        },
                        "minimumApproversRequired": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimum number of approvers required for the approval request",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Community_Delete",
        "tags": [
          "Community"
        ],
        "description": "Delete a CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/checkAddressSpaceAvailability": {
      "post": {
        "operationId": "Community_CheckAddressSpaceAvailability",
        "tags": [
          "Community"
        ],
        "description": "Checks that the IP Address Space to be allocated for this Community is available.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "checkAddressSpaceAvailabilityRequest",
            "in": "body",
            "description": "Check IP Address Space request body.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request to the action call to check address space availability.",
              "properties": {
                "communityResourceId": {
                  "description": "Resource Id of the Community",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Mission/communities"
                      }
                    ]
                  }
                },
                "enclaveVirtualNetwork": {
                  "description": "Information about the enclave virtual network",
                  "type": "object",
                  "properties": {
                    "networkName": {
                      "type": "string",
                      "description": "Network Name."
                    },
                    "networkSize": {
                      "type": "string",
                      "description": "Network Size.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "customCidrRange": {
                      "type": "string",
                      "description": "Custom CIDR Range.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "subnetConfigurations": {
                      "type": "array",
                      "description": "Subnet Configurations.",
                      "items": {
                        "type": "object",
                        "description": "Subnet Configuration",
                        "properties": {
                          "subnetName": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "subnetResourceId": {
                            "description": "Subnet Resource ID.",
                            "readOnly": true,
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            }
                          },
                          "networkPrefixSize": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Network prefix size."
                          },
                          "subnetDelegation": {
                            "type": "string",
                            "description": "Subnet delegation."
                          },
                          "addressPrefix": {
                            "type": "string",
                            "description": "Address prefix.",
                            "readOnly": true
                          },
                          "networkSecurityGroupResourceId": {
                            "description": "Network security group ID.",
                            "readOnly": true,
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/networkSecurityGroups"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "subnetName",
                          "networkPrefixSize"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "allowSubnetCommunication": {
                      "type": "boolean",
                      "description": "Allow Subnet Communication.",
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              },
              "required": [
                "communityResourceId",
                "enclaveVirtualNetwork"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response of availability of the requested address space.",
              "properties": {
                "value": {
                  "type": "boolean",
                  "description": "Boolean representing whether the address space is available."
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListByCommunityResource",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CommunityEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CommunityEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "CommunityEndpoint Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "ruleCollection": {
                            "type": "array",
                            "description": "Community Endpoint Rule Collection.",
                            "items": {
                              "type": "object",
                              "description": "Base type for destination rules.",
                              "properties": {
                                "destinationType": {
                                  "description": "Destination Type.",
                                  "type": "string",
                                  "enum": [
                                    "FQDN",
                                    "FQDNTag",
                                    "IPAddress",
                                    "PrivateNetwork"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DestinationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "FQDN",
                                        "value": "FQDN",
                                        "description": "DestinationType Type FQDN"
                                      },
                                      {
                                        "name": "FQDNTag",
                                        "value": "FQDNTag",
                                        "description": "DestinationType Type FQDNTag"
                                      },
                                      {
                                        "name": "IPAddress",
                                        "value": "IPAddress",
                                        "description": "DestinationType Type IPAddress"
                                      },
                                      {
                                        "name": "PrivateNetwork",
                                        "value": "PrivateNetwork",
                                        "description": "DestinationType Type PrivateNetwork"
                                      }
                                    ]
                                  }
                                },
                                "protocols": {
                                  "type": "array",
                                  "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                                  "items": {
                                    "type": "string",
                                    "description": "Community Endpoint Protocol Enum",
                                    "enum": [
                                      "ANY",
                                      "TCP",
                                      "UDP",
                                      "ICMP",
                                      "ESP",
                                      "AH",
                                      "HTTPS",
                                      "HTTP"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CommunityEndpointProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ANY",
                                          "value": "ANY",
                                          "description": "CommunityEndpointProtocol Type ANY"
                                        },
                                        {
                                          "name": "TCP",
                                          "value": "TCP",
                                          "description": "CommunityEndpointProtocol Type TCP"
                                        },
                                        {
                                          "name": "UDP",
                                          "value": "UDP",
                                          "description": "CommunityEndpointProtocol Type UDP"
                                        },
                                        {
                                          "name": "ICMP",
                                          "value": "ICMP",
                                          "description": "CommunityEndpointProtocol Type ICMP"
                                        },
                                        {
                                          "name": "ESP",
                                          "value": "ESP",
                                          "description": "CommunityEndpointProtocol Type ESP"
                                        },
                                        {
                                          "name": "AH",
                                          "value": "AH",
                                          "description": "CommunityEndpointProtocol Type AH"
                                        },
                                        {
                                          "name": "HTTPS",
                                          "value": "HTTPS",
                                          "description": "CommunityEndpointProtocol Type HTTPS"
                                        },
                                        {
                                          "name": "HTTP",
                                          "value": "HTTP",
                                          "description": "CommunityEndpointProtocol Type HTTP"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "transitHubResourceId": {
                                  "description": "Transit Hub Resource Id.",
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Mission/communities/transitHubs"
                                      }
                                    ]
                                  }
                                },
                                "endpointRuleName": {
                                  "type": "string",
                                  "description": "Endpoint Rule Name."
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                                },
                                "ports": {
                                  "type": "string",
                                  "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by community endpoint.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "ruleCollection"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints/{communityEndpointName}": {
      "get": {
        "operationId": "CommunityEndpoints_Get",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Get a CommunityEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "CommunityEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CommunityEndpoints_CreateOrUpdate",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Create a CommunityEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "CommunityEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CommunityEndpointResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "CommunityEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'CommunityEndpointResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "CommunityEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CommunityEndpoints_Update",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Update a CommunityEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Community Endpoint Patch Resource",
              "properties": {
                "properties": {
                  "description": "Community Endpoint Patch properties",
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "CommunityEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Community Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Base type for destination rules.",
                        "properties": {
                          "destinationType": {
                            "description": "Destination Type.",
                            "type": "string",
                            "enum": [
                              "FQDN",
                              "FQDNTag",
                              "IPAddress",
                              "PrivateNetwork"
                            ],
                            "x-ms-enum": {
                              "name": "DestinationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FQDN",
                                  "value": "FQDN",
                                  "description": "DestinationType Type FQDN"
                                },
                                {
                                  "name": "FQDNTag",
                                  "value": "FQDNTag",
                                  "description": "DestinationType Type FQDNTag"
                                },
                                {
                                  "name": "IPAddress",
                                  "value": "IPAddress",
                                  "description": "DestinationType Type IPAddress"
                                },
                                {
                                  "name": "PrivateNetwork",
                                  "value": "PrivateNetwork",
                                  "description": "DestinationType Type PrivateNetwork"
                                }
                              ]
                            }
                          },
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Community Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH",
                                "HTTPS",
                                "HTTP"
                              ],
                              "x-ms-enum": {
                                "name": "CommunityEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "CommunityEndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "CommunityEndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "CommunityEndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "CommunityEndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "CommunityEndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "CommunityEndpointProtocol Type AH"
                                  },
                                  {
                                    "name": "HTTPS",
                                    "value": "HTTPS",
                                    "description": "CommunityEndpointProtocol Type HTTPS"
                                  },
                                  {
                                    "name": "HTTP",
                                    "value": "HTTP",
                                    "description": "CommunityEndpointProtocol Type HTTP"
                                  }
                                ]
                              }
                            }
                          },
                          "transitHubResourceId": {
                            "description": "Transit Hub Resource Id.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CommunityEndpoints_Delete",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Delete a CommunityEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints/{communityEndpointName}/handleApprovalCreation": {
      "post": {
        "operationId": "CommunityEndpoints_HandleApprovalCreation",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Callback that triggers on approval state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update",
                    "Reset"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status indicating 'Approved' or 'Rejected'",
                  "enum": [
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload requested by client upon approval action"
                }
              },
              "required": [
                "resourceRequestAction",
                "approvalStatus"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints/{communityEndpointName}/handleApprovalDeletion": {
      "post": {
        "operationId": "CommunityEndpoints_HandleApprovalDeletion",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Callback that triggers on approval deletion state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "resourceRequestAction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListByCommunityResource",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by CommunityResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a TransitHubResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The TransitHubResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "TransitHub Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "state": {
                            "description": "The state of the transitHub.",
                            "type": "string",
                            "enum": [
                              "PendingApproval",
                              "Approved",
                              "PendingUpdate",
                              "Active",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "TransitHubState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "TransitHubState Type PendingApproval"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "TransitHubState Type Approved"
                                },
                                {
                                  "name": "PendingUpdate",
                                  "value": "PendingUpdate",
                                  "description": "TransitHubState Type PendingUpdate"
                                },
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "TransitHubState Type Active"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "TransitHubState Type Failed"
                                }
                              ]
                            }
                          },
                          "transitOption": {
                            "description": "The TransitOption of the transitHub.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Transit Option Type.",
                                "type": "string",
                                "enum": [
                                  "ExpressRoute",
                                  "Gateway",
                                  "Peering"
                                ],
                                "x-ms-enum": {
                                  "name": "TransitOptionType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "ExpressRoute",
                                      "value": "ExpressRoute",
                                      "description": "TransitOptionType ExpressRoute"
                                    },
                                    {
                                      "name": "Gateway",
                                      "value": "Gateway",
                                      "description": "TransitOptionType Gateway"
                                    },
                                    {
                                      "name": "Peering",
                                      "value": "Peering",
                                      "description": "TransitOptionType Peering"
                                    }
                                  ]
                                }
                              },
                              "params": {
                                "description": "Transit Option Params",
                                "type": "object",
                                "properties": {
                                  "scaleUnits": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Transit Option Params scaleUnits."
                                  },
                                  "remoteVirtualNetworkId": {
                                    "description": "Transit Option Params remoteVirtualNetworkId.",
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.Network/virtualNetworks"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids modified by transitHubs.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs/{transitHubName}": {
      "get": {
        "operationId": "TransitHub_Get",
        "tags": [
          "TransitHub"
        ],
        "description": "Get a TransitHubResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "TransitHub Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by transitHubs.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "TransitHub_CreateOrUpdate",
        "tags": [
          "TransitHub"
        ],
        "description": "Create a TransitHubResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "TransitHub Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by transitHubs.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TransitHubResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "TransitHub Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by transitHubs.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'TransitHubResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "TransitHub Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by transitHubs.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "TransitHub_Update",
        "tags": [
          "TransitHub"
        ],
        "description": "Update a TransitHubResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "TH Patch Resource",
              "properties": {
                "properties": {
                  "description": "The TransitHub resource.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "TransitHub Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "The state of the transitHub.",
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "Approved",
                        "PendingUpdate",
                        "Active",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "TransitHubState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "TransitHubState Type PendingApproval"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "TransitHubState Type Approved"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "TransitHubState Type PendingUpdate"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "TransitHubState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "TransitHubState Type Failed"
                          }
                        ]
                      }
                    },
                    "transitOption": {
                      "description": "The TransitOption of the transitHub.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transit Option Type.",
                          "type": "string",
                          "enum": [
                            "ExpressRoute",
                            "Gateway",
                            "Peering"
                          ],
                          "x-ms-enum": {
                            "name": "TransitOptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ExpressRoute",
                                "value": "ExpressRoute",
                                "description": "TransitOptionType ExpressRoute"
                              },
                              {
                                "name": "Gateway",
                                "value": "Gateway",
                                "description": "TransitOptionType Gateway"
                              },
                              {
                                "name": "Peering",
                                "value": "Peering",
                                "description": "TransitOptionType Peering"
                              }
                            ]
                          }
                        },
                        "params": {
                          "description": "Transit Option Params",
                          "type": "object",
                          "properties": {
                            "scaleUnits": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Transit Option Params scaleUnits."
                            },
                            "remoteVirtualNetworkId": {
                              "description": "Transit Option Params remoteVirtualNetworkId.",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by transitHubs.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "TransitHub_Delete",
        "tags": [
          "TransitHub"
        ],
        "description": "Delete a TransitHubResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListByResourceGroup",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveConnectionResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveConnectionResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "EnclaveConnection Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "The state of the enclaveConnection.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "PendingApproval",
                              "PendingUpdate",
                              "Approved",
                              "Active",
                              "Failed",
                              "Connected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "EnclaveConnectionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "EnclaveConnectionState Type Pending Approval"
                                },
                                {
                                  "name": "PendingUpdate",
                                  "value": "PendingUpdate",
                                  "description": "EnclaveConnectionState Type Pending Update"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "EnclaveConnectionState Type Approved"
                                },
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "EnclaveConnectionState Type Active"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "EnclaveConnectionState Type Failed"
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "EnclaveConnectionState Type Connected"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "EnclaveConnectionState Type Disconnected"
                                }
                              ]
                            }
                          },
                          "communityResourceId": {
                            "description": "Community Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities"
                                }
                              ]
                            }
                          },
                          "sourceResourceId": {
                            "description": "Source Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/virtualEnclaves"
                                },
                                {
                                  "type": "Microsoft.Mission/communities/transitHubs"
                                }
                              ]
                            }
                          },
                          "sourceCidr": {
                            "type": "string",
                            "description": "Source CIDR."
                          },
                          "destinationEndpointId": {
                            "description": "Destination Endpoint Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                                },
                                {
                                  "type": "Microsoft.Mission/communities/communityEndpoints"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids modified by enclave Connections.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "communityResourceId",
                          "sourceResourceId",
                          "destinationEndpointId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}": {
      "get": {
        "operationId": "EnclaveConnection_Get",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Get a EnclaveConnectionResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "EnclaveConnection Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the enclaveConnection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "PendingUpdate",
                        "Approved",
                        "Active",
                        "Failed",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveConnectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "EnclaveConnectionState Type Pending Approval"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "EnclaveConnectionState Type Pending Update"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "EnclaveConnectionState Type Approved"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "EnclaveConnectionState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "EnclaveConnectionState Type Failed"
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "EnclaveConnectionState Type Connected"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "EnclaveConnectionState Type Disconnected"
                          }
                        ]
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "description": "Source Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves"
                          },
                          {
                            "type": "Microsoft.Mission/communities/transitHubs"
                          }
                        ]
                      }
                    },
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    },
                    "destinationEndpointId": {
                      "description": "Destination Endpoint Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                          },
                          {
                            "type": "Microsoft.Mission/communities/communityEndpoints"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by enclave Connections.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "communityResourceId",
                    "sourceResourceId",
                    "destinationEndpointId"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "EnclaveConnection_CreateOrUpdate",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Create a EnclaveConnectionResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "EnclaveConnection Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the enclaveConnection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "PendingUpdate",
                        "Approved",
                        "Active",
                        "Failed",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveConnectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "EnclaveConnectionState Type Pending Approval"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "EnclaveConnectionState Type Pending Update"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "EnclaveConnectionState Type Approved"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "EnclaveConnectionState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "EnclaveConnectionState Type Failed"
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "EnclaveConnectionState Type Connected"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "EnclaveConnectionState Type Disconnected"
                          }
                        ]
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "description": "Source Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves"
                          },
                          {
                            "type": "Microsoft.Mission/communities/transitHubs"
                          }
                        ]
                      }
                    },
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    },
                    "destinationEndpointId": {
                      "description": "Destination Endpoint Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                          },
                          {
                            "type": "Microsoft.Mission/communities/communityEndpoints"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by enclave Connections.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "communityResourceId",
                    "sourceResourceId",
                    "destinationEndpointId"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveConnectionResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "EnclaveConnection Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the enclaveConnection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "PendingUpdate",
                        "Approved",
                        "Active",
                        "Failed",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveConnectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "EnclaveConnectionState Type Pending Approval"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "EnclaveConnectionState Type Pending Update"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "EnclaveConnectionState Type Approved"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "EnclaveConnectionState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "EnclaveConnectionState Type Failed"
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "EnclaveConnectionState Type Connected"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "EnclaveConnectionState Type Disconnected"
                          }
                        ]
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "description": "Source Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves"
                          },
                          {
                            "type": "Microsoft.Mission/communities/transitHubs"
                          }
                        ]
                      }
                    },
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    },
                    "destinationEndpointId": {
                      "description": "Destination Endpoint Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                          },
                          {
                            "type": "Microsoft.Mission/communities/communityEndpoints"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by enclave Connections.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "communityResourceId",
                    "sourceResourceId",
                    "destinationEndpointId"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'EnclaveConnectionResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "EnclaveConnection Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the enclaveConnection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "PendingUpdate",
                        "Approved",
                        "Active",
                        "Failed",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveConnectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "EnclaveConnectionState Type Pending Approval"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "EnclaveConnectionState Type Pending Update"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "EnclaveConnectionState Type Approved"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "EnclaveConnectionState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "EnclaveConnectionState Type Failed"
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "EnclaveConnectionState Type Connected"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "EnclaveConnectionState Type Disconnected"
                          }
                        ]
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "description": "Source Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves"
                          },
                          {
                            "type": "Microsoft.Mission/communities/transitHubs"
                          }
                        ]
                      }
                    },
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    },
                    "destinationEndpointId": {
                      "description": "Destination Endpoint Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                          },
                          {
                            "type": "Microsoft.Mission/communities/communityEndpoints"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by enclave Connections.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "communityResourceId",
                    "sourceResourceId",
                    "destinationEndpointId"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "EnclaveConnection_Update",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Update a EnclaveConnectionResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Enclave Connection Patch Resource",
              "properties": {
                "properties": {
                  "description": "Enclave Connection Patch properties",
                  "type": "object",
                  "properties": {
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "EnclaveConnection Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "The state of the enclaveConnection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "PendingApproval",
                        "PendingUpdate",
                        "Approved",
                        "Active",
                        "Failed",
                        "Connected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveConnectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "EnclaveConnectionState Type Pending Approval"
                          },
                          {
                            "name": "PendingUpdate",
                            "value": "PendingUpdate",
                            "description": "EnclaveConnectionState Type Pending Update"
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "EnclaveConnectionState Type Approved"
                          },
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "EnclaveConnectionState Type Active"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "EnclaveConnectionState Type Failed"
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "EnclaveConnectionState Type Connected"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "EnclaveConnectionState Type Disconnected"
                          }
                        ]
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "description": "Source Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves"
                          },
                          {
                            "type": "Microsoft.Mission/communities/transitHubs"
                          }
                        ]
                      }
                    },
                    "sourceCidr": {
                      "type": "string",
                      "description": "Source CIDR."
                    },
                    "destinationEndpointId": {
                      "description": "Destination Endpoint Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                          },
                          {
                            "type": "Microsoft.Mission/communities/communityEndpoints"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids modified by enclave Connections.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "communityResourceId",
                    "sourceResourceId",
                    "destinationEndpointId"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EnclaveConnection_Delete",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Delete a EnclaveConnectionResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}/handleApprovalCreation": {
      "post": {
        "operationId": "EnclaveConnection_HandleApprovalCreation",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Callback that triggers on approval state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update",
                    "Reset"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status indicating 'Approved' or 'Rejected'",
                  "enum": [
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload requested by client upon approval action"
                }
              },
              "required": [
                "resourceRequestAction",
                "approvalStatus"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}/handleApprovalDeletion": {
      "post": {
        "operationId": "EnclaveConnection_HandleApprovalDeletion",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Callback that triggers on approval deletion state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "resourceRequestAction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListByResourceGroup",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Virtual Enclave Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "enclaveVirtualNetwork": {
                            "description": "Virtual Network.",
                            "type": "object",
                            "properties": {
                              "networkName": {
                                "type": "string",
                                "description": "Network Name."
                              },
                              "networkSize": {
                                "type": "string",
                                "description": "Network Size.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "customCidrRange": {
                                "type": "string",
                                "description": "Custom CIDR Range.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "subnetConfigurations": {
                                "type": "array",
                                "description": "Subnet Configurations.",
                                "items": {
                                  "type": "object",
                                  "description": "Subnet Configuration",
                                  "properties": {
                                    "subnetName": {
                                      "type": "string",
                                      "description": "Subnet name."
                                    },
                                    "subnetResourceId": {
                                      "description": "Subnet Resource ID.",
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/virtualNetworks/subnets"
                                          }
                                        ]
                                      }
                                    },
                                    "networkPrefixSize": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Network prefix size."
                                    },
                                    "subnetDelegation": {
                                      "type": "string",
                                      "description": "Subnet delegation."
                                    },
                                    "addressPrefix": {
                                      "type": "string",
                                      "description": "Address prefix.",
                                      "readOnly": true
                                    },
                                    "networkSecurityGroupResourceId": {
                                      "description": "Network security group ID.",
                                      "readOnly": true,
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Network/networkSecurityGroups"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "subnetName",
                                    "networkPrefixSize"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "allowSubnetCommunication": {
                                "type": "boolean",
                                "description": "Allow Subnet Communication.",
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "enclaveAddressSpaces": {
                            "description": "Enclave Address Spaces",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "enclaveAddressSpace": {
                                "type": "string",
                                "description": "Enclave Address Space"
                              },
                              "managedAddressSpace": {
                                "type": "string",
                                "description": "Managed Address Space"
                              }
                            }
                          },
                          "communityResourceId": {
                            "description": "Community Resource Id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Mission/communities"
                                }
                              ]
                            }
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by Virtual Enclave.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "managedResourceGroupName": {
                            "type": "string",
                            "description": "Managed resource group name.",
                            "readOnly": true
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          },
                          "bastionEnabled": {
                            "type": "boolean",
                            "description": "Deploy Bastion service (True or False).",
                            "default": false
                          },
                          "enclaveRoleAssignments": {
                            "type": "array",
                            "description": "Enclave role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "workloadRoleAssignments": {
                            "type": "array",
                            "description": "Workload role assignments",
                            "items": {
                              "type": "object",
                              "description": "Role assignment item that indicates which principals should be assigned this role definition",
                              "properties": {
                                "roleDefinitionId": {
                                  "type": "string",
                                  "description": "Role definition identifier"
                                },
                                "principals": {
                                  "type": "array",
                                  "description": "List of principal IDs to which to assign this role definition",
                                  "items": {
                                    "type": "object",
                                    "description": "Principal for maintenance mode or role assignments",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The object id associated with the principal"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                                        "enum": [
                                          "User",
                                          "Group",
                                          "ServicePrincipal"
                                        ],
                                        "x-ms-enum": {
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "roleDefinitionId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "governedServiceList": {
                            "type": "array",
                            "description": "Enclave specific policies",
                            "items": {
                              "type": "object",
                              "description": "GovernedServiceItem Properties",
                              "properties": {
                                "serviceId": {
                                  "description": "Service ID",
                                  "type": "string",
                                  "enum": [
                                    "AKS",
                                    "AppService",
                                    "AzureFirewalls",
                                    "ContainerRegistry",
                                    "CosmosDB",
                                    "DataConnectors",
                                    "Insights",
                                    "KeyVault",
                                    "Logic",
                                    "MicrosoftSQL",
                                    "Monitoring",
                                    "PostgreSQL",
                                    "PrivateDNSZones",
                                    "ServiceBus",
                                    "Storage"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceIdentifier",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AKS",
                                        "value": "AKS",
                                        "description": "Service identifier for AKS"
                                      },
                                      {
                                        "name": "AppService",
                                        "value": "AppService",
                                        "description": "Service identifier for App Service"
                                      },
                                      {
                                        "name": "AzureFirewalls",
                                        "value": "AzureFirewalls",
                                        "description": "Service identifier for Azure Firewalls"
                                      },
                                      {
                                        "name": "ContainerRegistry",
                                        "value": "ContainerRegistry",
                                        "description": "Service identifier for Container Registry"
                                      },
                                      {
                                        "name": "CosmosDB",
                                        "value": "CosmosDB",
                                        "description": "Service identifier for CosmosDB"
                                      },
                                      {
                                        "name": "DataConnectors",
                                        "value": "DataConnectors",
                                        "description": "Service identifier for Data Connectors"
                                      },
                                      {
                                        "name": "Insights",
                                        "value": "Insights",
                                        "description": "Service identifier for Insights"
                                      },
                                      {
                                        "name": "KeyVault",
                                        "value": "KeyVault",
                                        "description": "Service identifier for Key Vault"
                                      },
                                      {
                                        "name": "Logic",
                                        "value": "Logic",
                                        "description": "Service identifier for Logic"
                                      },
                                      {
                                        "name": "MicrosoftSql",
                                        "value": "MicrosoftSQL",
                                        "description": "Service identifier for Microsoft SQL"
                                      },
                                      {
                                        "name": "Monitoring",
                                        "value": "Monitoring",
                                        "description": "Service identifier for Monitoring"
                                      },
                                      {
                                        "name": "PostgreSql",
                                        "value": "PostgreSQL",
                                        "description": "Service identifier for PostgreSQL"
                                      },
                                      {
                                        "name": "PrivateDNSZones",
                                        "value": "PrivateDNSZones",
                                        "description": "Service identifier for Private DNS Zones"
                                      },
                                      {
                                        "name": "ServiceBus",
                                        "value": "ServiceBus",
                                        "description": "Service identifier for Service Bus"
                                      },
                                      {
                                        "name": "Storage",
                                        "value": "Storage",
                                        "description": "Service identifier for Storage"
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "type": "string",
                                  "description": "Service name.",
                                  "readOnly": true
                                },
                                "option": {
                                  "type": "string",
                                  "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                                  "enum": [
                                    "Allow",
                                    "Deny",
                                    "ExceptionOnly",
                                    "NotApplicable"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "enforcement": {
                                  "type": "string",
                                  "description": "Initiative enforcement (Enabled or Disabled).",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "policyAction": {
                                  "type": "string",
                                  "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                                  "enum": [
                                    "AuditOnly",
                                    "Enforce",
                                    "None"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                },
                                "initiatives": {
                                  "type": "array",
                                  "description": "Initiatives associated with this service.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "serviceId"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "enclaveDefaultSettings": {
                            "description": "Enclave default settings.",
                            "type": "object",
                            "properties": {
                              "keyVaultResourceId": {
                                "description": "Key Vault Resource Id.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.KeyVault/vaults"
                                    }
                                  ]
                                }
                              },
                              "storageAccountResourceId": {
                                "description": "Storage Account Resource Id.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Storage/storageAccounts"
                                    }
                                  ]
                                }
                              },
                              "logAnalyticsResourceIdCollection": {
                                "type": "array",
                                "description": "Log Analytics Resource Ids.",
                                "items": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.OperationalInsights/workspaces"
                                      }
                                    ]
                                  }
                                },
                                "readOnly": true
                              },
                              "diagnosticDestination": {
                                "type": "string",
                                "description": "Diagnostic Destination.",
                                "default": "EnclaveOnly",
                                "enum": [
                                  "CommunityOnly",
                                  "EnclaveOnly",
                                  "Both"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticDestination",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "CommunityOnly",
                                      "value": "CommunityOnly",
                                      "description": "DiagnosticDestination Type CommunityOnly"
                                    },
                                    {
                                      "name": "EnclaveOnly",
                                      "value": "EnclaveOnly",
                                      "description": "DiagnosticDestination Type EnclaveOnly"
                                    },
                                    {
                                      "name": "Both",
                                      "value": "Both",
                                      "description": "DiagnosticDestination Type Both"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maintenanceModeConfiguration": {
                            "description": "Maintenance Mode configuration.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Current mode of Maintenance Mode Configuration",
                                "default": "Off",
                                "enum": [
                                  "On",
                                  "CanNotDelete",
                                  "Off",
                                  "General",
                                  "Advanced"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              },
                              "principals": {
                                "type": "array",
                                "description": "The user, group or service principal object affected by Maintenance Mode",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Principal for maintenance mode or role assignments",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The object id associated with the principal"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                                      "enum": [
                                        "User",
                                        "Group",
                                        "ServicePrincipal"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type"
                                  ]
                                }
                              },
                              "justification": {
                                "type": "string",
                                "description": "Justification for entering or exiting Maintenance Mode",
                                "default": "Off",
                                "enum": [
                                  "Networking",
                                  "Governance",
                                  "Off"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "enclaveVirtualNetwork",
                          "communityResourceId"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}": {
      "get": {
        "operationId": "VirtualEnclave_Get",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Get a EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "enclaveAddressSpaces": {
                      "description": "Enclave Address Spaces",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enclaveAddressSpace": {
                          "type": "string",
                          "description": "Enclave Address Space"
                        },
                        "managedAddressSpace": {
                          "type": "string",
                          "description": "Managed Address Space"
                        }
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by Virtual Enclave.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False).",
                      "default": false
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "keyVaultResourceId": {
                          "description": "Key Vault Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.KeyVault/vaults"
                              }
                            ]
                          }
                        },
                        "storageAccountResourceId": {
                          "description": "Storage Account Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "logAnalyticsResourceIdCollection": {
                          "type": "array",
                          "description": "Log Analytics Resource Ids.",
                          "items": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.OperationalInsights/workspaces"
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "diagnosticDestination": {
                          "type": "string",
                          "description": "Diagnostic Destination.",
                          "default": "EnclaveOnly",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  },
                  "required": [
                    "enclaveVirtualNetwork",
                    "communityResourceId"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualEnclave_CreateOrUpdate",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Create a EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "enclaveAddressSpaces": {
                      "description": "Enclave Address Spaces",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enclaveAddressSpace": {
                          "type": "string",
                          "description": "Enclave Address Space"
                        },
                        "managedAddressSpace": {
                          "type": "string",
                          "description": "Managed Address Space"
                        }
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by Virtual Enclave.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False).",
                      "default": false
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "keyVaultResourceId": {
                          "description": "Key Vault Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.KeyVault/vaults"
                              }
                            ]
                          }
                        },
                        "storageAccountResourceId": {
                          "description": "Storage Account Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "logAnalyticsResourceIdCollection": {
                          "type": "array",
                          "description": "Log Analytics Resource Ids.",
                          "items": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.OperationalInsights/workspaces"
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "diagnosticDestination": {
                          "type": "string",
                          "description": "Diagnostic Destination.",
                          "default": "EnclaveOnly",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  },
                  "required": [
                    "enclaveVirtualNetwork",
                    "communityResourceId"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "enclaveAddressSpaces": {
                      "description": "Enclave Address Spaces",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enclaveAddressSpace": {
                          "type": "string",
                          "description": "Enclave Address Space"
                        },
                        "managedAddressSpace": {
                          "type": "string",
                          "description": "Managed Address Space"
                        }
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by Virtual Enclave.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False).",
                      "default": false
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "keyVaultResourceId": {
                          "description": "Key Vault Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.KeyVault/vaults"
                              }
                            ]
                          }
                        },
                        "storageAccountResourceId": {
                          "description": "Storage Account Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "logAnalyticsResourceIdCollection": {
                          "type": "array",
                          "description": "Log Analytics Resource Ids.",
                          "items": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.OperationalInsights/workspaces"
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "diagnosticDestination": {
                          "type": "string",
                          "description": "Diagnostic Destination.",
                          "default": "EnclaveOnly",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  },
                  "required": [
                    "enclaveVirtualNetwork",
                    "communityResourceId"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'EnclaveResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "enclaveAddressSpaces": {
                      "description": "Enclave Address Spaces",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enclaveAddressSpace": {
                          "type": "string",
                          "description": "Enclave Address Space"
                        },
                        "managedAddressSpace": {
                          "type": "string",
                          "description": "Managed Address Space"
                        }
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by Virtual Enclave.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False).",
                      "default": false
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "keyVaultResourceId": {
                          "description": "Key Vault Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.KeyVault/vaults"
                              }
                            ]
                          }
                        },
                        "storageAccountResourceId": {
                          "description": "Storage Account Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "logAnalyticsResourceIdCollection": {
                          "type": "array",
                          "description": "Log Analytics Resource Ids.",
                          "items": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.OperationalInsights/workspaces"
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "diagnosticDestination": {
                          "type": "string",
                          "description": "Diagnostic Destination.",
                          "default": "EnclaveOnly",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  },
                  "required": [
                    "enclaveVirtualNetwork",
                    "communityResourceId"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualEnclave_Update",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Update a EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Patch Model",
              "properties": {
                "properties": {
                  "description": "Virtual Enclave Patch properties",
                  "type": "object",
                  "properties": {
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False)."
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "diagnosticDestination": {
                          "description": "Diagnostic Destination.",
                          "type": "string",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The identities assigned to this resource by the user.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Virtual Enclave Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "enclaveVirtualNetwork": {
                      "description": "Virtual Network.",
                      "type": "object",
                      "properties": {
                        "networkName": {
                          "type": "string",
                          "description": "Network Name."
                        },
                        "networkSize": {
                          "type": "string",
                          "description": "Network Size.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "customCidrRange": {
                          "type": "string",
                          "description": "Custom CIDR Range.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subnetConfigurations": {
                          "type": "array",
                          "description": "Subnet Configurations.",
                          "items": {
                            "type": "object",
                            "description": "Subnet Configuration",
                            "properties": {
                              "subnetName": {
                                "type": "string",
                                "description": "Subnet name."
                              },
                              "subnetResourceId": {
                                "description": "Subnet Resource ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                }
                              },
                              "networkPrefixSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Network prefix size."
                              },
                              "subnetDelegation": {
                                "type": "string",
                                "description": "Subnet delegation."
                              },
                              "addressPrefix": {
                                "type": "string",
                                "description": "Address prefix.",
                                "readOnly": true
                              },
                              "networkSecurityGroupResourceId": {
                                "description": "Network security group ID.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subnetName",
                              "networkPrefixSize"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "allowSubnetCommunication": {
                          "type": "boolean",
                          "description": "Allow Subnet Communication.",
                          "default": false,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "enclaveAddressSpaces": {
                      "description": "Enclave Address Spaces",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enclaveAddressSpace": {
                          "type": "string",
                          "description": "Enclave Address Space"
                        },
                        "managedAddressSpace": {
                          "type": "string",
                          "description": "Managed Address Space"
                        }
                      }
                    },
                    "communityResourceId": {
                      "description": "Community Resource Id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Mission/communities"
                          }
                        ]
                      }
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by Virtual Enclave.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "managedResourceGroupName": {
                      "type": "string",
                      "description": "Managed resource group name.",
                      "readOnly": true
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    },
                    "bastionEnabled": {
                      "type": "boolean",
                      "description": "Deploy Bastion service (True or False).",
                      "default": false
                    },
                    "enclaveRoleAssignments": {
                      "type": "array",
                      "description": "Enclave role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "workloadRoleAssignments": {
                      "type": "array",
                      "description": "Workload role assignments",
                      "items": {
                        "type": "object",
                        "description": "Role assignment item that indicates which principals should be assigned this role definition",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "Role definition identifier"
                          },
                          "principals": {
                            "type": "array",
                            "description": "List of principal IDs to which to assign this role definition",
                            "items": {
                              "type": "object",
                              "description": "Principal for maintenance mode or role assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The object id associated with the principal"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the object id. We currently allow users, groups, and service principals",
                                  "enum": [
                                    "User",
                                    "Group",
                                    "ServicePrincipal"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "roleDefinitionId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "governedServiceList": {
                      "type": "array",
                      "description": "Enclave specific policies",
                      "items": {
                        "type": "object",
                        "description": "GovernedServiceItem Properties",
                        "properties": {
                          "serviceId": {
                            "description": "Service ID",
                            "type": "string",
                            "enum": [
                              "AKS",
                              "AppService",
                              "AzureFirewalls",
                              "ContainerRegistry",
                              "CosmosDB",
                              "DataConnectors",
                              "Insights",
                              "KeyVault",
                              "Logic",
                              "MicrosoftSQL",
                              "Monitoring",
                              "PostgreSQL",
                              "PrivateDNSZones",
                              "ServiceBus",
                              "Storage"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceIdentifier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AKS",
                                  "value": "AKS",
                                  "description": "Service identifier for AKS"
                                },
                                {
                                  "name": "AppService",
                                  "value": "AppService",
                                  "description": "Service identifier for App Service"
                                },
                                {
                                  "name": "AzureFirewalls",
                                  "value": "AzureFirewalls",
                                  "description": "Service identifier for Azure Firewalls"
                                },
                                {
                                  "name": "ContainerRegistry",
                                  "value": "ContainerRegistry",
                                  "description": "Service identifier for Container Registry"
                                },
                                {
                                  "name": "CosmosDB",
                                  "value": "CosmosDB",
                                  "description": "Service identifier for CosmosDB"
                                },
                                {
                                  "name": "DataConnectors",
                                  "value": "DataConnectors",
                                  "description": "Service identifier for Data Connectors"
                                },
                                {
                                  "name": "Insights",
                                  "value": "Insights",
                                  "description": "Service identifier for Insights"
                                },
                                {
                                  "name": "KeyVault",
                                  "value": "KeyVault",
                                  "description": "Service identifier for Key Vault"
                                },
                                {
                                  "name": "Logic",
                                  "value": "Logic",
                                  "description": "Service identifier for Logic"
                                },
                                {
                                  "name": "MicrosoftSql",
                                  "value": "MicrosoftSQL",
                                  "description": "Service identifier for Microsoft SQL"
                                },
                                {
                                  "name": "Monitoring",
                                  "value": "Monitoring",
                                  "description": "Service identifier for Monitoring"
                                },
                                {
                                  "name": "PostgreSql",
                                  "value": "PostgreSQL",
                                  "description": "Service identifier for PostgreSQL"
                                },
                                {
                                  "name": "PrivateDNSZones",
                                  "value": "PrivateDNSZones",
                                  "description": "Service identifier for Private DNS Zones"
                                },
                                {
                                  "name": "ServiceBus",
                                  "value": "ServiceBus",
                                  "description": "Service identifier for Service Bus"
                                },
                                {
                                  "name": "Storage",
                                  "value": "Storage",
                                  "description": "Service identifier for Storage"
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "type": "string",
                            "description": "Service name.",
                            "readOnly": true
                          },
                          "option": {
                            "type": "string",
                            "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                            "enum": [
                              "Allow",
                              "Deny",
                              "ExceptionOnly",
                              "NotApplicable"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "enforcement": {
                            "type": "string",
                            "description": "Initiative enforcement (Enabled or Disabled).",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "policyAction": {
                            "type": "string",
                            "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                            "enum": [
                              "AuditOnly",
                              "Enforce",
                              "None"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true
                            }
                          },
                          "initiatives": {
                            "type": "array",
                            "description": "Initiatives associated with this service.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "serviceId"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "enclaveDefaultSettings": {
                      "description": "Enclave default settings.",
                      "type": "object",
                      "properties": {
                        "keyVaultResourceId": {
                          "description": "Key Vault Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.KeyVault/vaults"
                              }
                            ]
                          }
                        },
                        "storageAccountResourceId": {
                          "description": "Storage Account Resource Id.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "logAnalyticsResourceIdCollection": {
                          "type": "array",
                          "description": "Log Analytics Resource Ids.",
                          "items": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.OperationalInsights/workspaces"
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "diagnosticDestination": {
                          "type": "string",
                          "description": "Diagnostic Destination.",
                          "default": "EnclaveOnly",
                          "enum": [
                            "CommunityOnly",
                            "EnclaveOnly",
                            "Both"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticDestination",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CommunityOnly",
                                "value": "CommunityOnly",
                                "description": "DiagnosticDestination Type CommunityOnly"
                              },
                              {
                                "name": "EnclaveOnly",
                                "value": "EnclaveOnly",
                                "description": "DiagnosticDestination Type EnclaveOnly"
                              },
                              {
                                "name": "Both",
                                "value": "Both",
                                "description": "DiagnosticDestination Type Both"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceModeConfiguration": {
                      "description": "Maintenance Mode configuration.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Current mode of Maintenance Mode Configuration",
                          "default": "Off",
                          "enum": [
                            "On",
                            "CanNotDelete",
                            "Off",
                            "General",
                            "Advanced"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "principals": {
                          "type": "array",
                          "description": "The user, group or service principal object affected by Maintenance Mode",
                          "default": [],
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        },
                        "justification": {
                          "type": "string",
                          "description": "Justification for entering or exiting Maintenance Mode",
                          "default": "Off",
                          "enum": [
                            "Networking",
                            "Governance",
                            "Off"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    }
                  },
                  "required": [
                    "enclaveVirtualNetwork",
                    "communityResourceId"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualEnclave_Delete",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Delete a EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListByEnclaveResource",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EnclaveEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EnclaveEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "EnclaveEndpoint Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "ruleCollection": {
                            "type": "array",
                            "description": "Enclave Endpoint Rule Collection.",
                            "items": {
                              "type": "object",
                              "description": "Enclave Endpoint Rule Properties",
                              "properties": {
                                "protocols": {
                                  "type": "array",
                                  "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                                  "items": {
                                    "type": "string",
                                    "description": "Enclave Endpoint Protocol Enum",
                                    "enum": [
                                      "ANY",
                                      "TCP",
                                      "UDP",
                                      "ICMP",
                                      "ESP",
                                      "AH"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnclaveEndpointProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ANY",
                                          "value": "ANY",
                                          "description": "EndpointProtocol Type ANY"
                                        },
                                        {
                                          "name": "TCP",
                                          "value": "TCP",
                                          "description": "EndpointProtocol Type TCP"
                                        },
                                        {
                                          "name": "UDP",
                                          "value": "UDP",
                                          "description": "EndpointProtocol Type UDP"
                                        },
                                        {
                                          "name": "ICMP",
                                          "value": "ICMP",
                                          "description": "EndpointProtocol Type ICMP"
                                        },
                                        {
                                          "name": "ESP",
                                          "value": "ESP",
                                          "description": "EndpointProtocol Type ESP"
                                        },
                                        {
                                          "name": "AH",
                                          "value": "AH",
                                          "description": "EndpointProtocol Type AH"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "endpointRuleName": {
                                  "type": "string",
                                  "description": "Endpoint Rule Name."
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                                },
                                "ports": {
                                  "type": "string",
                                  "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "resourceCollection": {
                            "type": "array",
                            "description": "List of resource ids created by community endpoint.",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "A type definition that refers the id to an Azure Resource Manager resource."
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "ruleCollection"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints/{enclaveEndpointName}": {
      "get": {
        "operationId": "EnclaveEndpoints_Get",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Get a EnclaveEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "EnclaveEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "EnclaveEndpoints_CreateOrUpdate",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Create a EnclaveEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "EnclaveEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveEndpointResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "EnclaveEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'EnclaveEndpointResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "EnclaveEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "EnclaveEndpoints_Update",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Update a EnclaveEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Enclave Endpoint Patch Resource",
              "properties": {
                "properties": {
                  "description": "Enclave Endpoint Patch properties",
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "EnclaveEndpoint Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "ruleCollection": {
                      "type": "array",
                      "description": "Enclave Endpoint Rule Collection.",
                      "items": {
                        "type": "object",
                        "description": "Enclave Endpoint Rule Properties",
                        "properties": {
                          "protocols": {
                            "type": "array",
                            "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                            "items": {
                              "type": "string",
                              "description": "Enclave Endpoint Protocol Enum",
                              "enum": [
                                "ANY",
                                "TCP",
                                "UDP",
                                "ICMP",
                                "ESP",
                                "AH"
                              ],
                              "x-ms-enum": {
                                "name": "EnclaveEndpointProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ANY",
                                    "value": "ANY",
                                    "description": "EndpointProtocol Type ANY"
                                  },
                                  {
                                    "name": "TCP",
                                    "value": "TCP",
                                    "description": "EndpointProtocol Type TCP"
                                  },
                                  {
                                    "name": "UDP",
                                    "value": "UDP",
                                    "description": "EndpointProtocol Type UDP"
                                  },
                                  {
                                    "name": "ICMP",
                                    "value": "ICMP",
                                    "description": "EndpointProtocol Type ICMP"
                                  },
                                  {
                                    "name": "ESP",
                                    "value": "ESP",
                                    "description": "EndpointProtocol Type ESP"
                                  },
                                  {
                                    "name": "AH",
                                    "value": "AH",
                                    "description": "EndpointProtocol Type AH"
                                  }
                                ]
                              }
                            }
                          },
                          "endpointRuleName": {
                            "type": "string",
                            "description": "Endpoint Rule Name."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                          },
                          "ports": {
                            "type": "string",
                            "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "resourceCollection": {
                      "type": "array",
                      "description": "List of resource ids created by community endpoint.",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "A type definition that refers the id to an Azure Resource Manager resource."
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "ruleCollection"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EnclaveEndpoints_Delete",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Delete a EnclaveEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints/{enclaveEndpointName}/handleApprovalCreation": {
      "post": {
        "operationId": "EnclaveEndpoints_HandleApprovalCreation",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Callback that triggers on approval state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update",
                    "Reset"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status indicating 'Approved' or 'Rejected'",
                  "enum": [
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload requested by client upon approval action"
                }
              },
              "required": [
                "resourceRequestAction",
                "approvalStatus"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints/{enclaveEndpointName}/handleApprovalDeletion": {
      "post": {
        "operationId": "EnclaveEndpoints_HandleApprovalDeletion",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Callback that triggers on approval deletion state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "resourceRequestAction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/handleApprovalCreation": {
      "post": {
        "operationId": "VirtualEnclave_HandleApprovalCreation",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Callback that triggers on approval state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update",
                    "Reset"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Approval status indicating 'Approved' or 'Rejected'",
                  "enum": [
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload requested by client upon approval action"
                }
              },
              "required": [
                "resourceRequestAction",
                "approvalStatus"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/handleApprovalDeletion": {
      "post": {
        "operationId": "VirtualEnclave_HandleApprovalDeletion",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Callback that triggers on approval deletion state change.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for calling post-action",
              "properties": {
                "resourceRequestAction": {
                  "type": "string",
                  "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
                  "enum": [
                    "Create",
                    "Delete",
                    "Update"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "resourceRequestAction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body after handling of approvalCallbackRequest",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message indicating the result of the operation."
                }
              },
              "required": [
                "message"
              ]
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListByEnclaveResource",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by EnclaveResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workload Model Resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Deleting",
                              "NotSpecified",
                              "Running",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning State Type Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Provisioning State Type Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Provisioning State Type Deleting"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Provisioning State Type NotSpecified"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "Provisioning State Type Running"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Provisioning State Type Updating"
                                }
                              ]
                            }
                          },
                          "resourceGroupCollection": {
                            "type": "array",
                            "description": "List of resource group ids.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Managed-On-Behalf-Of broker resources",
                                "items": {
                                  "type": "object",
                                  "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "id"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads/{workloadName}": {
      "get": {
        "operationId": "Workload_Get",
        "tags": [
          "Workload"
        ],
        "description": "Get a WorkloadResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workload Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Workload_CreateOrUpdate",
        "tags": [
          "Workload"
        ],
        "description": "Create a WorkloadResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workload Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workload Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workload Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Workload_Update",
        "tags": [
          "Workload"
        ],
        "description": "Update a WorkloadResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workload Patch Resource",
              "properties": {
                "properties": {
                  "description": "Workload Patch properties",
                  "type": "object",
                  "properties": {
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workload Model Resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Creating",
                        "Deleting",
                        "NotSpecified",
                        "Running",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning State Type Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "Provisioning State Type Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Provisioning State Type Deleting"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "Provisioning State Type NotSpecified"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "Provisioning State Type Running"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Provisioning State Type Updating"
                          }
                        ]
                      }
                    },
                    "resourceGroupCollection": {
                      "type": "array",
                      "description": "List of resource group ids.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Managed-On-Behalf-Of broker resources",
                          "items": {
                            "type": "object",
                            "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Workload_Delete",
        "tags": [
          "Workload"
        ],
        "description": "Delete a WorkloadResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "ActionPerformed": {
      "type": "string",
      "description": "Specifies the action performed by the approver",
      "enum": [
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "ActionPerformed",
        "modelAsString": true,
        "values": [
          {
            "name": "Approved",
            "value": "Approved",
            "description": "Action was Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "Action was Rejected"
          }
        ]
      }
    },
    "ApprovalActionRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "approvalStatus": {
          "type": "string",
          "description": "Approval status indicating 'Approved' or 'Rejected'",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "approvalStatus"
      ]
    },
    "ApprovalActionResponse": {
      "type": "object",
      "description": "Response body after handling of approvalCallbackRequest",
      "properties": {
        "message": {
          "type": "string",
          "description": "Confirmation message indicating the result of the operation."
        }
      },
      "required": [
        "message"
      ]
    },
    "ApprovalCallbackRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "resourceRequestAction": {
          "type": "string",
          "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
          "enum": [
            "Create",
            "Delete",
            "Update",
            "Reset"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "approvalStatus": {
          "type": "string",
          "description": "Approval status indicating 'Approved' or 'Rejected'",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "approvalCallbackPayload": {
          "type": "string",
          "description": "Payload requested by client upon approval action"
        }
      },
      "required": [
        "resourceRequestAction",
        "approvalStatus"
      ]
    },
    "ApprovalDeletionCallbackRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "resourceRequestAction": {
          "type": "string",
          "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
          "enum": [
            "Create",
            "Delete",
            "Update"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "resourceRequestAction"
      ]
    },
    "ApprovalPatchModel": {
      "type": "object",
      "description": "Approvals patch model.",
      "properties": {
        "properties": {
          "description": "Approval Patch properties",
          "type": "object",
          "properties": {
            "parentResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Parameter for optimizing query results"
            },
            "grandparentResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Parameter for optimizing query results"
            },
            "approvers": {
              "type": "array",
              "description": "List of approvers for the approval request",
              "items": {
                "type": "object",
                "description": "Approver Metadata for approvals request.",
                "properties": {
                  "approverEntraId": {
                    "type": "string",
                    "description": "Entra ObjectID of the approver"
                  },
                  "actionPerformed": {
                    "description": "Action Performed by approver",
                    "type": "string",
                    "enum": [
                      "Approved",
                      "Rejected"
                    ],
                    "x-ms-enum": {
                      "name": "ActionPerformed",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "Action was Approved"
                        },
                        {
                          "name": "Rejected",
                          "value": "Rejected",
                          "description": "Action was Rejected"
                        }
                      ]
                    }
                  },
                  "lastUpdatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "approval request last updated at"
                  }
                },
                "required": [
                  "approverEntraId",
                  "lastUpdatedAt"
                ]
              },
              "x-ms-identifiers": [
                "approverEntraId"
              ]
            },
            "ticketId": {
              "type": "string",
              "description": "Ticket ID for the approval request"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Approval request creation time"
            },
            "stateChangedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
            },
            "requestMetadata": {
              "description": "Request metadata for the approval request.",
              "type": "object",
              "properties": {
                "resourceAction": {
                  "type": "string",
                  "description": "Resource Action of the item being approved or declined."
                },
                "approvalCallbackRoute": {
                  "type": "string",
                  "description": "Route name for the approval callback"
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload to be sent upon any action on approval request"
                },
                "approvalStatus": {
                  "description": "Status of the approval. Uses ApprovalStatus enum.",
                  "type": "string",
                  "enum": [
                    "Approved",
                    "Rejected",
                    "Pending",
                    "Deleted",
                    "Expired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "ApprovalStatus Type Approved"
                      },
                      {
                        "name": "Rejected",
                        "value": "Rejected",
                        "description": "ApprovalStatus Type Rejected"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "ApprovalStatus Type Pending"
                      },
                      {
                        "name": "Deleted",
                        "value": "Deleted",
                        "description": "ApprovalStatus Type Deleted"
                      },
                      {
                        "name": "Expired",
                        "value": "Expired",
                        "description": "ApprovalStatus Type Expired"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "ApprovalPatchProperties": {
      "type": "object",
      "description": "Approvals patch properties.",
      "properties": {
        "parentResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Parameter for optimizing query results"
        },
        "grandparentResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Parameter for optimizing query results"
        },
        "approvers": {
          "type": "array",
          "description": "List of approvers for the approval request",
          "items": {
            "type": "object",
            "description": "Approver Metadata for approvals request.",
            "properties": {
              "approverEntraId": {
                "type": "string",
                "description": "Entra ObjectID of the approver"
              },
              "actionPerformed": {
                "description": "Action Performed by approver",
                "type": "string",
                "enum": [
                  "Approved",
                  "Rejected"
                ],
                "x-ms-enum": {
                  "name": "ActionPerformed",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "Action was Approved"
                    },
                    {
                      "name": "Rejected",
                      "value": "Rejected",
                      "description": "Action was Rejected"
                    }
                  ]
                }
              },
              "lastUpdatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "approval request last updated at"
              }
            },
            "required": [
              "approverEntraId",
              "lastUpdatedAt"
            ]
          },
          "x-ms-identifiers": [
            "approverEntraId"
          ]
        },
        "ticketId": {
          "type": "string",
          "description": "Ticket ID for the approval request"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Approval request creation time"
        },
        "stateChangedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
        },
        "requestMetadata": {
          "description": "Request metadata for the approval request.",
          "type": "object",
          "properties": {
            "resourceAction": {
              "type": "string",
              "description": "Resource Action of the item being approved or declined."
            },
            "approvalCallbackRoute": {
              "type": "string",
              "description": "Route name for the approval callback"
            },
            "approvalCallbackPayload": {
              "type": "string",
              "description": "Payload to be sent upon any action on approval request"
            },
            "approvalStatus": {
              "description": "Status of the approval. Uses ApprovalStatus enum.",
              "type": "string",
              "enum": [
                "Approved",
                "Rejected",
                "Pending",
                "Deleted",
                "Expired"
              ],
              "x-ms-enum": {
                "name": "ApprovalStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "ApprovalStatus Type Approved"
                  },
                  {
                    "name": "Rejected",
                    "value": "Rejected",
                    "description": "ApprovalStatus Type Rejected"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "ApprovalStatus Type Pending"
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "ApprovalStatus Type Deleted"
                  },
                  {
                    "name": "Expired",
                    "value": "Expired",
                    "description": "ApprovalStatus Type Expired"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ApprovalPolicy": {
      "type": "string",
      "description": "Approval Policy.",
      "enum": [
        "Required",
        "NotRequired"
      ],
      "x-ms-enum": {
        "name": "ApprovalPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Required",
            "value": "Required",
            "description": "Approval will be required for the specified action."
          },
          {
            "name": "NotRequired",
            "value": "NotRequired",
            "description": "Approval will not be required for the specified action."
          }
        ]
      }
    },
    "ApprovalProperties": {
      "type": "object",
      "description": "Approval Base model.",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "parentResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Parameter for optimizing query results"
        },
        "grandparentResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Parameter for optimizing query results"
        },
        "approvers": {
          "type": "array",
          "description": "List of approvers for the approval request",
          "items": {
            "type": "object",
            "description": "Approver Metadata for approvals request.",
            "properties": {
              "approverEntraId": {
                "type": "string",
                "description": "Entra ObjectID of the approver"
              },
              "actionPerformed": {
                "description": "Action Performed by approver",
                "type": "string",
                "enum": [
                  "Approved",
                  "Rejected"
                ],
                "x-ms-enum": {
                  "name": "ActionPerformed",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "Action was Approved"
                    },
                    {
                      "name": "Rejected",
                      "value": "Rejected",
                      "description": "Action was Rejected"
                    }
                  ]
                }
              },
              "lastUpdatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "approval request last updated at"
              }
            },
            "required": [
              "approverEntraId",
              "lastUpdatedAt"
            ]
          },
          "x-ms-identifiers": [
            "approverEntraId"
          ]
        },
        "ticketId": {
          "type": "string",
          "description": "Ticket ID for the approval request"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Approval request creation time"
        },
        "stateChangedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
        },
        "requestMetadata": {
          "description": "Request metadata for the approval request.",
          "type": "object",
          "properties": {
            "resourceAction": {
              "type": "string",
              "description": "Resource Action of the item being approved or declined."
            },
            "approvalCallbackRoute": {
              "type": "string",
              "description": "Route name for the approval callback"
            },
            "approvalCallbackPayload": {
              "type": "string",
              "description": "Payload to be sent upon any action on approval request"
            },
            "approvalStatus": {
              "type": "string",
              "description": "Status of the approval. Uses ApprovalStatus enum.",
              "default": "Pending",
              "enum": [
                "Approved",
                "Rejected",
                "Pending",
                "Deleted",
                "Expired"
              ],
              "x-ms-enum": {
                "name": "ApprovalStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "ApprovalStatus Type Approved"
                  },
                  {
                    "name": "Rejected",
                    "value": "Rejected",
                    "description": "ApprovalStatus Type Rejected"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "ApprovalStatus Type Pending"
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "ApprovalStatus Type Deleted"
                  },
                  {
                    "name": "Expired",
                    "value": "Expired",
                    "description": "ApprovalStatus Type Expired"
                  }
                ]
              }
            }
          },
          "required": [
            "resourceAction"
          ]
        }
      },
      "required": [
        "requestMetadata"
      ]
    },
    "ApprovalResource": {
      "type": "object",
      "description": "Approval Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "parentResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Parameter for optimizing query results"
            },
            "grandparentResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Parameter for optimizing query results"
            },
            "approvers": {
              "type": "array",
              "description": "List of approvers for the approval request",
              "items": {
                "type": "object",
                "description": "Approver Metadata for approvals request.",
                "properties": {
                  "approverEntraId": {
                    "type": "string",
                    "description": "Entra ObjectID of the approver"
                  },
                  "actionPerformed": {
                    "description": "Action Performed by approver",
                    "type": "string",
                    "enum": [
                      "Approved",
                      "Rejected"
                    ],
                    "x-ms-enum": {
                      "name": "ActionPerformed",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "Action was Approved"
                        },
                        {
                          "name": "Rejected",
                          "value": "Rejected",
                          "description": "Action was Rejected"
                        }
                      ]
                    }
                  },
                  "lastUpdatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "approval request last updated at"
                  }
                },
                "required": [
                  "approverEntraId",
                  "lastUpdatedAt"
                ]
              },
              "x-ms-identifiers": [
                "approverEntraId"
              ]
            },
            "ticketId": {
              "type": "string",
              "description": "Ticket ID for the approval request"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Approval request creation time"
            },
            "stateChangedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
            },
            "requestMetadata": {
              "description": "Request metadata for the approval request.",
              "type": "object",
              "properties": {
                "resourceAction": {
                  "type": "string",
                  "description": "Resource Action of the item being approved or declined."
                },
                "approvalCallbackRoute": {
                  "type": "string",
                  "description": "Route name for the approval callback"
                },
                "approvalCallbackPayload": {
                  "type": "string",
                  "description": "Payload to be sent upon any action on approval request"
                },
                "approvalStatus": {
                  "type": "string",
                  "description": "Status of the approval. Uses ApprovalStatus enum.",
                  "default": "Pending",
                  "enum": [
                    "Approved",
                    "Rejected",
                    "Pending",
                    "Deleted",
                    "Expired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "ApprovalStatus Type Approved"
                      },
                      {
                        "name": "Rejected",
                        "value": "Rejected",
                        "description": "ApprovalStatus Type Rejected"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "ApprovalStatus Type Pending"
                      },
                      {
                        "name": "Deleted",
                        "value": "Deleted",
                        "description": "ApprovalStatus Type Deleted"
                      },
                      {
                        "name": "Expired",
                        "value": "Expired",
                        "description": "ApprovalStatus Type Expired"
                      }
                    ]
                  }
                }
              },
              "required": [
                "resourceAction"
              ]
            }
          },
          "required": [
            "requestMetadata"
          ]
        }
      }
    },
    "ApprovalResourceListResult": {
      "type": "object",
      "description": "The response of a ApprovalResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApprovalResource items on this page",
          "items": {
            "type": "object",
            "description": "Approval Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "parentResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Parameter for optimizing query results"
                  },
                  "grandparentResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Parameter for optimizing query results"
                  },
                  "approvers": {
                    "type": "array",
                    "description": "List of approvers for the approval request",
                    "items": {
                      "type": "object",
                      "description": "Approver Metadata for approvals request.",
                      "properties": {
                        "approverEntraId": {
                          "type": "string",
                          "description": "Entra ObjectID of the approver"
                        },
                        "actionPerformed": {
                          "description": "Action Performed by approver",
                          "type": "string",
                          "enum": [
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "ActionPerformed",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "Action was Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected",
                                "description": "Action was Rejected"
                              }
                            ]
                          }
                        },
                        "lastUpdatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "approval request last updated at"
                        }
                      },
                      "required": [
                        "approverEntraId",
                        "lastUpdatedAt"
                      ]
                    },
                    "x-ms-identifiers": [
                      "approverEntraId"
                    ]
                  },
                  "ticketId": {
                    "type": "string",
                    "description": "Ticket ID for the approval request"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Approval request creation time"
                  },
                  "stateChangedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Approval request state change time, time at which approval request state changed from pending to approved or rejected."
                  },
                  "requestMetadata": {
                    "description": "Request metadata for the approval request.",
                    "type": "object",
                    "properties": {
                      "resourceAction": {
                        "type": "string",
                        "description": "Resource Action of the item being approved or declined."
                      },
                      "approvalCallbackRoute": {
                        "type": "string",
                        "description": "Route name for the approval callback"
                      },
                      "approvalCallbackPayload": {
                        "type": "string",
                        "description": "Payload to be sent upon any action on approval request"
                      },
                      "approvalStatus": {
                        "type": "string",
                        "description": "Status of the approval. Uses ApprovalStatus enum.",
                        "default": "Pending",
                        "enum": [
                          "Approved",
                          "Rejected",
                          "Pending",
                          "Deleted",
                          "Expired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "ApprovalStatus Type Approved"
                            },
                            {
                              "name": "Rejected",
                              "value": "Rejected",
                              "description": "ApprovalStatus Type Rejected"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "ApprovalStatus Type Pending"
                            },
                            {
                              "name": "Deleted",
                              "value": "Deleted",
                              "description": "ApprovalStatus Type Deleted"
                            },
                            {
                              "name": "Expired",
                              "value": "Expired",
                              "description": "ApprovalStatus Type Expired"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "resourceAction"
                    ]
                  }
                },
                "required": [
                  "requestMetadata"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApprovalSettings": {
      "type": "object",
      "description": "ApprovalSettings Properties",
      "properties": {
        "endpointCreation": {
          "description": "Approval required for endpoint creation (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "endpointUpdate": {
          "description": "Approval required for endpoint update (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "endpointDeletion": {
          "description": "Approval required for endpoint deletion (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "connectionCreation": {
          "description": "Approval required for enclave connection creation (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "connectionUpdate": {
          "description": "Approval required for enclave connection update (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "connectionDeletion": {
          "description": "Approval required for enclave connection deletion (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "enclaveCreation": {
          "description": "Approval required for virtual enclave creation (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "enclaveDeletion": {
          "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "maintenanceMode": {
          "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "serviceCatalogDeployment": {
          "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "notificationOnApprovalCreation": {
          "description": "Notification will be sent on creation of an Approval Request",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "notificationOnApprovalAction": {
          "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "notificationOnApprovalDeletion": {
          "description": "Notification will be sent on deletion of an Approval Request",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "x-ms-enum": {
            "name": "ApprovalPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Required",
                "value": "Required",
                "description": "Approval will be required for the specified action."
              },
              {
                "name": "NotRequired",
                "value": "NotRequired",
                "description": "Approval will not be required for the specified action."
              }
            ]
          }
        },
        "mandatoryApprovers": {
          "type": "array",
          "description": "List of mandatory approvers for the approval request",
          "items": {
            "type": "object",
            "description": "Approver Metadata for approvals request.",
            "properties": {
              "approverEntraId": {
                "type": "string",
                "description": "EntraId of the approver"
              }
            },
            "required": [
              "approverEntraId"
            ]
          },
          "x-ms-identifiers": [
            "approverEntraId"
          ]
        },
        "minimumApproversRequired": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum number of approvers required for the approval request",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ApprovalSettingsPatchProperties": {
      "type": "object",
      "description": "ApprovalSettings Properties",
      "properties": {
        "mandatoryApprovers": {
          "type": "array",
          "description": "List of mandatory approvers for the approval request",
          "items": {
            "type": "object",
            "description": "Approver Metadata for approvals request.",
            "properties": {
              "approverEntraId": {
                "type": "string",
                "description": "EntraId of the approver"
              }
            },
            "required": [
              "approverEntraId"
            ]
          },
          "x-ms-identifiers": [
            "approverEntraId"
          ]
        }
      }
    },
    "ApprovalStatus": {
      "type": "string",
      "description": "Approval Status. It can be Approved, Rejected, Pending, Deleted or Expired.",
      "enum": [
        "Approved",
        "Rejected",
        "Pending",
        "Deleted",
        "Expired"
      ],
      "x-ms-enum": {
        "name": "ApprovalStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Approved",
            "value": "Approved",
            "description": "ApprovalStatus Type Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "ApprovalStatus Type Rejected"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "ApprovalStatus Type Pending"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "ApprovalStatus Type Deleted"
          },
          {
            "name": "Expired",
            "value": "Expired",
            "description": "ApprovalStatus Type Expired"
          }
        ]
      }
    },
    "Approver": {
      "type": "object",
      "description": "Approver Metadata for approvals request.",
      "properties": {
        "approverEntraId": {
          "type": "string",
          "description": "Entra ObjectID of the approver"
        },
        "actionPerformed": {
          "description": "Action Performed by approver",
          "type": "string",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "name": "ActionPerformed",
            "modelAsString": true,
            "values": [
              {
                "name": "Approved",
                "value": "Approved",
                "description": "Action was Approved"
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "Action was Rejected"
              }
            ]
          }
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "approval request last updated at"
        }
      },
      "required": [
        "approverEntraId",
        "lastUpdatedAt"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "x-nullable": true,
            "type": "object",
            "description": "User assigned identity properties",
            "properties": {
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID of the assigned identity.",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID of the assigned identity.",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "CheckAddressSpaceAvailabilityRequest": {
      "type": "object",
      "description": "Request to the action call to check address space availability.",
      "properties": {
        "communityResourceId": {
          "description": "Resource Id of the Community",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/communities"
              }
            ]
          }
        },
        "enclaveVirtualNetwork": {
          "description": "Information about the enclave virtual network",
          "type": "object",
          "properties": {
            "networkName": {
              "type": "string",
              "description": "Network Name."
            },
            "networkSize": {
              "type": "string",
              "description": "Network Size.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "customCidrRange": {
              "type": "string",
              "description": "Custom CIDR Range.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "subnetConfigurations": {
              "type": "array",
              "description": "Subnet Configurations.",
              "items": {
                "type": "object",
                "description": "Subnet Configuration",
                "properties": {
                  "subnetName": {
                    "type": "string",
                    "description": "Subnet name."
                  },
                  "subnetResourceId": {
                    "description": "Subnet Resource ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    }
                  },
                  "networkPrefixSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Network prefix size."
                  },
                  "subnetDelegation": {
                    "type": "string",
                    "description": "Subnet delegation."
                  },
                  "addressPrefix": {
                    "type": "string",
                    "description": "Address prefix.",
                    "readOnly": true
                  },
                  "networkSecurityGroupResourceId": {
                    "description": "Network security group ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/networkSecurityGroups"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "subnetName",
                  "networkPrefixSize"
                ]
              },
              "x-ms-identifiers": []
            },
            "allowSubnetCommunication": {
              "type": "boolean",
              "description": "Allow Subnet Communication.",
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        }
      },
      "required": [
        "communityResourceId",
        "enclaveVirtualNetwork"
      ]
    },
    "CheckAddressSpaceAvailabilityResponse": {
      "type": "object",
      "description": "Response of availability of the requested address space.",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "Boolean representing whether the address space is available."
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityEndpointDestinationRule": {
      "type": "object",
      "description": "Base type for destination rules.",
      "properties": {
        "destinationType": {
          "description": "Destination Type.",
          "type": "string",
          "enum": [
            "FQDN",
            "FQDNTag",
            "IPAddress",
            "PrivateNetwork"
          ],
          "x-ms-enum": {
            "name": "DestinationType",
            "modelAsString": true,
            "values": [
              {
                "name": "FQDN",
                "value": "FQDN",
                "description": "DestinationType Type FQDN"
              },
              {
                "name": "FQDNTag",
                "value": "FQDNTag",
                "description": "DestinationType Type FQDNTag"
              },
              {
                "name": "IPAddress",
                "value": "IPAddress",
                "description": "DestinationType Type IPAddress"
              },
              {
                "name": "PrivateNetwork",
                "value": "PrivateNetwork",
                "description": "DestinationType Type PrivateNetwork"
              }
            ]
          }
        },
        "protocols": {
          "type": "array",
          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
          "items": {
            "type": "string",
            "description": "Community Endpoint Protocol Enum",
            "enum": [
              "ANY",
              "TCP",
              "UDP",
              "ICMP",
              "ESP",
              "AH",
              "HTTPS",
              "HTTP"
            ],
            "x-ms-enum": {
              "name": "CommunityEndpointProtocol",
              "modelAsString": true,
              "values": [
                {
                  "name": "ANY",
                  "value": "ANY",
                  "description": "CommunityEndpointProtocol Type ANY"
                },
                {
                  "name": "TCP",
                  "value": "TCP",
                  "description": "CommunityEndpointProtocol Type TCP"
                },
                {
                  "name": "UDP",
                  "value": "UDP",
                  "description": "CommunityEndpointProtocol Type UDP"
                },
                {
                  "name": "ICMP",
                  "value": "ICMP",
                  "description": "CommunityEndpointProtocol Type ICMP"
                },
                {
                  "name": "ESP",
                  "value": "ESP",
                  "description": "CommunityEndpointProtocol Type ESP"
                },
                {
                  "name": "AH",
                  "value": "AH",
                  "description": "CommunityEndpointProtocol Type AH"
                },
                {
                  "name": "HTTPS",
                  "value": "HTTPS",
                  "description": "CommunityEndpointProtocol Type HTTPS"
                },
                {
                  "name": "HTTP",
                  "value": "HTTP",
                  "description": "CommunityEndpointProtocol Type HTTP"
                }
              ]
            }
          }
        },
        "transitHubResourceId": {
          "description": "Transit Hub Resource Id.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/communities/transitHubs"
              }
            ]
          }
        },
        "endpointRuleName": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "destination": {
          "type": "string",
          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
        },
        "ports": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        }
      }
    },
    "CommunityEndpointPatchModel": {
      "type": "object",
      "description": "Community Endpoint Patch Resource",
      "properties": {
        "properties": {
          "description": "Community Endpoint Patch properties",
          "type": "object",
          "properties": {
            "ruleCollection": {
              "type": "array",
              "description": "Community Endpoint Rule Collection.",
              "items": {
                "type": "object",
                "description": "Base type for destination rules.",
                "properties": {
                  "destinationType": {
                    "description": "Destination Type.",
                    "type": "string",
                    "enum": [
                      "FQDN",
                      "FQDNTag",
                      "IPAddress",
                      "PrivateNetwork"
                    ],
                    "x-ms-enum": {
                      "name": "DestinationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FQDN",
                          "value": "FQDN",
                          "description": "DestinationType Type FQDN"
                        },
                        {
                          "name": "FQDNTag",
                          "value": "FQDNTag",
                          "description": "DestinationType Type FQDNTag"
                        },
                        {
                          "name": "IPAddress",
                          "value": "IPAddress",
                          "description": "DestinationType Type IPAddress"
                        },
                        {
                          "name": "PrivateNetwork",
                          "value": "PrivateNetwork",
                          "description": "DestinationType Type PrivateNetwork"
                        }
                      ]
                    }
                  },
                  "protocols": {
                    "type": "array",
                    "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                    "items": {
                      "type": "string",
                      "description": "Community Endpoint Protocol Enum",
                      "enum": [
                        "ANY",
                        "TCP",
                        "UDP",
                        "ICMP",
                        "ESP",
                        "AH",
                        "HTTPS",
                        "HTTP"
                      ],
                      "x-ms-enum": {
                        "name": "CommunityEndpointProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ANY",
                            "value": "ANY",
                            "description": "CommunityEndpointProtocol Type ANY"
                          },
                          {
                            "name": "TCP",
                            "value": "TCP",
                            "description": "CommunityEndpointProtocol Type TCP"
                          },
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "CommunityEndpointProtocol Type UDP"
                          },
                          {
                            "name": "ICMP",
                            "value": "ICMP",
                            "description": "CommunityEndpointProtocol Type ICMP"
                          },
                          {
                            "name": "ESP",
                            "value": "ESP",
                            "description": "CommunityEndpointProtocol Type ESP"
                          },
                          {
                            "name": "AH",
                            "value": "AH",
                            "description": "CommunityEndpointProtocol Type AH"
                          },
                          {
                            "name": "HTTPS",
                            "value": "HTTPS",
                            "description": "CommunityEndpointProtocol Type HTTPS"
                          },
                          {
                            "name": "HTTP",
                            "value": "HTTP",
                            "description": "CommunityEndpointProtocol Type HTTP"
                          }
                        ]
                      }
                    }
                  },
                  "transitHubResourceId": {
                    "description": "Transit Hub Resource Id.",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/communities/transitHubs"
                        }
                      ]
                    }
                  },
                  "endpointRuleName": {
                    "type": "string",
                    "description": "Endpoint Rule Name."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                  },
                  "ports": {
                    "type": "string",
                    "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CommunityEndpointPatchProperties": {
      "type": "object",
      "description": "Community Endpoint patchable Properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Community Endpoint Rule Collection.",
          "items": {
            "type": "object",
            "description": "Base type for destination rules.",
            "properties": {
              "destinationType": {
                "description": "Destination Type.",
                "type": "string",
                "enum": [
                  "FQDN",
                  "FQDNTag",
                  "IPAddress",
                  "PrivateNetwork"
                ],
                "x-ms-enum": {
                  "name": "DestinationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "FQDN",
                      "value": "FQDN",
                      "description": "DestinationType Type FQDN"
                    },
                    {
                      "name": "FQDNTag",
                      "value": "FQDNTag",
                      "description": "DestinationType Type FQDNTag"
                    },
                    {
                      "name": "IPAddress",
                      "value": "IPAddress",
                      "description": "DestinationType Type IPAddress"
                    },
                    {
                      "name": "PrivateNetwork",
                      "value": "PrivateNetwork",
                      "description": "DestinationType Type PrivateNetwork"
                    }
                  ]
                }
              },
              "protocols": {
                "type": "array",
                "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                "items": {
                  "type": "string",
                  "description": "Community Endpoint Protocol Enum",
                  "enum": [
                    "ANY",
                    "TCP",
                    "UDP",
                    "ICMP",
                    "ESP",
                    "AH",
                    "HTTPS",
                    "HTTP"
                  ],
                  "x-ms-enum": {
                    "name": "CommunityEndpointProtocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ANY",
                        "value": "ANY",
                        "description": "CommunityEndpointProtocol Type ANY"
                      },
                      {
                        "name": "TCP",
                        "value": "TCP",
                        "description": "CommunityEndpointProtocol Type TCP"
                      },
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "CommunityEndpointProtocol Type UDP"
                      },
                      {
                        "name": "ICMP",
                        "value": "ICMP",
                        "description": "CommunityEndpointProtocol Type ICMP"
                      },
                      {
                        "name": "ESP",
                        "value": "ESP",
                        "description": "CommunityEndpointProtocol Type ESP"
                      },
                      {
                        "name": "AH",
                        "value": "AH",
                        "description": "CommunityEndpointProtocol Type AH"
                      },
                      {
                        "name": "HTTPS",
                        "value": "HTTPS",
                        "description": "CommunityEndpointProtocol Type HTTPS"
                      },
                      {
                        "name": "HTTP",
                        "value": "HTTP",
                        "description": "CommunityEndpointProtocol Type HTTP"
                      }
                    ]
                  }
                }
              },
              "transitHubResourceId": {
                "description": "Transit Hub Resource Id.",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Mission/communities/transitHubs"
                    }
                  ]
                }
              },
              "endpointRuleName": {
                "type": "string",
                "description": "Endpoint Rule Name."
              },
              "destination": {
                "type": "string",
                "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
              },
              "ports": {
                "type": "string",
                "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommunityEndpointProperties": {
      "type": "object",
      "description": "Community Endpoint Resource properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Community Endpoint Rule Collection.",
          "items": {
            "type": "object",
            "description": "Base type for destination rules.",
            "properties": {
              "destinationType": {
                "description": "Destination Type.",
                "type": "string",
                "enum": [
                  "FQDN",
                  "FQDNTag",
                  "IPAddress",
                  "PrivateNetwork"
                ],
                "x-ms-enum": {
                  "name": "DestinationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "FQDN",
                      "value": "FQDN",
                      "description": "DestinationType Type FQDN"
                    },
                    {
                      "name": "FQDNTag",
                      "value": "FQDNTag",
                      "description": "DestinationType Type FQDNTag"
                    },
                    {
                      "name": "IPAddress",
                      "value": "IPAddress",
                      "description": "DestinationType Type IPAddress"
                    },
                    {
                      "name": "PrivateNetwork",
                      "value": "PrivateNetwork",
                      "description": "DestinationType Type PrivateNetwork"
                    }
                  ]
                }
              },
              "protocols": {
                "type": "array",
                "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                "items": {
                  "type": "string",
                  "description": "Community Endpoint Protocol Enum",
                  "enum": [
                    "ANY",
                    "TCP",
                    "UDP",
                    "ICMP",
                    "ESP",
                    "AH",
                    "HTTPS",
                    "HTTP"
                  ],
                  "x-ms-enum": {
                    "name": "CommunityEndpointProtocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ANY",
                        "value": "ANY",
                        "description": "CommunityEndpointProtocol Type ANY"
                      },
                      {
                        "name": "TCP",
                        "value": "TCP",
                        "description": "CommunityEndpointProtocol Type TCP"
                      },
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "CommunityEndpointProtocol Type UDP"
                      },
                      {
                        "name": "ICMP",
                        "value": "ICMP",
                        "description": "CommunityEndpointProtocol Type ICMP"
                      },
                      {
                        "name": "ESP",
                        "value": "ESP",
                        "description": "CommunityEndpointProtocol Type ESP"
                      },
                      {
                        "name": "AH",
                        "value": "AH",
                        "description": "CommunityEndpointProtocol Type AH"
                      },
                      {
                        "name": "HTTPS",
                        "value": "HTTPS",
                        "description": "CommunityEndpointProtocol Type HTTPS"
                      },
                      {
                        "name": "HTTP",
                        "value": "HTTP",
                        "description": "CommunityEndpointProtocol Type HTTP"
                      }
                    ]
                  }
                }
              },
              "transitHubResourceId": {
                "description": "Transit Hub Resource Id.",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Mission/communities/transitHubs"
                    }
                  ]
                }
              },
              "endpointRuleName": {
                "type": "string",
                "description": "Endpoint Rule Name."
              },
              "destination": {
                "type": "string",
                "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
              },
              "ports": {
                "type": "string",
                "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by community endpoint.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        }
      },
      "required": [
        "ruleCollection"
      ]
    },
    "CommunityEndpointProtocol": {
      "type": "string",
      "description": "Community Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH",
        "HTTPS",
        "HTTP"
      ],
      "x-ms-enum": {
        "name": "CommunityEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "CommunityEndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "CommunityEndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "CommunityEndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "CommunityEndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "CommunityEndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "CommunityEndpointProtocol Type AH"
          },
          {
            "name": "HTTPS",
            "value": "HTTPS",
            "description": "CommunityEndpointProtocol Type HTTPS"
          },
          {
            "name": "HTTP",
            "value": "HTTP",
            "description": "CommunityEndpointProtocol Type HTTP"
          }
        ]
      }
    },
    "CommunityEndpointResource": {
      "type": "object",
      "description": "CommunityEndpoint Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "ruleCollection": {
              "type": "array",
              "description": "Community Endpoint Rule Collection.",
              "items": {
                "type": "object",
                "description": "Base type for destination rules.",
                "properties": {
                  "destinationType": {
                    "description": "Destination Type.",
                    "type": "string",
                    "enum": [
                      "FQDN",
                      "FQDNTag",
                      "IPAddress",
                      "PrivateNetwork"
                    ],
                    "x-ms-enum": {
                      "name": "DestinationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FQDN",
                          "value": "FQDN",
                          "description": "DestinationType Type FQDN"
                        },
                        {
                          "name": "FQDNTag",
                          "value": "FQDNTag",
                          "description": "DestinationType Type FQDNTag"
                        },
                        {
                          "name": "IPAddress",
                          "value": "IPAddress",
                          "description": "DestinationType Type IPAddress"
                        },
                        {
                          "name": "PrivateNetwork",
                          "value": "PrivateNetwork",
                          "description": "DestinationType Type PrivateNetwork"
                        }
                      ]
                    }
                  },
                  "protocols": {
                    "type": "array",
                    "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                    "items": {
                      "type": "string",
                      "description": "Community Endpoint Protocol Enum",
                      "enum": [
                        "ANY",
                        "TCP",
                        "UDP",
                        "ICMP",
                        "ESP",
                        "AH",
                        "HTTPS",
                        "HTTP"
                      ],
                      "x-ms-enum": {
                        "name": "CommunityEndpointProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ANY",
                            "value": "ANY",
                            "description": "CommunityEndpointProtocol Type ANY"
                          },
                          {
                            "name": "TCP",
                            "value": "TCP",
                            "description": "CommunityEndpointProtocol Type TCP"
                          },
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "CommunityEndpointProtocol Type UDP"
                          },
                          {
                            "name": "ICMP",
                            "value": "ICMP",
                            "description": "CommunityEndpointProtocol Type ICMP"
                          },
                          {
                            "name": "ESP",
                            "value": "ESP",
                            "description": "CommunityEndpointProtocol Type ESP"
                          },
                          {
                            "name": "AH",
                            "value": "AH",
                            "description": "CommunityEndpointProtocol Type AH"
                          },
                          {
                            "name": "HTTPS",
                            "value": "HTTPS",
                            "description": "CommunityEndpointProtocol Type HTTPS"
                          },
                          {
                            "name": "HTTP",
                            "value": "HTTP",
                            "description": "CommunityEndpointProtocol Type HTTP"
                          }
                        ]
                      }
                    }
                  },
                  "transitHubResourceId": {
                    "description": "Transit Hub Resource Id.",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/communities/transitHubs"
                        }
                      ]
                    }
                  },
                  "endpointRuleName": {
                    "type": "string",
                    "description": "Endpoint Rule Name."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                  },
                  "ports": {
                    "type": "string",
                    "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids created by community endpoint.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            }
          },
          "required": [
            "ruleCollection"
          ]
        }
      }
    },
    "CommunityEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityEndpointResource items on this page",
          "items": {
            "type": "object",
            "description": "CommunityEndpoint Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "ruleCollection": {
                    "type": "array",
                    "description": "Community Endpoint Rule Collection.",
                    "items": {
                      "type": "object",
                      "description": "Base type for destination rules.",
                      "properties": {
                        "destinationType": {
                          "description": "Destination Type.",
                          "type": "string",
                          "enum": [
                            "FQDN",
                            "FQDNTag",
                            "IPAddress",
                            "PrivateNetwork"
                          ],
                          "x-ms-enum": {
                            "name": "DestinationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FQDN",
                                "value": "FQDN",
                                "description": "DestinationType Type FQDN"
                              },
                              {
                                "name": "FQDNTag",
                                "value": "FQDNTag",
                                "description": "DestinationType Type FQDNTag"
                              },
                              {
                                "name": "IPAddress",
                                "value": "IPAddress",
                                "description": "DestinationType Type IPAddress"
                              },
                              {
                                "name": "PrivateNetwork",
                                "value": "PrivateNetwork",
                                "description": "DestinationType Type PrivateNetwork"
                              }
                            ]
                          }
                        },
                        "protocols": {
                          "type": "array",
                          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                          "items": {
                            "type": "string",
                            "description": "Community Endpoint Protocol Enum",
                            "enum": [
                              "ANY",
                              "TCP",
                              "UDP",
                              "ICMP",
                              "ESP",
                              "AH",
                              "HTTPS",
                              "HTTP"
                            ],
                            "x-ms-enum": {
                              "name": "CommunityEndpointProtocol",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ANY",
                                  "value": "ANY",
                                  "description": "CommunityEndpointProtocol Type ANY"
                                },
                                {
                                  "name": "TCP",
                                  "value": "TCP",
                                  "description": "CommunityEndpointProtocol Type TCP"
                                },
                                {
                                  "name": "UDP",
                                  "value": "UDP",
                                  "description": "CommunityEndpointProtocol Type UDP"
                                },
                                {
                                  "name": "ICMP",
                                  "value": "ICMP",
                                  "description": "CommunityEndpointProtocol Type ICMP"
                                },
                                {
                                  "name": "ESP",
                                  "value": "ESP",
                                  "description": "CommunityEndpointProtocol Type ESP"
                                },
                                {
                                  "name": "AH",
                                  "value": "AH",
                                  "description": "CommunityEndpointProtocol Type AH"
                                },
                                {
                                  "name": "HTTPS",
                                  "value": "HTTPS",
                                  "description": "CommunityEndpointProtocol Type HTTPS"
                                },
                                {
                                  "name": "HTTP",
                                  "value": "HTTP",
                                  "description": "CommunityEndpointProtocol Type HTTP"
                                }
                              ]
                            }
                          }
                        },
                        "transitHubResourceId": {
                          "description": "Transit Hub Resource Id.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Mission/communities/transitHubs"
                              }
                            ]
                          }
                        },
                        "endpointRuleName": {
                          "type": "string",
                          "description": "Endpoint Rule Name."
                        },
                        "destination": {
                          "type": "string",
                          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                        },
                        "ports": {
                          "type": "string",
                          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids created by community endpoint.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "ruleCollection"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityPatchModel": {
      "type": "object",
      "description": "Community Patch Resource",
      "properties": {
        "properties": {
          "description": "Community Patch properties",
          "type": "object",
          "properties": {
            "dnsServers": {
              "type": "array",
              "description": "DNS Servers.",
              "items": {
                "type": "string"
              }
            },
            "governedServiceList": {
              "type": "array",
              "description": "List of services governed by a community.",
              "items": {
                "type": "object",
                "description": "GovernedServiceItem Properties",
                "properties": {
                  "serviceId": {
                    "description": "Service ID",
                    "type": "string",
                    "enum": [
                      "AKS",
                      "AppService",
                      "AzureFirewalls",
                      "ContainerRegistry",
                      "CosmosDB",
                      "DataConnectors",
                      "Insights",
                      "KeyVault",
                      "Logic",
                      "MicrosoftSQL",
                      "Monitoring",
                      "PostgreSQL",
                      "PrivateDNSZones",
                      "ServiceBus",
                      "Storage"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceIdentifier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AKS",
                          "value": "AKS",
                          "description": "Service identifier for AKS"
                        },
                        {
                          "name": "AppService",
                          "value": "AppService",
                          "description": "Service identifier for App Service"
                        },
                        {
                          "name": "AzureFirewalls",
                          "value": "AzureFirewalls",
                          "description": "Service identifier for Azure Firewalls"
                        },
                        {
                          "name": "ContainerRegistry",
                          "value": "ContainerRegistry",
                          "description": "Service identifier for Container Registry"
                        },
                        {
                          "name": "CosmosDB",
                          "value": "CosmosDB",
                          "description": "Service identifier for CosmosDB"
                        },
                        {
                          "name": "DataConnectors",
                          "value": "DataConnectors",
                          "description": "Service identifier for Data Connectors"
                        },
                        {
                          "name": "Insights",
                          "value": "Insights",
                          "description": "Service identifier for Insights"
                        },
                        {
                          "name": "KeyVault",
                          "value": "KeyVault",
                          "description": "Service identifier for Key Vault"
                        },
                        {
                          "name": "Logic",
                          "value": "Logic",
                          "description": "Service identifier for Logic"
                        },
                        {
                          "name": "MicrosoftSql",
                          "value": "MicrosoftSQL",
                          "description": "Service identifier for Microsoft SQL"
                        },
                        {
                          "name": "Monitoring",
                          "value": "Monitoring",
                          "description": "Service identifier for Monitoring"
                        },
                        {
                          "name": "PostgreSql",
                          "value": "PostgreSQL",
                          "description": "Service identifier for PostgreSQL"
                        },
                        {
                          "name": "PrivateDNSZones",
                          "value": "PrivateDNSZones",
                          "description": "Service identifier for Private DNS Zones"
                        },
                        {
                          "name": "ServiceBus",
                          "value": "ServiceBus",
                          "description": "Service identifier for Service Bus"
                        },
                        {
                          "name": "Storage",
                          "value": "Storage",
                          "description": "Service identifier for Storage"
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "Service name.",
                    "readOnly": true
                  },
                  "option": {
                    "type": "string",
                    "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                    "enum": [
                      "Allow",
                      "Deny",
                      "ExceptionOnly",
                      "NotApplicable"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "enforcement": {
                    "type": "string",
                    "description": "Initiative enforcement (Enabled or Disabled).",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "policyAction": {
                    "type": "string",
                    "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                    "enum": [
                      "AuditOnly",
                      "Enforce",
                      "None"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "initiatives": {
                    "type": "array",
                    "description": "Initiatives associated with this service.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "serviceId"
                ]
              },
              "x-ms-identifiers": []
            },
            "policyOverride": {
              "type": "string",
              "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
              "enum": [
                "Enclave",
                "None"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "communityRoleAssignments": {
              "type": "array",
              "description": "Community role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "firewallSku": {
              "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "FirewallSKU",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "FirewallSKU Basic"
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "FirwallSKU Standard"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "FirewallSKU Premium"
                  }
                ]
              }
            },
            "approvalSettings": {
              "description": "Approval requirements for various actions on the community's resources.",
              "type": "object",
              "properties": {
                "mandatoryApprovers": {
                  "type": "array",
                  "description": "List of mandatory approvers for the approval request",
                  "items": {
                    "type": "object",
                    "description": "Approver Metadata for approvals request.",
                    "properties": {
                      "approverEntraId": {
                        "type": "string",
                        "description": "EntraId of the approver"
                      }
                    },
                    "required": [
                      "approverEntraId"
                    ]
                  },
                  "x-ms-identifiers": [
                    "approverEntraId"
                  ]
                }
              }
            },
            "maintenanceModeConfiguration": {
              "description": "Maintenance Mode configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Current mode of Maintenance Mode Configuration",
                  "enum": [
                    "On",
                    "CanNotDelete",
                    "Off",
                    "General",
                    "Advanced"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "principals": {
                  "type": "array",
                  "description": "The user, group or service principal object affected by Maintenance Mode",
                  "items": {
                    "type": "object",
                    "description": "Principal for maintenance mode or role assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The object id associated with the principal"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                        "enum": [
                          "User",
                          "Group",
                          "ServicePrincipal"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Justification for entering or exiting Maintenance Mode",
                  "enum": [
                    "Networking",
                    "Governance",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The identities assigned to this resource by the user.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "CommunityPatchProperties": {
      "type": "object",
      "description": "Community Resource Properties without default values",
      "properties": {
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "governedServiceList": {
          "type": "array",
          "description": "List of services governed by a community.",
          "items": {
            "type": "object",
            "description": "GovernedServiceItem Properties",
            "properties": {
              "serviceId": {
                "description": "Service ID",
                "type": "string",
                "enum": [
                  "AKS",
                  "AppService",
                  "AzureFirewalls",
                  "ContainerRegistry",
                  "CosmosDB",
                  "DataConnectors",
                  "Insights",
                  "KeyVault",
                  "Logic",
                  "MicrosoftSQL",
                  "Monitoring",
                  "PostgreSQL",
                  "PrivateDNSZones",
                  "ServiceBus",
                  "Storage"
                ],
                "x-ms-enum": {
                  "name": "ServiceIdentifier",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AKS",
                      "value": "AKS",
                      "description": "Service identifier for AKS"
                    },
                    {
                      "name": "AppService",
                      "value": "AppService",
                      "description": "Service identifier for App Service"
                    },
                    {
                      "name": "AzureFirewalls",
                      "value": "AzureFirewalls",
                      "description": "Service identifier for Azure Firewalls"
                    },
                    {
                      "name": "ContainerRegistry",
                      "value": "ContainerRegistry",
                      "description": "Service identifier for Container Registry"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "CosmosDB",
                      "description": "Service identifier for CosmosDB"
                    },
                    {
                      "name": "DataConnectors",
                      "value": "DataConnectors",
                      "description": "Service identifier for Data Connectors"
                    },
                    {
                      "name": "Insights",
                      "value": "Insights",
                      "description": "Service identifier for Insights"
                    },
                    {
                      "name": "KeyVault",
                      "value": "KeyVault",
                      "description": "Service identifier for Key Vault"
                    },
                    {
                      "name": "Logic",
                      "value": "Logic",
                      "description": "Service identifier for Logic"
                    },
                    {
                      "name": "MicrosoftSql",
                      "value": "MicrosoftSQL",
                      "description": "Service identifier for Microsoft SQL"
                    },
                    {
                      "name": "Monitoring",
                      "value": "Monitoring",
                      "description": "Service identifier for Monitoring"
                    },
                    {
                      "name": "PostgreSql",
                      "value": "PostgreSQL",
                      "description": "Service identifier for PostgreSQL"
                    },
                    {
                      "name": "PrivateDNSZones",
                      "value": "PrivateDNSZones",
                      "description": "Service identifier for Private DNS Zones"
                    },
                    {
                      "name": "ServiceBus",
                      "value": "ServiceBus",
                      "description": "Service identifier for Service Bus"
                    },
                    {
                      "name": "Storage",
                      "value": "Storage",
                      "description": "Service identifier for Storage"
                    }
                  ]
                }
              },
              "serviceName": {
                "type": "string",
                "description": "Service name.",
                "readOnly": true
              },
              "option": {
                "type": "string",
                "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                "enum": [
                  "Allow",
                  "Deny",
                  "ExceptionOnly",
                  "NotApplicable"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "enforcement": {
                "type": "string",
                "description": "Initiative enforcement (Enabled or Disabled).",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "policyAction": {
                "type": "string",
                "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                "enum": [
                  "AuditOnly",
                  "Enforce",
                  "None"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "initiatives": {
                "type": "array",
                "description": "Initiatives associated with this service.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "required": [
              "serviceId"
            ]
          },
          "x-ms-identifiers": []
        },
        "policyOverride": {
          "type": "string",
          "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
          "enum": [
            "Enclave",
            "None"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "communityRoleAssignments": {
          "type": "array",
          "description": "Community role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "firewallSku": {
          "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "FirewallSKU",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "FirewallSKU Basic"
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "FirwallSKU Standard"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "FirewallSKU Premium"
              }
            ]
          }
        },
        "approvalSettings": {
          "description": "Approval requirements for various actions on the community's resources.",
          "type": "object",
          "properties": {
            "mandatoryApprovers": {
              "type": "array",
              "description": "List of mandatory approvers for the approval request",
              "items": {
                "type": "object",
                "description": "Approver Metadata for approvals request.",
                "properties": {
                  "approverEntraId": {
                    "type": "string",
                    "description": "EntraId of the approver"
                  }
                },
                "required": [
                  "approverEntraId"
                ]
              },
              "x-ms-identifiers": [
                "approverEntraId"
              ]
            }
          }
        },
        "maintenanceModeConfiguration": {
          "description": "Maintenance Mode configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Current mode of Maintenance Mode Configuration",
              "enum": [
                "On",
                "CanNotDelete",
                "Off",
                "General",
                "Advanced"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "principals": {
              "type": "array",
              "description": "The user, group or service principal object affected by Maintenance Mode",
              "items": {
                "type": "object",
                "description": "Principal for maintenance mode or role assignments",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The object id associated with the principal"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the object id. We currently allow users, groups, and service principals",
                    "enum": [
                      "User",
                      "Group",
                      "ServicePrincipal"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "justification": {
              "type": "string",
              "description": "Justification for entering or exiting Maintenance Mode",
              "enum": [
                "Networking",
                "Governance",
                "Off"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "CommunityProperties": {
      "type": "object",
      "description": "Community Resource Properties",
      "properties": {
        "addressSpace": {
          "type": "string",
          "description": "Address Space.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by communities.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        },
        "managedResourceGroupName": {
          "type": "string",
          "description": "Managed resource group name.",
          "readOnly": true
        },
        "managedOnBehalfOfConfiguration": {
          "description": "Managed On Behalf Of Configuration.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "moboBrokerResources": {
              "type": "array",
              "description": "Managed-On-Behalf-Of broker resources",
              "items": {
                "type": "object",
                "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                  }
                }
              },
              "x-ms-identifiers": [
                "id"
              ]
            }
          }
        },
        "governedServiceList": {
          "type": "array",
          "description": "List of services governed by a community.",
          "items": {
            "type": "object",
            "description": "GovernedServiceItem Properties",
            "properties": {
              "serviceId": {
                "description": "Service ID",
                "type": "string",
                "enum": [
                  "AKS",
                  "AppService",
                  "AzureFirewalls",
                  "ContainerRegistry",
                  "CosmosDB",
                  "DataConnectors",
                  "Insights",
                  "KeyVault",
                  "Logic",
                  "MicrosoftSQL",
                  "Monitoring",
                  "PostgreSQL",
                  "PrivateDNSZones",
                  "ServiceBus",
                  "Storage"
                ],
                "x-ms-enum": {
                  "name": "ServiceIdentifier",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AKS",
                      "value": "AKS",
                      "description": "Service identifier for AKS"
                    },
                    {
                      "name": "AppService",
                      "value": "AppService",
                      "description": "Service identifier for App Service"
                    },
                    {
                      "name": "AzureFirewalls",
                      "value": "AzureFirewalls",
                      "description": "Service identifier for Azure Firewalls"
                    },
                    {
                      "name": "ContainerRegistry",
                      "value": "ContainerRegistry",
                      "description": "Service identifier for Container Registry"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "CosmosDB",
                      "description": "Service identifier for CosmosDB"
                    },
                    {
                      "name": "DataConnectors",
                      "value": "DataConnectors",
                      "description": "Service identifier for Data Connectors"
                    },
                    {
                      "name": "Insights",
                      "value": "Insights",
                      "description": "Service identifier for Insights"
                    },
                    {
                      "name": "KeyVault",
                      "value": "KeyVault",
                      "description": "Service identifier for Key Vault"
                    },
                    {
                      "name": "Logic",
                      "value": "Logic",
                      "description": "Service identifier for Logic"
                    },
                    {
                      "name": "MicrosoftSql",
                      "value": "MicrosoftSQL",
                      "description": "Service identifier for Microsoft SQL"
                    },
                    {
                      "name": "Monitoring",
                      "value": "Monitoring",
                      "description": "Service identifier for Monitoring"
                    },
                    {
                      "name": "PostgreSql",
                      "value": "PostgreSQL",
                      "description": "Service identifier for PostgreSQL"
                    },
                    {
                      "name": "PrivateDNSZones",
                      "value": "PrivateDNSZones",
                      "description": "Service identifier for Private DNS Zones"
                    },
                    {
                      "name": "ServiceBus",
                      "value": "ServiceBus",
                      "description": "Service identifier for Service Bus"
                    },
                    {
                      "name": "Storage",
                      "value": "Storage",
                      "description": "Service identifier for Storage"
                    }
                  ]
                }
              },
              "serviceName": {
                "type": "string",
                "description": "Service name.",
                "readOnly": true
              },
              "option": {
                "type": "string",
                "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                "enum": [
                  "Allow",
                  "Deny",
                  "ExceptionOnly",
                  "NotApplicable"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "enforcement": {
                "type": "string",
                "description": "Initiative enforcement (Enabled or Disabled).",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "policyAction": {
                "type": "string",
                "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                "enum": [
                  "AuditOnly",
                  "Enforce",
                  "None"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "initiatives": {
                "type": "array",
                "description": "Initiatives associated with this service.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "required": [
              "serviceId"
            ]
          },
          "x-ms-identifiers": []
        },
        "policyOverride": {
          "type": "string",
          "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
          "enum": [
            "Enclave",
            "None"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "communityRoleAssignments": {
          "type": "array",
          "description": "Community role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "firewallSku": {
          "type": "string",
          "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
          "default": "Standard",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "FirewallSKU",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "FirewallSKU Basic"
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "FirwallSKU Standard"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "FirewallSKU Premium"
              }
            ]
          }
        },
        "approvalSettings": {
          "description": "Approval requirements for various actions on the community's resources.",
          "type": "object",
          "properties": {
            "endpointCreation": {
              "description": "Approval required for endpoint creation (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "endpointUpdate": {
              "description": "Approval required for endpoint update (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "endpointDeletion": {
              "description": "Approval required for endpoint deletion (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "connectionCreation": {
              "description": "Approval required for enclave connection creation (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "connectionUpdate": {
              "description": "Approval required for enclave connection update (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "connectionDeletion": {
              "description": "Approval required for enclave connection deletion (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "enclaveCreation": {
              "description": "Approval required for virtual enclave creation (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "enclaveDeletion": {
              "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "maintenanceMode": {
              "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "serviceCatalogDeployment": {
              "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "notificationOnApprovalCreation": {
              "description": "Notification will be sent on creation of an Approval Request",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "notificationOnApprovalAction": {
              "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "notificationOnApprovalDeletion": {
              "description": "Notification will be sent on deletion of an Approval Request",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Required",
                "NotRequired"
              ],
              "x-ms-enum": {
                "name": "ApprovalPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Required",
                    "value": "Required",
                    "description": "Approval will be required for the specified action."
                  },
                  {
                    "name": "NotRequired",
                    "value": "NotRequired",
                    "description": "Approval will not be required for the specified action."
                  }
                ]
              }
            },
            "mandatoryApprovers": {
              "type": "array",
              "description": "List of mandatory approvers for the approval request",
              "items": {
                "type": "object",
                "description": "Approver Metadata for approvals request.",
                "properties": {
                  "approverEntraId": {
                    "type": "string",
                    "description": "EntraId of the approver"
                  }
                },
                "required": [
                  "approverEntraId"
                ]
              },
              "x-ms-identifiers": [
                "approverEntraId"
              ]
            },
            "minimumApproversRequired": {
              "type": "integer",
              "format": "int64",
              "description": "Minimum number of approvers required for the approval request",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "maintenanceModeConfiguration": {
          "description": "Maintenance Mode configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Current mode of Maintenance Mode Configuration",
              "default": "Off",
              "enum": [
                "On",
                "CanNotDelete",
                "Off",
                "General",
                "Advanced"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "principals": {
              "type": "array",
              "description": "The user, group or service principal object affected by Maintenance Mode",
              "default": [],
              "items": {
                "type": "object",
                "description": "Principal for maintenance mode or role assignments",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The object id associated with the principal"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the object id. We currently allow users, groups, and service principals",
                    "enum": [
                      "User",
                      "Group",
                      "ServicePrincipal"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "justification": {
              "type": "string",
              "description": "Justification for entering or exiting Maintenance Mode",
              "default": "Off",
              "enum": [
                "Networking",
                "Governance",
                "Off"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      }
    },
    "CommunityResource": {
      "type": "object",
      "description": "Community Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "addressSpace": {
              "type": "string",
              "description": "Address Space.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "dnsServers": {
              "type": "array",
              "description": "DNS Servers.",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids created by communities.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            },
            "managedResourceGroupName": {
              "type": "string",
              "description": "Managed resource group name.",
              "readOnly": true
            },
            "managedOnBehalfOfConfiguration": {
              "description": "Managed On Behalf Of Configuration.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "moboBrokerResources": {
                  "type": "array",
                  "description": "Managed-On-Behalf-Of broker resources",
                  "items": {
                    "type": "object",
                    "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                }
              }
            },
            "governedServiceList": {
              "type": "array",
              "description": "List of services governed by a community.",
              "items": {
                "type": "object",
                "description": "GovernedServiceItem Properties",
                "properties": {
                  "serviceId": {
                    "description": "Service ID",
                    "type": "string",
                    "enum": [
                      "AKS",
                      "AppService",
                      "AzureFirewalls",
                      "ContainerRegistry",
                      "CosmosDB",
                      "DataConnectors",
                      "Insights",
                      "KeyVault",
                      "Logic",
                      "MicrosoftSQL",
                      "Monitoring",
                      "PostgreSQL",
                      "PrivateDNSZones",
                      "ServiceBus",
                      "Storage"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceIdentifier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AKS",
                          "value": "AKS",
                          "description": "Service identifier for AKS"
                        },
                        {
                          "name": "AppService",
                          "value": "AppService",
                          "description": "Service identifier for App Service"
                        },
                        {
                          "name": "AzureFirewalls",
                          "value": "AzureFirewalls",
                          "description": "Service identifier for Azure Firewalls"
                        },
                        {
                          "name": "ContainerRegistry",
                          "value": "ContainerRegistry",
                          "description": "Service identifier for Container Registry"
                        },
                        {
                          "name": "CosmosDB",
                          "value": "CosmosDB",
                          "description": "Service identifier for CosmosDB"
                        },
                        {
                          "name": "DataConnectors",
                          "value": "DataConnectors",
                          "description": "Service identifier for Data Connectors"
                        },
                        {
                          "name": "Insights",
                          "value": "Insights",
                          "description": "Service identifier for Insights"
                        },
                        {
                          "name": "KeyVault",
                          "value": "KeyVault",
                          "description": "Service identifier for Key Vault"
                        },
                        {
                          "name": "Logic",
                          "value": "Logic",
                          "description": "Service identifier for Logic"
                        },
                        {
                          "name": "MicrosoftSql",
                          "value": "MicrosoftSQL",
                          "description": "Service identifier for Microsoft SQL"
                        },
                        {
                          "name": "Monitoring",
                          "value": "Monitoring",
                          "description": "Service identifier for Monitoring"
                        },
                        {
                          "name": "PostgreSql",
                          "value": "PostgreSQL",
                          "description": "Service identifier for PostgreSQL"
                        },
                        {
                          "name": "PrivateDNSZones",
                          "value": "PrivateDNSZones",
                          "description": "Service identifier for Private DNS Zones"
                        },
                        {
                          "name": "ServiceBus",
                          "value": "ServiceBus",
                          "description": "Service identifier for Service Bus"
                        },
                        {
                          "name": "Storage",
                          "value": "Storage",
                          "description": "Service identifier for Storage"
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "Service name.",
                    "readOnly": true
                  },
                  "option": {
                    "type": "string",
                    "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                    "enum": [
                      "Allow",
                      "Deny",
                      "ExceptionOnly",
                      "NotApplicable"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "enforcement": {
                    "type": "string",
                    "description": "Initiative enforcement (Enabled or Disabled).",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "policyAction": {
                    "type": "string",
                    "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                    "enum": [
                      "AuditOnly",
                      "Enforce",
                      "None"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "initiatives": {
                    "type": "array",
                    "description": "Initiatives associated with this service.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "serviceId"
                ]
              },
              "x-ms-identifiers": []
            },
            "policyOverride": {
              "type": "string",
              "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
              "enum": [
                "Enclave",
                "None"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "communityRoleAssignments": {
              "type": "array",
              "description": "Community role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "firewallSku": {
              "type": "string",
              "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
              "default": "Standard",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "FirewallSKU",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "FirewallSKU Basic"
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "FirwallSKU Standard"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "FirewallSKU Premium"
                  }
                ]
              }
            },
            "approvalSettings": {
              "description": "Approval requirements for various actions on the community's resources.",
              "type": "object",
              "properties": {
                "endpointCreation": {
                  "description": "Approval required for endpoint creation (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "endpointUpdate": {
                  "description": "Approval required for endpoint update (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "endpointDeletion": {
                  "description": "Approval required for endpoint deletion (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "connectionCreation": {
                  "description": "Approval required for enclave connection creation (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "connectionUpdate": {
                  "description": "Approval required for enclave connection update (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "connectionDeletion": {
                  "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "enclaveCreation": {
                  "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "enclaveDeletion": {
                  "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "maintenanceMode": {
                  "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "serviceCatalogDeployment": {
                  "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "notificationOnApprovalCreation": {
                  "description": "Notification will be sent on creation of an Approval Request",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "notificationOnApprovalAction": {
                  "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "notificationOnApprovalDeletion": {
                  "description": "Notification will be sent on deletion of an Approval Request",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Required",
                    "NotRequired"
                  ],
                  "x-ms-enum": {
                    "name": "ApprovalPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "Approval will be required for the specified action."
                      },
                      {
                        "name": "NotRequired",
                        "value": "NotRequired",
                        "description": "Approval will not be required for the specified action."
                      }
                    ]
                  }
                },
                "mandatoryApprovers": {
                  "type": "array",
                  "description": "List of mandatory approvers for the approval request",
                  "items": {
                    "type": "object",
                    "description": "Approver Metadata for approvals request.",
                    "properties": {
                      "approverEntraId": {
                        "type": "string",
                        "description": "EntraId of the approver"
                      }
                    },
                    "required": [
                      "approverEntraId"
                    ]
                  },
                  "x-ms-identifiers": [
                    "approverEntraId"
                  ]
                },
                "minimumApproversRequired": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Minimum number of approvers required for the approval request",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "maintenanceModeConfiguration": {
              "description": "Maintenance Mode configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Current mode of Maintenance Mode Configuration",
                  "default": "Off",
                  "enum": [
                    "On",
                    "CanNotDelete",
                    "Off",
                    "General",
                    "Advanced"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "principals": {
                  "type": "array",
                  "description": "The user, group or service principal object affected by Maintenance Mode",
                  "default": [],
                  "items": {
                    "type": "object",
                    "description": "Principal for maintenance mode or role assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The object id associated with the principal"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                        "enum": [
                          "User",
                          "Group",
                          "ServicePrincipal"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Justification for entering or exiting Maintenance Mode",
                  "default": "Off",
                  "enum": [
                    "Networking",
                    "Governance",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "CommunityResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities"
          }
        ]
      }
    },
    "CommunityResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityResource items on this page",
          "items": {
            "type": "object",
            "description": "Community Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "addressSpace": {
                    "type": "string",
                    "description": "Address Space.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dnsServers": {
                    "type": "array",
                    "description": "DNS Servers.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids created by communities.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  },
                  "managedResourceGroupName": {
                    "type": "string",
                    "description": "Managed resource group name.",
                    "readOnly": true
                  },
                  "managedOnBehalfOfConfiguration": {
                    "description": "Managed On Behalf Of Configuration.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "moboBrokerResources": {
                        "type": "array",
                        "description": "Managed-On-Behalf-Of broker resources",
                        "items": {
                          "type": "object",
                          "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "id"
                        ]
                      }
                    }
                  },
                  "governedServiceList": {
                    "type": "array",
                    "description": "List of services governed by a community.",
                    "items": {
                      "type": "object",
                      "description": "GovernedServiceItem Properties",
                      "properties": {
                        "serviceId": {
                          "description": "Service ID",
                          "type": "string",
                          "enum": [
                            "AKS",
                            "AppService",
                            "AzureFirewalls",
                            "ContainerRegistry",
                            "CosmosDB",
                            "DataConnectors",
                            "Insights",
                            "KeyVault",
                            "Logic",
                            "MicrosoftSQL",
                            "Monitoring",
                            "PostgreSQL",
                            "PrivateDNSZones",
                            "ServiceBus",
                            "Storage"
                          ],
                          "x-ms-enum": {
                            "name": "ServiceIdentifier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AKS",
                                "value": "AKS",
                                "description": "Service identifier for AKS"
                              },
                              {
                                "name": "AppService",
                                "value": "AppService",
                                "description": "Service identifier for App Service"
                              },
                              {
                                "name": "AzureFirewalls",
                                "value": "AzureFirewalls",
                                "description": "Service identifier for Azure Firewalls"
                              },
                              {
                                "name": "ContainerRegistry",
                                "value": "ContainerRegistry",
                                "description": "Service identifier for Container Registry"
                              },
                              {
                                "name": "CosmosDB",
                                "value": "CosmosDB",
                                "description": "Service identifier for CosmosDB"
                              },
                              {
                                "name": "DataConnectors",
                                "value": "DataConnectors",
                                "description": "Service identifier for Data Connectors"
                              },
                              {
                                "name": "Insights",
                                "value": "Insights",
                                "description": "Service identifier for Insights"
                              },
                              {
                                "name": "KeyVault",
                                "value": "KeyVault",
                                "description": "Service identifier for Key Vault"
                              },
                              {
                                "name": "Logic",
                                "value": "Logic",
                                "description": "Service identifier for Logic"
                              },
                              {
                                "name": "MicrosoftSql",
                                "value": "MicrosoftSQL",
                                "description": "Service identifier for Microsoft SQL"
                              },
                              {
                                "name": "Monitoring",
                                "value": "Monitoring",
                                "description": "Service identifier for Monitoring"
                              },
                              {
                                "name": "PostgreSql",
                                "value": "PostgreSQL",
                                "description": "Service identifier for PostgreSQL"
                              },
                              {
                                "name": "PrivateDNSZones",
                                "value": "PrivateDNSZones",
                                "description": "Service identifier for Private DNS Zones"
                              },
                              {
                                "name": "ServiceBus",
                                "value": "ServiceBus",
                                "description": "Service identifier for Service Bus"
                              },
                              {
                                "name": "Storage",
                                "value": "Storage",
                                "description": "Service identifier for Storage"
                              }
                            ]
                          }
                        },
                        "serviceName": {
                          "type": "string",
                          "description": "Service name.",
                          "readOnly": true
                        },
                        "option": {
                          "type": "string",
                          "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                          "enum": [
                            "Allow",
                            "Deny",
                            "ExceptionOnly",
                            "NotApplicable"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "enforcement": {
                          "type": "string",
                          "description": "Initiative enforcement (Enabled or Disabled).",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "policyAction": {
                          "type": "string",
                          "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                          "enum": [
                            "AuditOnly",
                            "Enforce",
                            "None"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "initiatives": {
                          "type": "array",
                          "description": "Initiatives associated with this service.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "serviceId"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "policyOverride": {
                    "type": "string",
                    "description": "Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.",
                    "enum": [
                      "Enclave",
                      "None"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "communityRoleAssignments": {
                    "type": "array",
                    "description": "Community role assignments",
                    "items": {
                      "type": "object",
                      "description": "Role assignment item that indicates which principals should be assigned this role definition",
                      "properties": {
                        "roleDefinitionId": {
                          "type": "string",
                          "description": "Role definition identifier"
                        },
                        "principals": {
                          "type": "array",
                          "description": "List of principal IDs to which to assign this role definition",
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "roleDefinitionId"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "firewallSku": {
                    "type": "string",
                    "description": "SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default",
                    "default": "Standard",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "FirewallSKU",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Basic",
                          "value": "Basic",
                          "description": "FirewallSKU Basic"
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "FirwallSKU Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium",
                          "description": "FirewallSKU Premium"
                        }
                      ]
                    }
                  },
                  "approvalSettings": {
                    "description": "Approval requirements for various actions on the community's resources.",
                    "type": "object",
                    "properties": {
                      "endpointCreation": {
                        "description": "Approval required for endpoint creation (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "endpointUpdate": {
                        "description": "Approval required for endpoint update (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "endpointDeletion": {
                        "description": "Approval required for endpoint deletion (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "connectionCreation": {
                        "description": "Approval required for enclave connection creation (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "connectionUpdate": {
                        "description": "Approval required for enclave connection update (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "connectionDeletion": {
                        "description": "Approval required for enclave connection deletion (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "enclaveCreation": {
                        "description": "Approval required for virtual enclave creation (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "enclaveDeletion": {
                        "description": "Approval required for virtual enclave deletion (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "maintenanceMode": {
                        "description": "Approval required for toggling maintenance mode (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "serviceCatalogDeployment": {
                        "description": "Approval required for deploying service catalog templates (Required or NotRequired).",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "notificationOnApprovalCreation": {
                        "description": "Notification will be sent on creation of an Approval Request",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "notificationOnApprovalAction": {
                        "description": "Notification will be sent on any action taken (Approve/Reject) on an Approval Request",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "notificationOnApprovalDeletion": {
                        "description": "Notification will be sent on deletion of an Approval Request",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Required",
                          "NotRequired"
                        ],
                        "x-ms-enum": {
                          "name": "ApprovalPolicy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Required",
                              "value": "Required",
                              "description": "Approval will be required for the specified action."
                            },
                            {
                              "name": "NotRequired",
                              "value": "NotRequired",
                              "description": "Approval will not be required for the specified action."
                            }
                          ]
                        }
                      },
                      "mandatoryApprovers": {
                        "type": "array",
                        "description": "List of mandatory approvers for the approval request",
                        "items": {
                          "type": "object",
                          "description": "Approver Metadata for approvals request.",
                          "properties": {
                            "approverEntraId": {
                              "type": "string",
                              "description": "EntraId of the approver"
                            }
                          },
                          "required": [
                            "approverEntraId"
                          ]
                        },
                        "x-ms-identifiers": [
                          "approverEntraId"
                        ]
                      },
                      "minimumApproversRequired": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Minimum number of approvers required for the approval request",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    }
                  },
                  "maintenanceModeConfiguration": {
                    "description": "Maintenance Mode configuration.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "description": "Current mode of Maintenance Mode Configuration",
                        "default": "Off",
                        "enum": [
                          "On",
                          "CanNotDelete",
                          "Off",
                          "General",
                          "Advanced"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      },
                      "principals": {
                        "type": "array",
                        "description": "The user, group or service principal object affected by Maintenance Mode",
                        "default": [],
                        "items": {
                          "type": "object",
                          "description": "Principal for maintenance mode or role assignments",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The object id associated with the principal"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the object id. We currently allow users, groups, and service principals",
                              "enum": [
                                "User",
                                "Group",
                                "ServicePrincipal"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      },
                      "justification": {
                        "type": "string",
                        "description": "Justification for entering or exiting Maintenance Mode",
                        "default": "Off",
                        "enum": [
                          "Networking",
                          "Governance",
                          "Off"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "mode"
                    ]
                  }
                }
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DestinationEndpointResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
          },
          {
            "type": "Microsoft.Mission/communities/communityEndpoints"
          }
        ]
      }
    },
    "DestinationType": {
      "type": "string",
      "description": "Destination Type Enum",
      "enum": [
        "FQDN",
        "FQDNTag",
        "IPAddress",
        "PrivateNetwork"
      ],
      "x-ms-enum": {
        "name": "DestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "FQDN",
            "value": "FQDN",
            "description": "DestinationType Type FQDN"
          },
          {
            "name": "FQDNTag",
            "value": "FQDNTag",
            "description": "DestinationType Type FQDNTag"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "DestinationType Type IPAddress"
          },
          {
            "name": "PrivateNetwork",
            "value": "PrivateNetwork",
            "description": "DestinationType Type PrivateNetwork"
          }
        ]
      }
    },
    "DiagnosticDestination": {
      "type": "string",
      "description": "Specifies the destination of where to store diagnostic logs.",
      "enum": [
        "CommunityOnly",
        "EnclaveOnly",
        "Both"
      ],
      "x-ms-enum": {
        "name": "DiagnosticDestination",
        "modelAsString": true,
        "values": [
          {
            "name": "CommunityOnly",
            "value": "CommunityOnly",
            "description": "DiagnosticDestination Type CommunityOnly"
          },
          {
            "name": "EnclaveOnly",
            "value": "EnclaveOnly",
            "description": "DiagnosticDestination Type EnclaveOnly"
          },
          {
            "name": "Both",
            "value": "Both",
            "description": "DiagnosticDestination Type Both"
          }
        ]
      }
    },
    "EnclaveAddressSpacesModel": {
      "type": "object",
      "description": "Enclave Address Spaces",
      "properties": {
        "enclaveAddressSpace": {
          "type": "string",
          "description": "Enclave Address Space"
        },
        "managedAddressSpace": {
          "type": "string",
          "description": "Managed Address Space"
        }
      }
    },
    "EnclaveConnectionPatchModel": {
      "type": "object",
      "description": "Enclave Connection Patch Resource",
      "properties": {
        "properties": {
          "description": "Enclave Connection Patch properties",
          "type": "object",
          "properties": {
            "sourceCidr": {
              "type": "string",
              "description": "Source CIDR."
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EnclaveConnectionPatchProperties": {
      "type": "object",
      "description": "Enclave Connection patchable Properties",
      "properties": {
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        }
      }
    },
    "EnclaveConnectionProperties": {
      "type": "object",
      "description": "Enclave Connection Resource properties",
      "properties": {
        "state": {
          "description": "The state of the enclaveConnection.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "PendingApproval",
            "PendingUpdate",
            "Approved",
            "Active",
            "Failed",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "EnclaveConnectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "EnclaveConnectionState Type Pending Approval"
              },
              {
                "name": "PendingUpdate",
                "value": "PendingUpdate",
                "description": "EnclaveConnectionState Type Pending Update"
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "EnclaveConnectionState Type Approved"
              },
              {
                "name": "Active",
                "value": "Active",
                "description": "EnclaveConnectionState Type Active"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "EnclaveConnectionState Type Failed"
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "EnclaveConnectionState Type Connected"
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "EnclaveConnectionState Type Disconnected"
              }
            ]
          }
        },
        "communityResourceId": {
          "description": "Community Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/communities"
              }
            ]
          }
        },
        "sourceResourceId": {
          "description": "Source Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/virtualEnclaves"
              },
              {
                "type": "Microsoft.Mission/communities/transitHubs"
              }
            ]
          }
        },
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        },
        "destinationEndpointId": {
          "description": "Destination Endpoint Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
              },
              {
                "type": "Microsoft.Mission/communities/communityEndpoints"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by enclave Connections.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        }
      },
      "required": [
        "communityResourceId",
        "sourceResourceId",
        "destinationEndpointId"
      ]
    },
    "EnclaveConnectionResource": {
      "type": "object",
      "description": "EnclaveConnection Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "The state of the enclaveConnection.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "PendingApproval",
                "PendingUpdate",
                "Approved",
                "Active",
                "Failed",
                "Connected",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "EnclaveConnectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PendingApproval",
                    "value": "PendingApproval",
                    "description": "EnclaveConnectionState Type Pending Approval"
                  },
                  {
                    "name": "PendingUpdate",
                    "value": "PendingUpdate",
                    "description": "EnclaveConnectionState Type Pending Update"
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "EnclaveConnectionState Type Approved"
                  },
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "EnclaveConnectionState Type Active"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "EnclaveConnectionState Type Failed"
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "EnclaveConnectionState Type Connected"
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "EnclaveConnectionState Type Disconnected"
                  }
                ]
              }
            },
            "communityResourceId": {
              "description": "Community Resource Id.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Mission/communities"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "description": "Source Resource Id.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Mission/virtualEnclaves"
                  },
                  {
                    "type": "Microsoft.Mission/communities/transitHubs"
                  }
                ]
              }
            },
            "sourceCidr": {
              "type": "string",
              "description": "Source CIDR."
            },
            "destinationEndpointId": {
              "description": "Destination Endpoint Resource Id.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                  },
                  {
                    "type": "Microsoft.Mission/communities/communityEndpoints"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids modified by enclave Connections.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            }
          },
          "required": [
            "communityResourceId",
            "sourceResourceId",
            "destinationEndpointId"
          ]
        }
      }
    },
    "EnclaveConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveConnectionResource items on this page",
          "items": {
            "type": "object",
            "description": "EnclaveConnection Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "state": {
                    "description": "The state of the enclaveConnection.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "PendingApproval",
                      "PendingUpdate",
                      "Approved",
                      "Active",
                      "Failed",
                      "Connected",
                      "Disconnected"
                    ],
                    "x-ms-enum": {
                      "name": "EnclaveConnectionState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "PendingApproval",
                          "value": "PendingApproval",
                          "description": "EnclaveConnectionState Type Pending Approval"
                        },
                        {
                          "name": "PendingUpdate",
                          "value": "PendingUpdate",
                          "description": "EnclaveConnectionState Type Pending Update"
                        },
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "EnclaveConnectionState Type Approved"
                        },
                        {
                          "name": "Active",
                          "value": "Active",
                          "description": "EnclaveConnectionState Type Active"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "EnclaveConnectionState Type Failed"
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "EnclaveConnectionState Type Connected"
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "EnclaveConnectionState Type Disconnected"
                        }
                      ]
                    }
                  },
                  "communityResourceId": {
                    "description": "Community Resource Id.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/communities"
                        }
                      ]
                    }
                  },
                  "sourceResourceId": {
                    "description": "Source Resource Id.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/virtualEnclaves"
                        },
                        {
                          "type": "Microsoft.Mission/communities/transitHubs"
                        }
                      ]
                    }
                  },
                  "sourceCidr": {
                    "type": "string",
                    "description": "Source CIDR."
                  },
                  "destinationEndpointId": {
                    "description": "Destination Endpoint Resource Id.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
                        },
                        {
                          "type": "Microsoft.Mission/communities/communityEndpoints"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids modified by enclave Connections.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "communityResourceId",
                  "sourceResourceId",
                  "destinationEndpointId"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveConnectionSourceResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves"
          },
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "EnclaveConnectionState": {
      "type": "string",
      "description": "Specifies the state of the enclave connection.",
      "enum": [
        "PendingApproval",
        "PendingUpdate",
        "Approved",
        "Active",
        "Failed",
        "Connected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "EnclaveConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "EnclaveConnectionState Type Pending Approval"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "EnclaveConnectionState Type Pending Update"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "EnclaveConnectionState Type Approved"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "EnclaveConnectionState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "EnclaveConnectionState Type Failed"
          },
          {
            "name": "Connected",
            "value": "Connected",
            "description": "EnclaveConnectionState Type Connected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "EnclaveConnectionState Type Disconnected"
          }
        ]
      }
    },
    "EnclaveDefaultSettingsModel": {
      "type": "object",
      "description": "Virtual Enclave Default Settings",
      "properties": {
        "keyVaultResourceId": {
          "description": "Key Vault Resource Id.",
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "storageAccountResourceId": {
          "description": "Storage Account Resource Id.",
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "logAnalyticsResourceIdCollection": {
          "type": "array",
          "description": "Log Analytics Resource Ids.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.OperationalInsights/workspaces"
                }
              ]
            }
          },
          "readOnly": true
        },
        "diagnosticDestination": {
          "type": "string",
          "description": "Diagnostic Destination.",
          "default": "EnclaveOnly",
          "enum": [
            "CommunityOnly",
            "EnclaveOnly",
            "Both"
          ],
          "x-ms-enum": {
            "name": "DiagnosticDestination",
            "modelAsString": true,
            "values": [
              {
                "name": "CommunityOnly",
                "value": "CommunityOnly",
                "description": "DiagnosticDestination Type CommunityOnly"
              },
              {
                "name": "EnclaveOnly",
                "value": "EnclaveOnly",
                "description": "DiagnosticDestination Type EnclaveOnly"
              },
              {
                "name": "Both",
                "value": "Both",
                "description": "DiagnosticDestination Type Both"
              }
            ]
          }
        }
      }
    },
    "EnclaveDefaultSettingsPatchModel": {
      "type": "object",
      "description": "Virtual Enclave Default Settings",
      "properties": {
        "diagnosticDestination": {
          "description": "Diagnostic Destination.",
          "type": "string",
          "enum": [
            "CommunityOnly",
            "EnclaveOnly",
            "Both"
          ],
          "x-ms-enum": {
            "name": "DiagnosticDestination",
            "modelAsString": true,
            "values": [
              {
                "name": "CommunityOnly",
                "value": "CommunityOnly",
                "description": "DiagnosticDestination Type CommunityOnly"
              },
              {
                "name": "EnclaveOnly",
                "value": "EnclaveOnly",
                "description": "DiagnosticDestination Type EnclaveOnly"
              },
              {
                "name": "Both",
                "value": "Both",
                "description": "DiagnosticDestination Type Both"
              }
            ]
          }
        }
      }
    },
    "EnclaveEndpointDestinationRule": {
      "type": "object",
      "description": "Enclave Endpoint Rule Properties",
      "properties": {
        "protocols": {
          "type": "array",
          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
          "items": {
            "type": "string",
            "description": "Enclave Endpoint Protocol Enum",
            "enum": [
              "ANY",
              "TCP",
              "UDP",
              "ICMP",
              "ESP",
              "AH"
            ],
            "x-ms-enum": {
              "name": "EnclaveEndpointProtocol",
              "modelAsString": true,
              "values": [
                {
                  "name": "ANY",
                  "value": "ANY",
                  "description": "EndpointProtocol Type ANY"
                },
                {
                  "name": "TCP",
                  "value": "TCP",
                  "description": "EndpointProtocol Type TCP"
                },
                {
                  "name": "UDP",
                  "value": "UDP",
                  "description": "EndpointProtocol Type UDP"
                },
                {
                  "name": "ICMP",
                  "value": "ICMP",
                  "description": "EndpointProtocol Type ICMP"
                },
                {
                  "name": "ESP",
                  "value": "ESP",
                  "description": "EndpointProtocol Type ESP"
                },
                {
                  "name": "AH",
                  "value": "AH",
                  "description": "EndpointProtocol Type AH"
                }
              ]
            }
          }
        },
        "endpointRuleName": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "destination": {
          "type": "string",
          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
        },
        "ports": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        }
      }
    },
    "EnclaveEndpointPatchModel": {
      "type": "object",
      "description": "Enclave Endpoint Patch Resource",
      "properties": {
        "properties": {
          "description": "Enclave Endpoint Patch properties",
          "type": "object",
          "properties": {
            "ruleCollection": {
              "type": "array",
              "description": "Enclave Endpoint Rule Collection.",
              "items": {
                "type": "object",
                "description": "Enclave Endpoint Rule Properties",
                "properties": {
                  "protocols": {
                    "type": "array",
                    "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                    "items": {
                      "type": "string",
                      "description": "Enclave Endpoint Protocol Enum",
                      "enum": [
                        "ANY",
                        "TCP",
                        "UDP",
                        "ICMP",
                        "ESP",
                        "AH"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveEndpointProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ANY",
                            "value": "ANY",
                            "description": "EndpointProtocol Type ANY"
                          },
                          {
                            "name": "TCP",
                            "value": "TCP",
                            "description": "EndpointProtocol Type TCP"
                          },
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "EndpointProtocol Type UDP"
                          },
                          {
                            "name": "ICMP",
                            "value": "ICMP",
                            "description": "EndpointProtocol Type ICMP"
                          },
                          {
                            "name": "ESP",
                            "value": "ESP",
                            "description": "EndpointProtocol Type ESP"
                          },
                          {
                            "name": "AH",
                            "value": "AH",
                            "description": "EndpointProtocol Type AH"
                          }
                        ]
                      }
                    }
                  },
                  "endpointRuleName": {
                    "type": "string",
                    "description": "Endpoint Rule Name."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                  },
                  "ports": {
                    "type": "string",
                    "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EnclaveEndpointPatchProperties": {
      "type": "object",
      "description": "Enclave Endpoint patchable Properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Enclave Endpoint Rule Collection.",
          "items": {
            "type": "object",
            "description": "Enclave Endpoint Rule Properties",
            "properties": {
              "protocols": {
                "type": "array",
                "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                "items": {
                  "type": "string",
                  "description": "Enclave Endpoint Protocol Enum",
                  "enum": [
                    "ANY",
                    "TCP",
                    "UDP",
                    "ICMP",
                    "ESP",
                    "AH"
                  ],
                  "x-ms-enum": {
                    "name": "EnclaveEndpointProtocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ANY",
                        "value": "ANY",
                        "description": "EndpointProtocol Type ANY"
                      },
                      {
                        "name": "TCP",
                        "value": "TCP",
                        "description": "EndpointProtocol Type TCP"
                      },
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "EndpointProtocol Type UDP"
                      },
                      {
                        "name": "ICMP",
                        "value": "ICMP",
                        "description": "EndpointProtocol Type ICMP"
                      },
                      {
                        "name": "ESP",
                        "value": "ESP",
                        "description": "EndpointProtocol Type ESP"
                      },
                      {
                        "name": "AH",
                        "value": "AH",
                        "description": "EndpointProtocol Type AH"
                      }
                    ]
                  }
                }
              },
              "endpointRuleName": {
                "type": "string",
                "description": "Endpoint Rule Name."
              },
              "destination": {
                "type": "string",
                "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
              },
              "ports": {
                "type": "string",
                "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "EnclaveEndpointProperties": {
      "type": "object",
      "description": "Enclave Endpoint Resource properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Enclave Endpoint Rule Collection.",
          "items": {
            "type": "object",
            "description": "Enclave Endpoint Rule Properties",
            "properties": {
              "protocols": {
                "type": "array",
                "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                "items": {
                  "type": "string",
                  "description": "Enclave Endpoint Protocol Enum",
                  "enum": [
                    "ANY",
                    "TCP",
                    "UDP",
                    "ICMP",
                    "ESP",
                    "AH"
                  ],
                  "x-ms-enum": {
                    "name": "EnclaveEndpointProtocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ANY",
                        "value": "ANY",
                        "description": "EndpointProtocol Type ANY"
                      },
                      {
                        "name": "TCP",
                        "value": "TCP",
                        "description": "EndpointProtocol Type TCP"
                      },
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "EndpointProtocol Type UDP"
                      },
                      {
                        "name": "ICMP",
                        "value": "ICMP",
                        "description": "EndpointProtocol Type ICMP"
                      },
                      {
                        "name": "ESP",
                        "value": "ESP",
                        "description": "EndpointProtocol Type ESP"
                      },
                      {
                        "name": "AH",
                        "value": "AH",
                        "description": "EndpointProtocol Type AH"
                      }
                    ]
                  }
                }
              },
              "endpointRuleName": {
                "type": "string",
                "description": "Endpoint Rule Name."
              },
              "destination": {
                "type": "string",
                "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
              },
              "ports": {
                "type": "string",
                "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by community endpoint.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        }
      },
      "required": [
        "ruleCollection"
      ]
    },
    "EnclaveEndpointProtocol": {
      "type": "string",
      "description": "Enclave Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH"
      ],
      "x-ms-enum": {
        "name": "EnclaveEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "EndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "EndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "EndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "EndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "EndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "EndpointProtocol Type AH"
          }
        ]
      }
    },
    "EnclaveEndpointResource": {
      "type": "object",
      "description": "EnclaveEndpoint Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "ruleCollection": {
              "type": "array",
              "description": "Enclave Endpoint Rule Collection.",
              "items": {
                "type": "object",
                "description": "Enclave Endpoint Rule Properties",
                "properties": {
                  "protocols": {
                    "type": "array",
                    "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                    "items": {
                      "type": "string",
                      "description": "Enclave Endpoint Protocol Enum",
                      "enum": [
                        "ANY",
                        "TCP",
                        "UDP",
                        "ICMP",
                        "ESP",
                        "AH"
                      ],
                      "x-ms-enum": {
                        "name": "EnclaveEndpointProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ANY",
                            "value": "ANY",
                            "description": "EndpointProtocol Type ANY"
                          },
                          {
                            "name": "TCP",
                            "value": "TCP",
                            "description": "EndpointProtocol Type TCP"
                          },
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "EndpointProtocol Type UDP"
                          },
                          {
                            "name": "ICMP",
                            "value": "ICMP",
                            "description": "EndpointProtocol Type ICMP"
                          },
                          {
                            "name": "ESP",
                            "value": "ESP",
                            "description": "EndpointProtocol Type ESP"
                          },
                          {
                            "name": "AH",
                            "value": "AH",
                            "description": "EndpointProtocol Type AH"
                          }
                        ]
                      }
                    }
                  },
                  "endpointRuleName": {
                    "type": "string",
                    "description": "Endpoint Rule Name."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                  },
                  "ports": {
                    "type": "string",
                    "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids created by community endpoint.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            }
          },
          "required": [
            "ruleCollection"
          ]
        }
      }
    },
    "EnclaveEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveEndpointResource items on this page",
          "items": {
            "type": "object",
            "description": "EnclaveEndpoint Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "ruleCollection": {
                    "type": "array",
                    "description": "Enclave Endpoint Rule Collection.",
                    "items": {
                      "type": "object",
                      "description": "Enclave Endpoint Rule Properties",
                      "properties": {
                        "protocols": {
                          "type": "array",
                          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
                          "items": {
                            "type": "string",
                            "description": "Enclave Endpoint Protocol Enum",
                            "enum": [
                              "ANY",
                              "TCP",
                              "UDP",
                              "ICMP",
                              "ESP",
                              "AH"
                            ],
                            "x-ms-enum": {
                              "name": "EnclaveEndpointProtocol",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ANY",
                                  "value": "ANY",
                                  "description": "EndpointProtocol Type ANY"
                                },
                                {
                                  "name": "TCP",
                                  "value": "TCP",
                                  "description": "EndpointProtocol Type TCP"
                                },
                                {
                                  "name": "UDP",
                                  "value": "UDP",
                                  "description": "EndpointProtocol Type UDP"
                                },
                                {
                                  "name": "ICMP",
                                  "value": "ICMP",
                                  "description": "EndpointProtocol Type ICMP"
                                },
                                {
                                  "name": "ESP",
                                  "value": "ESP",
                                  "description": "EndpointProtocol Type ESP"
                                },
                                {
                                  "name": "AH",
                                  "value": "AH",
                                  "description": "EndpointProtocol Type AH"
                                }
                              ]
                            }
                          }
                        },
                        "endpointRuleName": {
                          "type": "string",
                          "description": "Endpoint Rule Name."
                        },
                        "destination": {
                          "type": "string",
                          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
                        },
                        "ports": {
                          "type": "string",
                          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids created by community endpoint.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "ruleCollection"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveResource": {
      "type": "object",
      "description": "Virtual Enclave Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "enclaveVirtualNetwork": {
              "description": "Virtual Network.",
              "type": "object",
              "properties": {
                "networkName": {
                  "type": "string",
                  "description": "Network Name."
                },
                "networkSize": {
                  "type": "string",
                  "description": "Network Size.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "customCidrRange": {
                  "type": "string",
                  "description": "Custom CIDR Range.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "subnetConfigurations": {
                  "type": "array",
                  "description": "Subnet Configurations.",
                  "items": {
                    "type": "object",
                    "description": "Subnet Configuration",
                    "properties": {
                      "subnetName": {
                        "type": "string",
                        "description": "Subnet name."
                      },
                      "subnetResourceId": {
                        "description": "Subnet Resource ID.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/subnets"
                            }
                          ]
                        }
                      },
                      "networkPrefixSize": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Network prefix size."
                      },
                      "subnetDelegation": {
                        "type": "string",
                        "description": "Subnet delegation."
                      },
                      "addressPrefix": {
                        "type": "string",
                        "description": "Address prefix.",
                        "readOnly": true
                      },
                      "networkSecurityGroupResourceId": {
                        "description": "Network security group ID.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "subnetName",
                      "networkPrefixSize"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "allowSubnetCommunication": {
                  "type": "boolean",
                  "description": "Allow Subnet Communication.",
                  "default": false,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "enclaveAddressSpaces": {
              "description": "Enclave Address Spaces",
              "readOnly": true,
              "type": "object",
              "properties": {
                "enclaveAddressSpace": {
                  "type": "string",
                  "description": "Enclave Address Space"
                },
                "managedAddressSpace": {
                  "type": "string",
                  "description": "Managed Address Space"
                }
              }
            },
            "communityResourceId": {
              "description": "Community Resource Id.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Mission/communities"
                  }
                ]
              }
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids created by Virtual Enclave.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            },
            "managedResourceGroupName": {
              "type": "string",
              "description": "Managed resource group name.",
              "readOnly": true
            },
            "managedOnBehalfOfConfiguration": {
              "description": "Managed On Behalf Of Configuration.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "moboBrokerResources": {
                  "type": "array",
                  "description": "Managed-On-Behalf-Of broker resources",
                  "items": {
                    "type": "object",
                    "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                }
              }
            },
            "bastionEnabled": {
              "type": "boolean",
              "description": "Deploy Bastion service (True or False).",
              "default": false
            },
            "enclaveRoleAssignments": {
              "type": "array",
              "description": "Enclave role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "workloadRoleAssignments": {
              "type": "array",
              "description": "Workload role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "governedServiceList": {
              "type": "array",
              "description": "Enclave specific policies",
              "items": {
                "type": "object",
                "description": "GovernedServiceItem Properties",
                "properties": {
                  "serviceId": {
                    "description": "Service ID",
                    "type": "string",
                    "enum": [
                      "AKS",
                      "AppService",
                      "AzureFirewalls",
                      "ContainerRegistry",
                      "CosmosDB",
                      "DataConnectors",
                      "Insights",
                      "KeyVault",
                      "Logic",
                      "MicrosoftSQL",
                      "Monitoring",
                      "PostgreSQL",
                      "PrivateDNSZones",
                      "ServiceBus",
                      "Storage"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceIdentifier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AKS",
                          "value": "AKS",
                          "description": "Service identifier for AKS"
                        },
                        {
                          "name": "AppService",
                          "value": "AppService",
                          "description": "Service identifier for App Service"
                        },
                        {
                          "name": "AzureFirewalls",
                          "value": "AzureFirewalls",
                          "description": "Service identifier for Azure Firewalls"
                        },
                        {
                          "name": "ContainerRegistry",
                          "value": "ContainerRegistry",
                          "description": "Service identifier for Container Registry"
                        },
                        {
                          "name": "CosmosDB",
                          "value": "CosmosDB",
                          "description": "Service identifier for CosmosDB"
                        },
                        {
                          "name": "DataConnectors",
                          "value": "DataConnectors",
                          "description": "Service identifier for Data Connectors"
                        },
                        {
                          "name": "Insights",
                          "value": "Insights",
                          "description": "Service identifier for Insights"
                        },
                        {
                          "name": "KeyVault",
                          "value": "KeyVault",
                          "description": "Service identifier for Key Vault"
                        },
                        {
                          "name": "Logic",
                          "value": "Logic",
                          "description": "Service identifier for Logic"
                        },
                        {
                          "name": "MicrosoftSql",
                          "value": "MicrosoftSQL",
                          "description": "Service identifier for Microsoft SQL"
                        },
                        {
                          "name": "Monitoring",
                          "value": "Monitoring",
                          "description": "Service identifier for Monitoring"
                        },
                        {
                          "name": "PostgreSql",
                          "value": "PostgreSQL",
                          "description": "Service identifier for PostgreSQL"
                        },
                        {
                          "name": "PrivateDNSZones",
                          "value": "PrivateDNSZones",
                          "description": "Service identifier for Private DNS Zones"
                        },
                        {
                          "name": "ServiceBus",
                          "value": "ServiceBus",
                          "description": "Service identifier for Service Bus"
                        },
                        {
                          "name": "Storage",
                          "value": "Storage",
                          "description": "Service identifier for Storage"
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "Service name.",
                    "readOnly": true
                  },
                  "option": {
                    "type": "string",
                    "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                    "enum": [
                      "Allow",
                      "Deny",
                      "ExceptionOnly",
                      "NotApplicable"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "enforcement": {
                    "type": "string",
                    "description": "Initiative enforcement (Enabled or Disabled).",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "policyAction": {
                    "type": "string",
                    "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                    "enum": [
                      "AuditOnly",
                      "Enforce",
                      "None"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "initiatives": {
                    "type": "array",
                    "description": "Initiatives associated with this service.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "serviceId"
                ]
              },
              "x-ms-identifiers": []
            },
            "enclaveDefaultSettings": {
              "description": "Enclave default settings.",
              "type": "object",
              "properties": {
                "keyVaultResourceId": {
                  "description": "Key Vault Resource Id.",
                  "readOnly": true,
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.KeyVault/vaults"
                      }
                    ]
                  }
                },
                "storageAccountResourceId": {
                  "description": "Storage Account Resource Id.",
                  "readOnly": true,
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Storage/storageAccounts"
                      }
                    ]
                  }
                },
                "logAnalyticsResourceIdCollection": {
                  "type": "array",
                  "description": "Log Analytics Resource Ids.",
                  "items": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.OperationalInsights/workspaces"
                        }
                      ]
                    }
                  },
                  "readOnly": true
                },
                "diagnosticDestination": {
                  "type": "string",
                  "description": "Diagnostic Destination.",
                  "default": "EnclaveOnly",
                  "enum": [
                    "CommunityOnly",
                    "EnclaveOnly",
                    "Both"
                  ],
                  "x-ms-enum": {
                    "name": "DiagnosticDestination",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "CommunityOnly",
                        "value": "CommunityOnly",
                        "description": "DiagnosticDestination Type CommunityOnly"
                      },
                      {
                        "name": "EnclaveOnly",
                        "value": "EnclaveOnly",
                        "description": "DiagnosticDestination Type EnclaveOnly"
                      },
                      {
                        "name": "Both",
                        "value": "Both",
                        "description": "DiagnosticDestination Type Both"
                      }
                    ]
                  }
                }
              }
            },
            "maintenanceModeConfiguration": {
              "description": "Maintenance Mode configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Current mode of Maintenance Mode Configuration",
                  "default": "Off",
                  "enum": [
                    "On",
                    "CanNotDelete",
                    "Off",
                    "General",
                    "Advanced"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "principals": {
                  "type": "array",
                  "description": "The user, group or service principal object affected by Maintenance Mode",
                  "default": [],
                  "items": {
                    "type": "object",
                    "description": "Principal for maintenance mode or role assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The object id associated with the principal"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                        "enum": [
                          "User",
                          "Group",
                          "ServicePrincipal"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Justification for entering or exiting Maintenance Mode",
                  "default": "Off",
                  "enum": [
                    "Networking",
                    "Governance",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          },
          "required": [
            "enclaveVirtualNetwork",
            "communityResourceId"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "EnclaveResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveResource items on this page",
          "items": {
            "type": "object",
            "description": "Virtual Enclave Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "enclaveVirtualNetwork": {
                    "description": "Virtual Network.",
                    "type": "object",
                    "properties": {
                      "networkName": {
                        "type": "string",
                        "description": "Network Name."
                      },
                      "networkSize": {
                        "type": "string",
                        "description": "Network Size.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "customCidrRange": {
                        "type": "string",
                        "description": "Custom CIDR Range.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "subnetConfigurations": {
                        "type": "array",
                        "description": "Subnet Configurations.",
                        "items": {
                          "type": "object",
                          "description": "Subnet Configuration",
                          "properties": {
                            "subnetName": {
                              "type": "string",
                              "description": "Subnet name."
                            },
                            "subnetResourceId": {
                              "description": "Subnet Resource ID.",
                              "readOnly": true,
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/virtualNetworks/subnets"
                                  }
                                ]
                              }
                            },
                            "networkPrefixSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Network prefix size."
                            },
                            "subnetDelegation": {
                              "type": "string",
                              "description": "Subnet delegation."
                            },
                            "addressPrefix": {
                              "type": "string",
                              "description": "Address prefix.",
                              "readOnly": true
                            },
                            "networkSecurityGroupResourceId": {
                              "description": "Network security group ID.",
                              "readOnly": true,
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Network/networkSecurityGroups"
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "subnetName",
                            "networkPrefixSize"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "allowSubnetCommunication": {
                        "type": "boolean",
                        "description": "Allow Subnet Communication.",
                        "default": false,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    }
                  },
                  "enclaveAddressSpaces": {
                    "description": "Enclave Address Spaces",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "enclaveAddressSpace": {
                        "type": "string",
                        "description": "Enclave Address Space"
                      },
                      "managedAddressSpace": {
                        "type": "string",
                        "description": "Managed Address Space"
                      }
                    }
                  },
                  "communityResourceId": {
                    "description": "Community Resource Id.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Mission/communities"
                        }
                      ]
                    }
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids created by Virtual Enclave.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  },
                  "managedResourceGroupName": {
                    "type": "string",
                    "description": "Managed resource group name.",
                    "readOnly": true
                  },
                  "managedOnBehalfOfConfiguration": {
                    "description": "Managed On Behalf Of Configuration.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "moboBrokerResources": {
                        "type": "array",
                        "description": "Managed-On-Behalf-Of broker resources",
                        "items": {
                          "type": "object",
                          "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "id"
                        ]
                      }
                    }
                  },
                  "bastionEnabled": {
                    "type": "boolean",
                    "description": "Deploy Bastion service (True or False).",
                    "default": false
                  },
                  "enclaveRoleAssignments": {
                    "type": "array",
                    "description": "Enclave role assignments",
                    "items": {
                      "type": "object",
                      "description": "Role assignment item that indicates which principals should be assigned this role definition",
                      "properties": {
                        "roleDefinitionId": {
                          "type": "string",
                          "description": "Role definition identifier"
                        },
                        "principals": {
                          "type": "array",
                          "description": "List of principal IDs to which to assign this role definition",
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "roleDefinitionId"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "workloadRoleAssignments": {
                    "type": "array",
                    "description": "Workload role assignments",
                    "items": {
                      "type": "object",
                      "description": "Role assignment item that indicates which principals should be assigned this role definition",
                      "properties": {
                        "roleDefinitionId": {
                          "type": "string",
                          "description": "Role definition identifier"
                        },
                        "principals": {
                          "type": "array",
                          "description": "List of principal IDs to which to assign this role definition",
                          "items": {
                            "type": "object",
                            "description": "Principal for maintenance mode or role assignments",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The object id associated with the principal"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the object id. We currently allow users, groups, and service principals",
                                "enum": [
                                  "User",
                                  "Group",
                                  "ServicePrincipal"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "roleDefinitionId"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "governedServiceList": {
                    "type": "array",
                    "description": "Enclave specific policies",
                    "items": {
                      "type": "object",
                      "description": "GovernedServiceItem Properties",
                      "properties": {
                        "serviceId": {
                          "description": "Service ID",
                          "type": "string",
                          "enum": [
                            "AKS",
                            "AppService",
                            "AzureFirewalls",
                            "ContainerRegistry",
                            "CosmosDB",
                            "DataConnectors",
                            "Insights",
                            "KeyVault",
                            "Logic",
                            "MicrosoftSQL",
                            "Monitoring",
                            "PostgreSQL",
                            "PrivateDNSZones",
                            "ServiceBus",
                            "Storage"
                          ],
                          "x-ms-enum": {
                            "name": "ServiceIdentifier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AKS",
                                "value": "AKS",
                                "description": "Service identifier for AKS"
                              },
                              {
                                "name": "AppService",
                                "value": "AppService",
                                "description": "Service identifier for App Service"
                              },
                              {
                                "name": "AzureFirewalls",
                                "value": "AzureFirewalls",
                                "description": "Service identifier for Azure Firewalls"
                              },
                              {
                                "name": "ContainerRegistry",
                                "value": "ContainerRegistry",
                                "description": "Service identifier for Container Registry"
                              },
                              {
                                "name": "CosmosDB",
                                "value": "CosmosDB",
                                "description": "Service identifier for CosmosDB"
                              },
                              {
                                "name": "DataConnectors",
                                "value": "DataConnectors",
                                "description": "Service identifier for Data Connectors"
                              },
                              {
                                "name": "Insights",
                                "value": "Insights",
                                "description": "Service identifier for Insights"
                              },
                              {
                                "name": "KeyVault",
                                "value": "KeyVault",
                                "description": "Service identifier for Key Vault"
                              },
                              {
                                "name": "Logic",
                                "value": "Logic",
                                "description": "Service identifier for Logic"
                              },
                              {
                                "name": "MicrosoftSql",
                                "value": "MicrosoftSQL",
                                "description": "Service identifier for Microsoft SQL"
                              },
                              {
                                "name": "Monitoring",
                                "value": "Monitoring",
                                "description": "Service identifier for Monitoring"
                              },
                              {
                                "name": "PostgreSql",
                                "value": "PostgreSQL",
                                "description": "Service identifier for PostgreSQL"
                              },
                              {
                                "name": "PrivateDNSZones",
                                "value": "PrivateDNSZones",
                                "description": "Service identifier for Private DNS Zones"
                              },
                              {
                                "name": "ServiceBus",
                                "value": "ServiceBus",
                                "description": "Service identifier for Service Bus"
                              },
                              {
                                "name": "Storage",
                                "value": "Storage",
                                "description": "Service identifier for Storage"
                              }
                            ]
                          }
                        },
                        "serviceName": {
                          "type": "string",
                          "description": "Service name.",
                          "readOnly": true
                        },
                        "option": {
                          "type": "string",
                          "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                          "enum": [
                            "Allow",
                            "Deny",
                            "ExceptionOnly",
                            "NotApplicable"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "enforcement": {
                          "type": "string",
                          "description": "Initiative enforcement (Enabled or Disabled).",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "policyAction": {
                          "type": "string",
                          "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                          "enum": [
                            "AuditOnly",
                            "Enforce",
                            "None"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        },
                        "initiatives": {
                          "type": "array",
                          "description": "Initiatives associated with this service.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "serviceId"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "enclaveDefaultSettings": {
                    "description": "Enclave default settings.",
                    "type": "object",
                    "properties": {
                      "keyVaultResourceId": {
                        "description": "Key Vault Resource Id.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.KeyVault/vaults"
                            }
                          ]
                        }
                      },
                      "storageAccountResourceId": {
                        "description": "Storage Account Resource Id.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts"
                            }
                          ]
                        }
                      },
                      "logAnalyticsResourceIdCollection": {
                        "type": "array",
                        "description": "Log Analytics Resource Ids.",
                        "items": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.OperationalInsights/workspaces"
                              }
                            ]
                          }
                        },
                        "readOnly": true
                      },
                      "diagnosticDestination": {
                        "type": "string",
                        "description": "Diagnostic Destination.",
                        "default": "EnclaveOnly",
                        "enum": [
                          "CommunityOnly",
                          "EnclaveOnly",
                          "Both"
                        ],
                        "x-ms-enum": {
                          "name": "DiagnosticDestination",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "CommunityOnly",
                              "value": "CommunityOnly",
                              "description": "DiagnosticDestination Type CommunityOnly"
                            },
                            {
                              "name": "EnclaveOnly",
                              "value": "EnclaveOnly",
                              "description": "DiagnosticDestination Type EnclaveOnly"
                            },
                            {
                              "name": "Both",
                              "value": "Both",
                              "description": "DiagnosticDestination Type Both"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "maintenanceModeConfiguration": {
                    "description": "Maintenance Mode configuration.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "description": "Current mode of Maintenance Mode Configuration",
                        "default": "Off",
                        "enum": [
                          "On",
                          "CanNotDelete",
                          "Off",
                          "General",
                          "Advanced"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      },
                      "principals": {
                        "type": "array",
                        "description": "The user, group or service principal object affected by Maintenance Mode",
                        "default": [],
                        "items": {
                          "type": "object",
                          "description": "Principal for maintenance mode or role assignments",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The object id associated with the principal"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the object id. We currently allow users, groups, and service principals",
                              "enum": [
                                "User",
                                "Group",
                                "ServicePrincipal"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      },
                      "justification": {
                        "type": "string",
                        "description": "Justification for entering or exiting Maintenance Mode",
                        "default": "Off",
                        "enum": [
                          "Networking",
                          "Governance",
                          "Off"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "mode"
                    ]
                  }
                },
                "required": [
                  "enclaveVirtualNetwork",
                  "communityResourceId"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveVirtualNetworkModel": {
      "type": "object",
      "description": "Enclave Virtual Network Properties",
      "properties": {
        "networkName": {
          "type": "string",
          "description": "Network Name."
        },
        "networkSize": {
          "type": "string",
          "description": "Network Size.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "customCidrRange": {
          "type": "string",
          "description": "Custom CIDR Range.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "subnetConfigurations": {
          "type": "array",
          "description": "Subnet Configurations.",
          "items": {
            "type": "object",
            "description": "Subnet Configuration",
            "properties": {
              "subnetName": {
                "type": "string",
                "description": "Subnet name."
              },
              "subnetResourceId": {
                "description": "Subnet Resource ID.",
                "readOnly": true,
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                  ]
                }
              },
              "networkPrefixSize": {
                "type": "integer",
                "format": "int32",
                "description": "Network prefix size."
              },
              "subnetDelegation": {
                "type": "string",
                "description": "Subnet delegation."
              },
              "addressPrefix": {
                "type": "string",
                "description": "Address prefix.",
                "readOnly": true
              },
              "networkSecurityGroupResourceId": {
                "description": "Network security group ID.",
                "readOnly": true,
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups"
                    }
                  ]
                }
              }
            },
            "required": [
              "subnetName",
              "networkPrefixSize"
            ]
          },
          "x-ms-identifiers": []
        },
        "allowSubnetCommunication": {
          "type": "boolean",
          "description": "Allow Subnet Communication.",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FirewallSKU": {
      "type": "string",
      "description": "Azure Firewall SKU",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "FirewallSKU",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic",
            "description": "FirewallSKU Basic"
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "FirwallSKU Standard"
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "FirewallSKU Premium"
          }
        ]
      }
    },
    "GovernedServiceItem": {
      "type": "object",
      "description": "GovernedServiceItem Properties",
      "properties": {
        "serviceId": {
          "description": "Service ID",
          "type": "string",
          "enum": [
            "AKS",
            "AppService",
            "AzureFirewalls",
            "ContainerRegistry",
            "CosmosDB",
            "DataConnectors",
            "Insights",
            "KeyVault",
            "Logic",
            "MicrosoftSQL",
            "Monitoring",
            "PostgreSQL",
            "PrivateDNSZones",
            "ServiceBus",
            "Storage"
          ],
          "x-ms-enum": {
            "name": "ServiceIdentifier",
            "modelAsString": true,
            "values": [
              {
                "name": "AKS",
                "value": "AKS",
                "description": "Service identifier for AKS"
              },
              {
                "name": "AppService",
                "value": "AppService",
                "description": "Service identifier for App Service"
              },
              {
                "name": "AzureFirewalls",
                "value": "AzureFirewalls",
                "description": "Service identifier for Azure Firewalls"
              },
              {
                "name": "ContainerRegistry",
                "value": "ContainerRegistry",
                "description": "Service identifier for Container Registry"
              },
              {
                "name": "CosmosDB",
                "value": "CosmosDB",
                "description": "Service identifier for CosmosDB"
              },
              {
                "name": "DataConnectors",
                "value": "DataConnectors",
                "description": "Service identifier for Data Connectors"
              },
              {
                "name": "Insights",
                "value": "Insights",
                "description": "Service identifier for Insights"
              },
              {
                "name": "KeyVault",
                "value": "KeyVault",
                "description": "Service identifier for Key Vault"
              },
              {
                "name": "Logic",
                "value": "Logic",
                "description": "Service identifier for Logic"
              },
              {
                "name": "MicrosoftSql",
                "value": "MicrosoftSQL",
                "description": "Service identifier for Microsoft SQL"
              },
              {
                "name": "Monitoring",
                "value": "Monitoring",
                "description": "Service identifier for Monitoring"
              },
              {
                "name": "PostgreSql",
                "value": "PostgreSQL",
                "description": "Service identifier for PostgreSQL"
              },
              {
                "name": "PrivateDNSZones",
                "value": "PrivateDNSZones",
                "description": "Service identifier for Private DNS Zones"
              },
              {
                "name": "ServiceBus",
                "value": "ServiceBus",
                "description": "Service identifier for Service Bus"
              },
              {
                "name": "Storage",
                "value": "Storage",
                "description": "Service identifier for Storage"
              }
            ]
          }
        },
        "serviceName": {
          "type": "string",
          "description": "Service name.",
          "readOnly": true
        },
        "option": {
          "type": "string",
          "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
          "enum": [
            "Allow",
            "Deny",
            "ExceptionOnly",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "enforcement": {
          "type": "string",
          "description": "Initiative enforcement (Enabled or Disabled).",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "policyAction": {
          "type": "string",
          "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
          "enum": [
            "AuditOnly",
            "Enforce",
            "None"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "initiatives": {
          "type": "array",
          "description": "Initiatives associated with this service.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "serviceId"
      ]
    },
    "KeyVaultResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.KeyVault/vaults"
          }
        ]
      }
    },
    "LogAnalyticsResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.OperationalInsights/workspaces"
          }
        ]
      }
    },
    "MaintenanceModeConfigurationModel": {
      "type": "object",
      "description": "Maintenance Mode",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Current mode of Maintenance Mode Configuration",
          "default": "Off",
          "enum": [
            "On",
            "CanNotDelete",
            "Off",
            "General",
            "Advanced"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "principals": {
          "type": "array",
          "description": "The user, group or service principal object affected by Maintenance Mode",
          "default": [],
          "items": {
            "type": "object",
            "description": "Principal for maintenance mode or role assignments",
            "properties": {
              "id": {
                "type": "string",
                "description": "The object id associated with the principal"
              },
              "type": {
                "type": "string",
                "description": "The type of the object id. We currently allow users, groups, and service principals",
                "enum": [
                  "User",
                  "Group",
                  "ServicePrincipal"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for entering or exiting Maintenance Mode",
          "default": "Off",
          "enum": [
            "Networking",
            "Governance",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "MaintenanceModeConfigurationPatchModel": {
      "type": "object",
      "description": "Maintenance Mode Patch Model",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Current mode of Maintenance Mode Configuration",
          "enum": [
            "On",
            "CanNotDelete",
            "Off",
            "General",
            "Advanced"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "principals": {
          "type": "array",
          "description": "The user, group or service principal object affected by Maintenance Mode",
          "items": {
            "type": "object",
            "description": "Principal for maintenance mode or role assignments",
            "properties": {
              "id": {
                "type": "string",
                "description": "The object id associated with the principal"
              },
              "type": {
                "type": "string",
                "description": "The type of the object id. We currently allow users, groups, and service principals",
                "enum": [
                  "User",
                  "Group",
                  "ServicePrincipal"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for entering or exiting Maintenance Mode",
          "enum": [
            "Networking",
            "Governance",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      }
    },
    "MandatoryApprover": {
      "type": "object",
      "description": "Approver Metadata for approvals request.",
      "properties": {
        "approverEntraId": {
          "type": "string",
          "description": "EntraId of the approver"
        }
      },
      "required": [
        "approverEntraId"
      ]
    },
    "NsgResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/networkSecurityGroups"
          }
        ]
      }
    },
    "Principal": {
      "type": "object",
      "description": "Principal for maintenance mode or role assignments",
      "properties": {
        "id": {
          "type": "string",
          "description": "The object id associated with the principal"
        },
        "type": {
          "type": "string",
          "description": "The type of the object id. We currently allow users, groups, and service principals",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Creating",
        "Deleting",
        "NotSpecified",
        "Running",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Provisioning State Type Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Provisioning State Type Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Provisioning State Type Deleting"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Provisioning State Type NotSpecified"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Provisioning State Type Running"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Provisioning State Type Updating"
          }
        ]
      },
      "readOnly": true
    },
    "RequestMetadata": {
      "type": "object",
      "description": "Request Metadata for approvals request.",
      "properties": {
        "resourceAction": {
          "type": "string",
          "description": "Resource Action of the item being approved or declined."
        },
        "approvalCallbackRoute": {
          "type": "string",
          "description": "Route name for the approval callback"
        },
        "approvalCallbackPayload": {
          "type": "string",
          "description": "Payload to be sent upon any action on approval request"
        },
        "approvalStatus": {
          "type": "string",
          "description": "Status of the approval. Uses ApprovalStatus enum.",
          "default": "Pending",
          "enum": [
            "Approved",
            "Rejected",
            "Pending",
            "Deleted",
            "Expired"
          ],
          "x-ms-enum": {
            "name": "ApprovalStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Approved",
                "value": "Approved",
                "description": "ApprovalStatus Type Approved"
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "ApprovalStatus Type Rejected"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "ApprovalStatus Type Pending"
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "ApprovalStatus Type Deleted"
              },
              {
                "name": "Expired",
                "value": "Expired",
                "description": "ApprovalStatus Type Expired"
              }
            ]
          }
        }
      },
      "required": [
        "resourceAction"
      ]
    },
    "RequestMetadataUpdatableProperties": {
      "type": "object",
      "description": "Request Metadata patch properties.",
      "properties": {
        "resourceAction": {
          "type": "string",
          "description": "Resource Action of the item being approved or declined."
        },
        "approvalCallbackRoute": {
          "type": "string",
          "description": "Route name for the approval callback"
        },
        "approvalCallbackPayload": {
          "type": "string",
          "description": "Payload to be sent upon any action on approval request"
        },
        "approvalStatus": {
          "description": "Status of the approval. Uses ApprovalStatus enum.",
          "type": "string",
          "enum": [
            "Approved",
            "Rejected",
            "Pending",
            "Deleted",
            "Expired"
          ],
          "x-ms-enum": {
            "name": "ApprovalStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Approved",
                "value": "Approved",
                "description": "ApprovalStatus Type Approved"
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "ApprovalStatus Type Rejected"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "ApprovalStatus Type Pending"
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "ApprovalStatus Type Deleted"
              },
              {
                "name": "Expired",
                "value": "Expired",
                "description": "ApprovalStatus Type Expired"
              }
            ]
          }
        }
      }
    },
    "RoleAssignmentItem": {
      "type": "object",
      "description": "Role assignment item that indicates which principals should be assigned this role definition",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "Role definition identifier"
        },
        "principals": {
          "type": "array",
          "description": "List of principal IDs to which to assign this role definition",
          "items": {
            "type": "object",
            "description": "Principal for maintenance mode or role assignments",
            "properties": {
              "id": {
                "type": "string",
                "description": "The object id associated with the principal"
              },
              "type": {
                "type": "string",
                "description": "The type of the object id. We currently allow users, groups, and service principals",
                "enum": [
                  "User",
                  "Group",
                  "ServicePrincipal"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        }
      },
      "required": [
        "roleDefinitionId"
      ]
    },
    "ServiceIdentifier": {
      "type": "string",
      "description": "Identifier for governed services.",
      "enum": [
        "AKS",
        "AppService",
        "AzureFirewalls",
        "ContainerRegistry",
        "CosmosDB",
        "DataConnectors",
        "Insights",
        "KeyVault",
        "Logic",
        "MicrosoftSQL",
        "Monitoring",
        "PostgreSQL",
        "PrivateDNSZones",
        "ServiceBus",
        "Storage"
      ],
      "x-ms-enum": {
        "name": "ServiceIdentifier",
        "modelAsString": true,
        "values": [
          {
            "name": "AKS",
            "value": "AKS",
            "description": "Service identifier for AKS"
          },
          {
            "name": "AppService",
            "value": "AppService",
            "description": "Service identifier for App Service"
          },
          {
            "name": "AzureFirewalls",
            "value": "AzureFirewalls",
            "description": "Service identifier for Azure Firewalls"
          },
          {
            "name": "ContainerRegistry",
            "value": "ContainerRegistry",
            "description": "Service identifier for Container Registry"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "Service identifier for CosmosDB"
          },
          {
            "name": "DataConnectors",
            "value": "DataConnectors",
            "description": "Service identifier for Data Connectors"
          },
          {
            "name": "Insights",
            "value": "Insights",
            "description": "Service identifier for Insights"
          },
          {
            "name": "KeyVault",
            "value": "KeyVault",
            "description": "Service identifier for Key Vault"
          },
          {
            "name": "Logic",
            "value": "Logic",
            "description": "Service identifier for Logic"
          },
          {
            "name": "MicrosoftSql",
            "value": "MicrosoftSQL",
            "description": "Service identifier for Microsoft SQL"
          },
          {
            "name": "Monitoring",
            "value": "Monitoring",
            "description": "Service identifier for Monitoring"
          },
          {
            "name": "PostgreSql",
            "value": "PostgreSQL",
            "description": "Service identifier for PostgreSQL"
          },
          {
            "name": "PrivateDNSZones",
            "value": "PrivateDNSZones",
            "description": "Service identifier for Private DNS Zones"
          },
          {
            "name": "ServiceBus",
            "value": "ServiceBus",
            "description": "Service identifier for Service Bus"
          },
          {
            "name": "Storage",
            "value": "Storage",
            "description": "Service identifier for Storage"
          }
        ]
      }
    },
    "StorageAccountResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Storage/storageAccounts"
          }
        ]
      }
    },
    "SubnetConfiguration": {
      "type": "object",
      "description": "Subnet Configuration",
      "properties": {
        "subnetName": {
          "type": "string",
          "description": "Subnet name."
        },
        "subnetResourceId": {
          "description": "Subnet Resource ID.",
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkPrefixSize": {
          "type": "integer",
          "format": "int32",
          "description": "Network prefix size."
        },
        "subnetDelegation": {
          "type": "string",
          "description": "Subnet delegation."
        },
        "addressPrefix": {
          "type": "string",
          "description": "Address prefix.",
          "readOnly": true
        },
        "networkSecurityGroupResourceId": {
          "description": "Network security group ID.",
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/networkSecurityGroups"
              }
            ]
          }
        }
      },
      "required": [
        "subnetName",
        "networkPrefixSize"
      ]
    },
    "SubnetResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "TransitHubPatchModel": {
      "type": "object",
      "description": "TH Patch Resource",
      "properties": {
        "properties": {
          "description": "The TransitHub resource.",
          "type": "object",
          "properties": {
            "state": {
              "description": "The state of the transitHub.",
              "type": "string",
              "enum": [
                "PendingApproval",
                "Approved",
                "PendingUpdate",
                "Active",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "TransitHubState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PendingApproval",
                    "value": "PendingApproval",
                    "description": "TransitHubState Type PendingApproval"
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "TransitHubState Type Approved"
                  },
                  {
                    "name": "PendingUpdate",
                    "value": "PendingUpdate",
                    "description": "TransitHubState Type PendingUpdate"
                  },
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "TransitHubState Type Active"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "TransitHubState Type Failed"
                  }
                ]
              }
            },
            "transitOption": {
              "description": "The TransitOption of the transitHub.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Transit Option Type.",
                  "type": "string",
                  "enum": [
                    "ExpressRoute",
                    "Gateway",
                    "Peering"
                  ],
                  "x-ms-enum": {
                    "name": "TransitOptionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ExpressRoute",
                        "value": "ExpressRoute",
                        "description": "TransitOptionType ExpressRoute"
                      },
                      {
                        "name": "Gateway",
                        "value": "Gateway",
                        "description": "TransitOptionType Gateway"
                      },
                      {
                        "name": "Peering",
                        "value": "Peering",
                        "description": "TransitOptionType Peering"
                      }
                    ]
                  }
                },
                "params": {
                  "description": "Transit Option Params",
                  "type": "object",
                  "properties": {
                    "scaleUnits": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Transit Option Params scaleUnits."
                    },
                    "remoteVirtualNetworkId": {
                      "description": "Transit Option Params remoteVirtualNetworkId.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransitHubPatchProperties": {
      "type": "object",
      "description": "Transit Hub patchable Properties",
      "properties": {
        "state": {
          "description": "The state of the transitHub.",
          "type": "string",
          "enum": [
            "PendingApproval",
            "Approved",
            "PendingUpdate",
            "Active",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "TransitHubState",
            "modelAsString": true,
            "values": [
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "TransitHubState Type PendingApproval"
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "TransitHubState Type Approved"
              },
              {
                "name": "PendingUpdate",
                "value": "PendingUpdate",
                "description": "TransitHubState Type PendingUpdate"
              },
              {
                "name": "Active",
                "value": "Active",
                "description": "TransitHubState Type Active"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "TransitHubState Type Failed"
              }
            ]
          }
        },
        "transitOption": {
          "description": "The TransitOption of the transitHub.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Transit Option Type.",
              "type": "string",
              "enum": [
                "ExpressRoute",
                "Gateway",
                "Peering"
              ],
              "x-ms-enum": {
                "name": "TransitOptionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ExpressRoute",
                    "value": "ExpressRoute",
                    "description": "TransitOptionType ExpressRoute"
                  },
                  {
                    "name": "Gateway",
                    "value": "Gateway",
                    "description": "TransitOptionType Gateway"
                  },
                  {
                    "name": "Peering",
                    "value": "Peering",
                    "description": "TransitOptionType Peering"
                  }
                ]
              }
            },
            "params": {
              "description": "Transit Option Params",
              "type": "object",
              "properties": {
                "scaleUnits": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Transit Option Params scaleUnits."
                },
                "remoteVirtualNetworkId": {
                  "description": "Transit Option Params remoteVirtualNetworkId.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "TransitHubProperties": {
      "type": "object",
      "description": "Describes the properties of an Transit Hub.",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "state": {
          "description": "The state of the transitHub.",
          "type": "string",
          "enum": [
            "PendingApproval",
            "Approved",
            "PendingUpdate",
            "Active",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "TransitHubState",
            "modelAsString": true,
            "values": [
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "TransitHubState Type PendingApproval"
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "TransitHubState Type Approved"
              },
              {
                "name": "PendingUpdate",
                "value": "PendingUpdate",
                "description": "TransitHubState Type PendingUpdate"
              },
              {
                "name": "Active",
                "value": "Active",
                "description": "TransitHubState Type Active"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "TransitHubState Type Failed"
              }
            ]
          }
        },
        "transitOption": {
          "description": "The TransitOption of the transitHub.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Transit Option Type.",
              "type": "string",
              "enum": [
                "ExpressRoute",
                "Gateway",
                "Peering"
              ],
              "x-ms-enum": {
                "name": "TransitOptionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ExpressRoute",
                    "value": "ExpressRoute",
                    "description": "TransitOptionType ExpressRoute"
                  },
                  {
                    "name": "Gateway",
                    "value": "Gateway",
                    "description": "TransitOptionType Gateway"
                  },
                  {
                    "name": "Peering",
                    "value": "Peering",
                    "description": "TransitOptionType Peering"
                  }
                ]
              }
            },
            "params": {
              "description": "Transit Option Params",
              "type": "object",
              "properties": {
                "scaleUnits": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Transit Option Params scaleUnits."
                },
                "remoteVirtualNetworkId": {
                  "description": "Transit Option Params remoteVirtualNetworkId.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by transitHubs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        }
      }
    },
    "TransitHubResource": {
      "type": "object",
      "description": "TransitHub Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "state": {
              "description": "The state of the transitHub.",
              "type": "string",
              "enum": [
                "PendingApproval",
                "Approved",
                "PendingUpdate",
                "Active",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "TransitHubState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PendingApproval",
                    "value": "PendingApproval",
                    "description": "TransitHubState Type PendingApproval"
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "TransitHubState Type Approved"
                  },
                  {
                    "name": "PendingUpdate",
                    "value": "PendingUpdate",
                    "description": "TransitHubState Type PendingUpdate"
                  },
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "TransitHubState Type Active"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "TransitHubState Type Failed"
                  }
                ]
              }
            },
            "transitOption": {
              "description": "The TransitOption of the transitHub.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Transit Option Type.",
                  "type": "string",
                  "enum": [
                    "ExpressRoute",
                    "Gateway",
                    "Peering"
                  ],
                  "x-ms-enum": {
                    "name": "TransitOptionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ExpressRoute",
                        "value": "ExpressRoute",
                        "description": "TransitOptionType ExpressRoute"
                      },
                      {
                        "name": "Gateway",
                        "value": "Gateway",
                        "description": "TransitOptionType Gateway"
                      },
                      {
                        "name": "Peering",
                        "value": "Peering",
                        "description": "TransitOptionType Peering"
                      }
                    ]
                  }
                },
                "params": {
                  "description": "Transit Option Params",
                  "type": "object",
                  "properties": {
                    "scaleUnits": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Transit Option Params scaleUnits."
                    },
                    "remoteVirtualNetworkId": {
                      "description": "Transit Option Params remoteVirtualNetworkId.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "resourceCollection": {
              "type": "array",
              "description": "List of resource ids modified by transitHubs.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource."
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "TransitHubResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "TransitHubResourceListResult": {
      "type": "object",
      "description": "The response of a TransitHubResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TransitHubResource items on this page",
          "items": {
            "type": "object",
            "description": "TransitHub Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "state": {
                    "description": "The state of the transitHub.",
                    "type": "string",
                    "enum": [
                      "PendingApproval",
                      "Approved",
                      "PendingUpdate",
                      "Active",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "TransitHubState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "PendingApproval",
                          "value": "PendingApproval",
                          "description": "TransitHubState Type PendingApproval"
                        },
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "TransitHubState Type Approved"
                        },
                        {
                          "name": "PendingUpdate",
                          "value": "PendingUpdate",
                          "description": "TransitHubState Type PendingUpdate"
                        },
                        {
                          "name": "Active",
                          "value": "Active",
                          "description": "TransitHubState Type Active"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "TransitHubState Type Failed"
                        }
                      ]
                    }
                  },
                  "transitOption": {
                    "description": "The TransitOption of the transitHub.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Transit Option Type.",
                        "type": "string",
                        "enum": [
                          "ExpressRoute",
                          "Gateway",
                          "Peering"
                        ],
                        "x-ms-enum": {
                          "name": "TransitOptionType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ExpressRoute",
                              "value": "ExpressRoute",
                              "description": "TransitOptionType ExpressRoute"
                            },
                            {
                              "name": "Gateway",
                              "value": "Gateway",
                              "description": "TransitOptionType Gateway"
                            },
                            {
                              "name": "Peering",
                              "value": "Peering",
                              "description": "TransitOptionType Peering"
                            }
                          ]
                        }
                      },
                      "params": {
                        "description": "Transit Option Params",
                        "type": "object",
                        "properties": {
                          "scaleUnits": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Transit Option Params scaleUnits."
                          },
                          "remoteVirtualNetworkId": {
                            "description": "Transit Option Params remoteVirtualNetworkId.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "resourceCollection": {
                    "type": "array",
                    "description": "List of resource ids modified by transitHubs.",
                    "items": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "A type definition that refers the id to an Azure Resource Manager resource."
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TransitHubState": {
      "type": "string",
      "description": "Specifies the state of the transitHub.",
      "enum": [
        "PendingApproval",
        "Approved",
        "PendingUpdate",
        "Active",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "TransitHubState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "TransitHubState Type PendingApproval"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "TransitHubState Type Approved"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "TransitHubState Type PendingUpdate"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "TransitHubState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "TransitHubState Type Failed"
          }
        ]
      }
    },
    "TransitOption": {
      "type": "object",
      "description": "TransitOption Properties",
      "properties": {
        "type": {
          "description": "Transit Option Type.",
          "type": "string",
          "enum": [
            "ExpressRoute",
            "Gateway",
            "Peering"
          ],
          "x-ms-enum": {
            "name": "TransitOptionType",
            "modelAsString": true,
            "values": [
              {
                "name": "ExpressRoute",
                "value": "ExpressRoute",
                "description": "TransitOptionType ExpressRoute"
              },
              {
                "name": "Gateway",
                "value": "Gateway",
                "description": "TransitOptionType Gateway"
              },
              {
                "name": "Peering",
                "value": "Peering",
                "description": "TransitOptionType Peering"
              }
            ]
          }
        },
        "params": {
          "description": "Transit Option Params",
          "type": "object",
          "properties": {
            "scaleUnits": {
              "type": "integer",
              "format": "int64",
              "description": "Transit Option Params scaleUnits."
            },
            "remoteVirtualNetworkId": {
              "description": "Transit Option Params remoteVirtualNetworkId.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/virtualNetworks"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "TransitOptionParams": {
      "type": "object",
      "description": "TransitOptionParams Properties",
      "properties": {
        "scaleUnits": {
          "type": "integer",
          "format": "int64",
          "description": "Transit Option Params scaleUnits."
        },
        "remoteVirtualNetworkId": {
          "description": "Transit Option Params remoteVirtualNetworkId.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        }
      }
    },
    "TransitOptionType": {
      "type": "string",
      "description": "Specifies the type of the transitOption.",
      "enum": [
        "ExpressRoute",
        "Gateway",
        "Peering"
      ],
      "x-ms-enum": {
        "name": "TransitOptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ExpressRoute",
            "value": "ExpressRoute",
            "description": "TransitOptionType ExpressRoute"
          },
          {
            "name": "Gateway",
            "value": "Gateway",
            "description": "TransitOptionType Gateway"
          },
          {
            "name": "Peering",
            "value": "Peering",
            "description": "TransitOptionType Peering"
          }
        ]
      }
    },
    "VirtualEnclavePatchModel": {
      "type": "object",
      "description": "Virtual Enclave Patch Model",
      "properties": {
        "properties": {
          "description": "Virtual Enclave Patch properties",
          "type": "object",
          "properties": {
            "enclaveVirtualNetwork": {
              "description": "Virtual Network.",
              "type": "object",
              "properties": {
                "networkName": {
                  "type": "string",
                  "description": "Network Name."
                },
                "networkSize": {
                  "type": "string",
                  "description": "Network Size.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "customCidrRange": {
                  "type": "string",
                  "description": "Custom CIDR Range.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "subnetConfigurations": {
                  "type": "array",
                  "description": "Subnet Configurations.",
                  "items": {
                    "type": "object",
                    "description": "Subnet Configuration",
                    "properties": {
                      "subnetName": {
                        "type": "string",
                        "description": "Subnet name."
                      },
                      "subnetResourceId": {
                        "description": "Subnet Resource ID.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/subnets"
                            }
                          ]
                        }
                      },
                      "networkPrefixSize": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Network prefix size."
                      },
                      "subnetDelegation": {
                        "type": "string",
                        "description": "Subnet delegation."
                      },
                      "addressPrefix": {
                        "type": "string",
                        "description": "Address prefix.",
                        "readOnly": true
                      },
                      "networkSecurityGroupResourceId": {
                        "description": "Network security group ID.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "subnetName",
                      "networkPrefixSize"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "allowSubnetCommunication": {
                  "type": "boolean",
                  "description": "Allow Subnet Communication.",
                  "default": false,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "bastionEnabled": {
              "type": "boolean",
              "description": "Deploy Bastion service (True or False)."
            },
            "enclaveRoleAssignments": {
              "type": "array",
              "description": "Enclave role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "workloadRoleAssignments": {
              "type": "array",
              "description": "Workload role assignments",
              "items": {
                "type": "object",
                "description": "Role assignment item that indicates which principals should be assigned this role definition",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "Role definition identifier"
                  },
                  "principals": {
                    "type": "array",
                    "description": "List of principal IDs to which to assign this role definition",
                    "items": {
                      "type": "object",
                      "description": "Principal for maintenance mode or role assignments",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object id associated with the principal"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the object id. We currently allow users, groups, and service principals",
                          "enum": [
                            "User",
                            "Group",
                            "ServicePrincipal"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "required": [
                  "roleDefinitionId"
                ]
              },
              "x-ms-identifiers": []
            },
            "governedServiceList": {
              "type": "array",
              "description": "Enclave specific policies",
              "items": {
                "type": "object",
                "description": "GovernedServiceItem Properties",
                "properties": {
                  "serviceId": {
                    "description": "Service ID",
                    "type": "string",
                    "enum": [
                      "AKS",
                      "AppService",
                      "AzureFirewalls",
                      "ContainerRegistry",
                      "CosmosDB",
                      "DataConnectors",
                      "Insights",
                      "KeyVault",
                      "Logic",
                      "MicrosoftSQL",
                      "Monitoring",
                      "PostgreSQL",
                      "PrivateDNSZones",
                      "ServiceBus",
                      "Storage"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceIdentifier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AKS",
                          "value": "AKS",
                          "description": "Service identifier for AKS"
                        },
                        {
                          "name": "AppService",
                          "value": "AppService",
                          "description": "Service identifier for App Service"
                        },
                        {
                          "name": "AzureFirewalls",
                          "value": "AzureFirewalls",
                          "description": "Service identifier for Azure Firewalls"
                        },
                        {
                          "name": "ContainerRegistry",
                          "value": "ContainerRegistry",
                          "description": "Service identifier for Container Registry"
                        },
                        {
                          "name": "CosmosDB",
                          "value": "CosmosDB",
                          "description": "Service identifier for CosmosDB"
                        },
                        {
                          "name": "DataConnectors",
                          "value": "DataConnectors",
                          "description": "Service identifier for Data Connectors"
                        },
                        {
                          "name": "Insights",
                          "value": "Insights",
                          "description": "Service identifier for Insights"
                        },
                        {
                          "name": "KeyVault",
                          "value": "KeyVault",
                          "description": "Service identifier for Key Vault"
                        },
                        {
                          "name": "Logic",
                          "value": "Logic",
                          "description": "Service identifier for Logic"
                        },
                        {
                          "name": "MicrosoftSql",
                          "value": "MicrosoftSQL",
                          "description": "Service identifier for Microsoft SQL"
                        },
                        {
                          "name": "Monitoring",
                          "value": "Monitoring",
                          "description": "Service identifier for Monitoring"
                        },
                        {
                          "name": "PostgreSql",
                          "value": "PostgreSQL",
                          "description": "Service identifier for PostgreSQL"
                        },
                        {
                          "name": "PrivateDNSZones",
                          "value": "PrivateDNSZones",
                          "description": "Service identifier for Private DNS Zones"
                        },
                        {
                          "name": "ServiceBus",
                          "value": "ServiceBus",
                          "description": "Service identifier for Service Bus"
                        },
                        {
                          "name": "Storage",
                          "value": "Storage",
                          "description": "Service identifier for Storage"
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "Service name.",
                    "readOnly": true
                  },
                  "option": {
                    "type": "string",
                    "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                    "enum": [
                      "Allow",
                      "Deny",
                      "ExceptionOnly",
                      "NotApplicable"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "enforcement": {
                    "type": "string",
                    "description": "Initiative enforcement (Enabled or Disabled).",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "policyAction": {
                    "type": "string",
                    "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                    "enum": [
                      "AuditOnly",
                      "Enforce",
                      "None"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  },
                  "initiatives": {
                    "type": "array",
                    "description": "Initiatives associated with this service.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "serviceId"
                ]
              },
              "x-ms-identifiers": []
            },
            "enclaveDefaultSettings": {
              "description": "Enclave default settings.",
              "type": "object",
              "properties": {
                "diagnosticDestination": {
                  "description": "Diagnostic Destination.",
                  "type": "string",
                  "enum": [
                    "CommunityOnly",
                    "EnclaveOnly",
                    "Both"
                  ],
                  "x-ms-enum": {
                    "name": "DiagnosticDestination",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "CommunityOnly",
                        "value": "CommunityOnly",
                        "description": "DiagnosticDestination Type CommunityOnly"
                      },
                      {
                        "name": "EnclaveOnly",
                        "value": "EnclaveOnly",
                        "description": "DiagnosticDestination Type EnclaveOnly"
                      },
                      {
                        "name": "Both",
                        "value": "Both",
                        "description": "DiagnosticDestination Type Both"
                      }
                    ]
                  }
                }
              }
            },
            "maintenanceModeConfiguration": {
              "description": "Maintenance Mode configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Current mode of Maintenance Mode Configuration",
                  "enum": [
                    "On",
                    "CanNotDelete",
                    "Off",
                    "General",
                    "Advanced"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                },
                "principals": {
                  "type": "array",
                  "description": "The user, group or service principal object affected by Maintenance Mode",
                  "items": {
                    "type": "object",
                    "description": "Principal for maintenance mode or role assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The object id associated with the principal"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the object id. We currently allow users, groups, and service principals",
                        "enum": [
                          "User",
                          "Group",
                          "ServicePrincipal"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Justification for entering or exiting Maintenance Mode",
                  "enum": [
                    "Networking",
                    "Governance",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The identities assigned to this resource by the user.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualEnclavePatchProperties": {
      "type": "object",
      "description": "Virtual Enclave Patchable Properties",
      "properties": {
        "enclaveVirtualNetwork": {
          "description": "Virtual Network.",
          "type": "object",
          "properties": {
            "networkName": {
              "type": "string",
              "description": "Network Name."
            },
            "networkSize": {
              "type": "string",
              "description": "Network Size.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "customCidrRange": {
              "type": "string",
              "description": "Custom CIDR Range.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "subnetConfigurations": {
              "type": "array",
              "description": "Subnet Configurations.",
              "items": {
                "type": "object",
                "description": "Subnet Configuration",
                "properties": {
                  "subnetName": {
                    "type": "string",
                    "description": "Subnet name."
                  },
                  "subnetResourceId": {
                    "description": "Subnet Resource ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    }
                  },
                  "networkPrefixSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Network prefix size."
                  },
                  "subnetDelegation": {
                    "type": "string",
                    "description": "Subnet delegation."
                  },
                  "addressPrefix": {
                    "type": "string",
                    "description": "Address prefix.",
                    "readOnly": true
                  },
                  "networkSecurityGroupResourceId": {
                    "description": "Network security group ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/networkSecurityGroups"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "subnetName",
                  "networkPrefixSize"
                ]
              },
              "x-ms-identifiers": []
            },
            "allowSubnetCommunication": {
              "type": "boolean",
              "description": "Allow Subnet Communication.",
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "bastionEnabled": {
          "type": "boolean",
          "description": "Deploy Bastion service (True or False)."
        },
        "enclaveRoleAssignments": {
          "type": "array",
          "description": "Enclave role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "workloadRoleAssignments": {
          "type": "array",
          "description": "Workload role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "governedServiceList": {
          "type": "array",
          "description": "Enclave specific policies",
          "items": {
            "type": "object",
            "description": "GovernedServiceItem Properties",
            "properties": {
              "serviceId": {
                "description": "Service ID",
                "type": "string",
                "enum": [
                  "AKS",
                  "AppService",
                  "AzureFirewalls",
                  "ContainerRegistry",
                  "CosmosDB",
                  "DataConnectors",
                  "Insights",
                  "KeyVault",
                  "Logic",
                  "MicrosoftSQL",
                  "Monitoring",
                  "PostgreSQL",
                  "PrivateDNSZones",
                  "ServiceBus",
                  "Storage"
                ],
                "x-ms-enum": {
                  "name": "ServiceIdentifier",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AKS",
                      "value": "AKS",
                      "description": "Service identifier for AKS"
                    },
                    {
                      "name": "AppService",
                      "value": "AppService",
                      "description": "Service identifier for App Service"
                    },
                    {
                      "name": "AzureFirewalls",
                      "value": "AzureFirewalls",
                      "description": "Service identifier for Azure Firewalls"
                    },
                    {
                      "name": "ContainerRegistry",
                      "value": "ContainerRegistry",
                      "description": "Service identifier for Container Registry"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "CosmosDB",
                      "description": "Service identifier for CosmosDB"
                    },
                    {
                      "name": "DataConnectors",
                      "value": "DataConnectors",
                      "description": "Service identifier for Data Connectors"
                    },
                    {
                      "name": "Insights",
                      "value": "Insights",
                      "description": "Service identifier for Insights"
                    },
                    {
                      "name": "KeyVault",
                      "value": "KeyVault",
                      "description": "Service identifier for Key Vault"
                    },
                    {
                      "name": "Logic",
                      "value": "Logic",
                      "description": "Service identifier for Logic"
                    },
                    {
                      "name": "MicrosoftSql",
                      "value": "MicrosoftSQL",
                      "description": "Service identifier for Microsoft SQL"
                    },
                    {
                      "name": "Monitoring",
                      "value": "Monitoring",
                      "description": "Service identifier for Monitoring"
                    },
                    {
                      "name": "PostgreSql",
                      "value": "PostgreSQL",
                      "description": "Service identifier for PostgreSQL"
                    },
                    {
                      "name": "PrivateDNSZones",
                      "value": "PrivateDNSZones",
                      "description": "Service identifier for Private DNS Zones"
                    },
                    {
                      "name": "ServiceBus",
                      "value": "ServiceBus",
                      "description": "Service identifier for Service Bus"
                    },
                    {
                      "name": "Storage",
                      "value": "Storage",
                      "description": "Service identifier for Storage"
                    }
                  ]
                }
              },
              "serviceName": {
                "type": "string",
                "description": "Service name.",
                "readOnly": true
              },
              "option": {
                "type": "string",
                "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                "enum": [
                  "Allow",
                  "Deny",
                  "ExceptionOnly",
                  "NotApplicable"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "enforcement": {
                "type": "string",
                "description": "Initiative enforcement (Enabled or Disabled).",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "policyAction": {
                "type": "string",
                "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                "enum": [
                  "AuditOnly",
                  "Enforce",
                  "None"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "initiatives": {
                "type": "array",
                "description": "Initiatives associated with this service.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "required": [
              "serviceId"
            ]
          },
          "x-ms-identifiers": []
        },
        "enclaveDefaultSettings": {
          "description": "Enclave default settings.",
          "type": "object",
          "properties": {
            "diagnosticDestination": {
              "description": "Diagnostic Destination.",
              "type": "string",
              "enum": [
                "CommunityOnly",
                "EnclaveOnly",
                "Both"
              ],
              "x-ms-enum": {
                "name": "DiagnosticDestination",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CommunityOnly",
                    "value": "CommunityOnly",
                    "description": "DiagnosticDestination Type CommunityOnly"
                  },
                  {
                    "name": "EnclaveOnly",
                    "value": "EnclaveOnly",
                    "description": "DiagnosticDestination Type EnclaveOnly"
                  },
                  {
                    "name": "Both",
                    "value": "Both",
                    "description": "DiagnosticDestination Type Both"
                  }
                ]
              }
            }
          }
        },
        "maintenanceModeConfiguration": {
          "description": "Maintenance Mode configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Current mode of Maintenance Mode Configuration",
              "enum": [
                "On",
                "CanNotDelete",
                "Off",
                "General",
                "Advanced"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "principals": {
              "type": "array",
              "description": "The user, group or service principal object affected by Maintenance Mode",
              "items": {
                "type": "object",
                "description": "Principal for maintenance mode or role assignments",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The object id associated with the principal"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the object id. We currently allow users, groups, and service principals",
                    "enum": [
                      "User",
                      "Group",
                      "ServicePrincipal"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "justification": {
              "type": "string",
              "description": "Justification for entering or exiting Maintenance Mode",
              "enum": [
                "Networking",
                "Governance",
                "Off"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "VirtualEnclaveProperties": {
      "type": "object",
      "description": "Virtual Enclave Resource properties",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "enclaveVirtualNetwork": {
          "description": "Virtual Network.",
          "type": "object",
          "properties": {
            "networkName": {
              "type": "string",
              "description": "Network Name."
            },
            "networkSize": {
              "type": "string",
              "description": "Network Size.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "customCidrRange": {
              "type": "string",
              "description": "Custom CIDR Range.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "subnetConfigurations": {
              "type": "array",
              "description": "Subnet Configurations.",
              "items": {
                "type": "object",
                "description": "Subnet Configuration",
                "properties": {
                  "subnetName": {
                    "type": "string",
                    "description": "Subnet name."
                  },
                  "subnetResourceId": {
                    "description": "Subnet Resource ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    }
                  },
                  "networkPrefixSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Network prefix size."
                  },
                  "subnetDelegation": {
                    "type": "string",
                    "description": "Subnet delegation."
                  },
                  "addressPrefix": {
                    "type": "string",
                    "description": "Address prefix.",
                    "readOnly": true
                  },
                  "networkSecurityGroupResourceId": {
                    "description": "Network security group ID.",
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/networkSecurityGroups"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "subnetName",
                  "networkPrefixSize"
                ]
              },
              "x-ms-identifiers": []
            },
            "allowSubnetCommunication": {
              "type": "boolean",
              "description": "Allow Subnet Communication.",
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "enclaveAddressSpaces": {
          "description": "Enclave Address Spaces",
          "readOnly": true,
          "type": "object",
          "properties": {
            "enclaveAddressSpace": {
              "type": "string",
              "description": "Enclave Address Space"
            },
            "managedAddressSpace": {
              "type": "string",
              "description": "Managed Address Space"
            }
          }
        },
        "communityResourceId": {
          "description": "Community Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Mission/communities"
              }
            ]
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by Virtual Enclave.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        },
        "managedResourceGroupName": {
          "type": "string",
          "description": "Managed resource group name.",
          "readOnly": true
        },
        "managedOnBehalfOfConfiguration": {
          "description": "Managed On Behalf Of Configuration.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "moboBrokerResources": {
              "type": "array",
              "description": "Managed-On-Behalf-Of broker resources",
              "items": {
                "type": "object",
                "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                  }
                }
              },
              "x-ms-identifiers": [
                "id"
              ]
            }
          }
        },
        "bastionEnabled": {
          "type": "boolean",
          "description": "Deploy Bastion service (True or False).",
          "default": false
        },
        "enclaveRoleAssignments": {
          "type": "array",
          "description": "Enclave role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "workloadRoleAssignments": {
          "type": "array",
          "description": "Workload role assignments",
          "items": {
            "type": "object",
            "description": "Role assignment item that indicates which principals should be assigned this role definition",
            "properties": {
              "roleDefinitionId": {
                "type": "string",
                "description": "Role definition identifier"
              },
              "principals": {
                "type": "array",
                "description": "List of principal IDs to which to assign this role definition",
                "items": {
                  "type": "object",
                  "description": "Principal for maintenance mode or role assignments",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The object id associated with the principal"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the object id. We currently allow users, groups, and service principals",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "roleDefinitionId"
            ]
          },
          "x-ms-identifiers": []
        },
        "governedServiceList": {
          "type": "array",
          "description": "Enclave specific policies",
          "items": {
            "type": "object",
            "description": "GovernedServiceItem Properties",
            "properties": {
              "serviceId": {
                "description": "Service ID",
                "type": "string",
                "enum": [
                  "AKS",
                  "AppService",
                  "AzureFirewalls",
                  "ContainerRegistry",
                  "CosmosDB",
                  "DataConnectors",
                  "Insights",
                  "KeyVault",
                  "Logic",
                  "MicrosoftSQL",
                  "Monitoring",
                  "PostgreSQL",
                  "PrivateDNSZones",
                  "ServiceBus",
                  "Storage"
                ],
                "x-ms-enum": {
                  "name": "ServiceIdentifier",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AKS",
                      "value": "AKS",
                      "description": "Service identifier for AKS"
                    },
                    {
                      "name": "AppService",
                      "value": "AppService",
                      "description": "Service identifier for App Service"
                    },
                    {
                      "name": "AzureFirewalls",
                      "value": "AzureFirewalls",
                      "description": "Service identifier for Azure Firewalls"
                    },
                    {
                      "name": "ContainerRegistry",
                      "value": "ContainerRegistry",
                      "description": "Service identifier for Container Registry"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "CosmosDB",
                      "description": "Service identifier for CosmosDB"
                    },
                    {
                      "name": "DataConnectors",
                      "value": "DataConnectors",
                      "description": "Service identifier for Data Connectors"
                    },
                    {
                      "name": "Insights",
                      "value": "Insights",
                      "description": "Service identifier for Insights"
                    },
                    {
                      "name": "KeyVault",
                      "value": "KeyVault",
                      "description": "Service identifier for Key Vault"
                    },
                    {
                      "name": "Logic",
                      "value": "Logic",
                      "description": "Service identifier for Logic"
                    },
                    {
                      "name": "MicrosoftSql",
                      "value": "MicrosoftSQL",
                      "description": "Service identifier for Microsoft SQL"
                    },
                    {
                      "name": "Monitoring",
                      "value": "Monitoring",
                      "description": "Service identifier for Monitoring"
                    },
                    {
                      "name": "PostgreSql",
                      "value": "PostgreSQL",
                      "description": "Service identifier for PostgreSQL"
                    },
                    {
                      "name": "PrivateDNSZones",
                      "value": "PrivateDNSZones",
                      "description": "Service identifier for Private DNS Zones"
                    },
                    {
                      "name": "ServiceBus",
                      "value": "ServiceBus",
                      "description": "Service identifier for Service Bus"
                    },
                    {
                      "name": "Storage",
                      "value": "Storage",
                      "description": "Service identifier for Storage"
                    }
                  ]
                }
              },
              "serviceName": {
                "type": "string",
                "description": "Service name.",
                "readOnly": true
              },
              "option": {
                "type": "string",
                "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
                "enum": [
                  "Allow",
                  "Deny",
                  "ExceptionOnly",
                  "NotApplicable"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "enforcement": {
                "type": "string",
                "description": "Initiative enforcement (Enabled or Disabled).",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "policyAction": {
                "type": "string",
                "description": "Enforcement mode for policy. AuditOnly, Enforce, or None.",
                "enum": [
                  "AuditOnly",
                  "Enforce",
                  "None"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "initiatives": {
                "type": "array",
                "description": "Initiatives associated with this service.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            },
            "required": [
              "serviceId"
            ]
          },
          "x-ms-identifiers": []
        },
        "enclaveDefaultSettings": {
          "description": "Enclave default settings.",
          "type": "object",
          "properties": {
            "keyVaultResourceId": {
              "description": "Key Vault Resource Id.",
              "readOnly": true,
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.KeyVault/vaults"
                  }
                ]
              }
            },
            "storageAccountResourceId": {
              "description": "Storage Account Resource Id.",
              "readOnly": true,
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Storage/storageAccounts"
                  }
                ]
              }
            },
            "logAnalyticsResourceIdCollection": {
              "type": "array",
              "description": "Log Analytics Resource Ids.",
              "items": {
                "type": "string",
                "format": "arm-id",
                "description": "A type definition that refers the id to an Azure Resource Manager resource.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces"
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "diagnosticDestination": {
              "type": "string",
              "description": "Diagnostic Destination.",
              "default": "EnclaveOnly",
              "enum": [
                "CommunityOnly",
                "EnclaveOnly",
                "Both"
              ],
              "x-ms-enum": {
                "name": "DiagnosticDestination",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CommunityOnly",
                    "value": "CommunityOnly",
                    "description": "DiagnosticDestination Type CommunityOnly"
                  },
                  {
                    "name": "EnclaveOnly",
                    "value": "EnclaveOnly",
                    "description": "DiagnosticDestination Type EnclaveOnly"
                  },
                  {
                    "name": "Both",
                    "value": "Both",
                    "description": "DiagnosticDestination Type Both"
                  }
                ]
              }
            }
          }
        },
        "maintenanceModeConfiguration": {
          "description": "Maintenance Mode configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Current mode of Maintenance Mode Configuration",
              "default": "Off",
              "enum": [
                "On",
                "CanNotDelete",
                "Off",
                "General",
                "Advanced"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            },
            "principals": {
              "type": "array",
              "description": "The user, group or service principal object affected by Maintenance Mode",
              "default": [],
              "items": {
                "type": "object",
                "description": "Principal for maintenance mode or role assignments",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The object id associated with the principal"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the object id. We currently allow users, groups, and service principals",
                    "enum": [
                      "User",
                      "Group",
                      "ServicePrincipal"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "justification": {
              "type": "string",
              "description": "Justification for entering or exiting Maintenance Mode",
              "default": "Off",
              "enum": [
                "Networking",
                "Governance",
                "Off"
              ],
              "x-ms-enum": {
                "modelAsString": true
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      },
      "required": [
        "enclaveVirtualNetwork",
        "communityResourceId"
      ]
    },
    "VirtualNetworkResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks"
          }
        ]
      }
    },
    "WorkloadPatchModel": {
      "type": "object",
      "description": "Workload Patch Resource",
      "properties": {
        "properties": {
          "description": "Workload Patch properties",
          "type": "object",
          "properties": {
            "resourceGroupCollection": {
              "type": "array",
              "description": "List of resource group ids.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadPatchProperties": {
      "type": "object",
      "description": "Workload patchable Properties",
      "properties": {
        "resourceGroupCollection": {
          "type": "array",
          "description": "List of resource group ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadProperties": {
      "type": "object",
      "description": "Workload Resource properties",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Creating",
            "Deleting",
            "NotSpecified",
            "Running",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning State Type Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "Provisioning State Type Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Provisioning State Type Deleting"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "Provisioning State Type NotSpecified"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Provisioning State Type Running"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Provisioning State Type Updating"
              }
            ]
          }
        },
        "resourceGroupCollection": {
          "type": "array",
          "description": "List of resource group ids.",
          "items": {
            "type": "string"
          }
        },
        "managedOnBehalfOfConfiguration": {
          "description": "Managed On Behalf Of Configuration.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "moboBrokerResources": {
              "type": "array",
              "description": "Managed-On-Behalf-Of broker resources",
              "items": {
                "type": "object",
                "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                  }
                }
              },
              "x-ms-identifiers": [
                "id"
              ]
            }
          }
        }
      }
    },
    "WorkloadResource": {
      "type": "object",
      "description": "Workload Model Resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Creating",
                "Deleting",
                "NotSpecified",
                "Running",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning State Type Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "Provisioning State Type Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Provisioning State Type Deleting"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "Provisioning State Type NotSpecified"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "Provisioning State Type Running"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Provisioning State Type Updating"
                  }
                ]
              }
            },
            "resourceGroupCollection": {
              "type": "array",
              "description": "List of resource group ids.",
              "items": {
                "type": "string"
              }
            },
            "managedOnBehalfOfConfiguration": {
              "description": "Managed On Behalf Of Configuration.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "moboBrokerResources": {
                  "type": "array",
                  "description": "Managed-On-Behalf-Of broker resources",
                  "items": {
                    "type": "object",
                    "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "WorkloadResourceListResult": {
      "type": "object",
      "description": "The response of a WorkloadResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadResource items on this page",
          "items": {
            "type": "object",
            "description": "Workload Model Resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Deleting",
                      "NotSpecified",
                      "Running",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning State Type Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Provisioning State Type Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Provisioning State Type Deleting"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Provisioning State Type NotSpecified"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "Provisioning State Type Running"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Provisioning State Type Updating"
                        }
                      ]
                    }
                  },
                  "resourceGroupCollection": {
                    "type": "array",
                    "description": "List of resource group ids.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "managedOnBehalfOfConfiguration": {
                    "description": "Managed On Behalf Of Configuration.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "moboBrokerResources": {
                        "type": "array",
                        "description": "Managed-On-Behalf-Of broker resources",
                        "items": {
                          "type": "object",
                          "description": "Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Resource identifier of a Managed-On-Behalf-Of broker resource"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}