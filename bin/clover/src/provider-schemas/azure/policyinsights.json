{
  "swagger": "2.0",
  "info": {
    "title": "Azure policyinsights",
    "version": "2024-10-01",
    "description": "Azure policyinsights service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations": {
      "get": {
        "operationId": "Attestations_ListForSubscription",
        "description": "Gets all attestations for the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestations.",
            "schema": {
              "description": "List of attestations.",
              "properties": {
                "value": {
                  "description": "Array of attestation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the attestation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                          },
                          "complianceState": {
                            "type": "string",
                            "enum": [
                              "Compliant",
                              "NonCompliant",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Compliant",
                                  "description": "The resource is in compliance with the policy."
                                },
                                {
                                  "value": "NonCompliant",
                                  "description": "The resource is not in compliance with the policy."
                                },
                                {
                                  "value": "Unknown",
                                  "description": "The compliance state of the resource is not known."
                                }
                              ]
                            },
                            "description": "The compliance state that should be set on the resource."
                          },
                          "expiresOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state should expire."
                          },
                          "owner": {
                            "type": "string",
                            "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                          },
                          "comments": {
                            "type": "string",
                            "description": "Comments describing why this attestation was created."
                          },
                          "evidence": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "The description for this piece of evidence."
                                },
                                "sourceUri": {
                                  "type": "string",
                                  "description": "The URI location of the evidence."
                                }
                              },
                              "description": "A piece of evidence supporting the compliance state set in the attestation."
                            },
                            "x-ms-identifiers": [],
                            "description": "The evidence supporting the compliance state set in this attestation."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the attestation.",
                            "readOnly": true
                          },
                          "lastComplianceStateChangeAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state was last changed in this attestation.",
                            "readOnly": true
                          },
                          "assessmentDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the evidence was assessed"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata for this attestation"
                          }
                        },
                        "required": [
                          "policyAssignmentId"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "An attestation resource."
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}": {
      "put": {
        "operationId": "Attestations_CreateOrUpdateAtSubscription",
        "description": "Creates or updates an attestation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            },
            "description": "The attestation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          },
          "201": {
            "description": "The created attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "get": {
        "operationId": "Attestations_GetAtSubscription",
        "description": "Gets an existing attestation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "delete": {
        "operationId": "Attestations_DeleteAtSubscription",
        "description": "Deletes an existing attestation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The attestation was successfully deleted."
          },
          "204": {
            "description": "The attestation did not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations": {
      "get": {
        "operationId": "Attestations_ListForResourceGroup",
        "description": "Gets all attestations for the resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestations.",
            "schema": {
              "description": "List of attestations.",
              "properties": {
                "value": {
                  "description": "Array of attestation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the attestation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                          },
                          "complianceState": {
                            "type": "string",
                            "enum": [
                              "Compliant",
                              "NonCompliant",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Compliant",
                                  "description": "The resource is in compliance with the policy."
                                },
                                {
                                  "value": "NonCompliant",
                                  "description": "The resource is not in compliance with the policy."
                                },
                                {
                                  "value": "Unknown",
                                  "description": "The compliance state of the resource is not known."
                                }
                              ]
                            },
                            "description": "The compliance state that should be set on the resource."
                          },
                          "expiresOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state should expire."
                          },
                          "owner": {
                            "type": "string",
                            "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                          },
                          "comments": {
                            "type": "string",
                            "description": "Comments describing why this attestation was created."
                          },
                          "evidence": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "The description for this piece of evidence."
                                },
                                "sourceUri": {
                                  "type": "string",
                                  "description": "The URI location of the evidence."
                                }
                              },
                              "description": "A piece of evidence supporting the compliance state set in the attestation."
                            },
                            "x-ms-identifiers": [],
                            "description": "The evidence supporting the compliance state set in this attestation."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the attestation.",
                            "readOnly": true
                          },
                          "lastComplianceStateChangeAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state was last changed in this attestation.",
                            "readOnly": true
                          },
                          "assessmentDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the evidence was assessed"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata for this attestation"
                          }
                        },
                        "required": [
                          "policyAssignmentId"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "An attestation resource."
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations/{attestationName}": {
      "put": {
        "operationId": "Attestations_CreateOrUpdateAtResourceGroup",
        "description": "Creates or updates an attestation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            },
            "description": "The attestation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          },
          "201": {
            "description": "The created attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "get": {
        "operationId": "Attestations_GetAtResourceGroup",
        "description": "Gets an existing attestation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "delete": {
        "operationId": "Attestations_DeleteAtResourceGroup",
        "description": "Deletes an existing attestation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The attestation was successfully deleted."
          },
          "204": {
            "description": "The attestation did not exist."
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/attestations": {
      "get": {
        "operationId": "Attestations_ListForResource",
        "description": "Gets all attestations for a resource.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestations.",
            "schema": {
              "description": "List of attestations.",
              "properties": {
                "value": {
                  "description": "Array of attestation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the attestation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                          },
                          "complianceState": {
                            "type": "string",
                            "enum": [
                              "Compliant",
                              "NonCompliant",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Compliant",
                                  "description": "The resource is in compliance with the policy."
                                },
                                {
                                  "value": "NonCompliant",
                                  "description": "The resource is not in compliance with the policy."
                                },
                                {
                                  "value": "Unknown",
                                  "description": "The compliance state of the resource is not known."
                                }
                              ]
                            },
                            "description": "The compliance state that should be set on the resource."
                          },
                          "expiresOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state should expire."
                          },
                          "owner": {
                            "type": "string",
                            "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                          },
                          "comments": {
                            "type": "string",
                            "description": "Comments describing why this attestation was created."
                          },
                          "evidence": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "The description for this piece of evidence."
                                },
                                "sourceUri": {
                                  "type": "string",
                                  "description": "The URI location of the evidence."
                                }
                              },
                              "description": "A piece of evidence supporting the compliance state set in the attestation."
                            },
                            "x-ms-identifiers": [],
                            "description": "The evidence supporting the compliance state set in this attestation."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the attestation.",
                            "readOnly": true
                          },
                          "lastComplianceStateChangeAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the compliance state was last changed in this attestation.",
                            "readOnly": true
                          },
                          "assessmentDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the evidence was assessed"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata for this attestation"
                          }
                        },
                        "required": [
                          "policyAssignmentId"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "An attestation resource."
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}": {
      "put": {
        "operationId": "Attestations_CreateOrUpdateAtResource",
        "description": "Creates or updates an attestation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            },
            "description": "The attestation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          },
          "201": {
            "description": "The created attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "get": {
        "operationId": "Attestations_GetAtResource",
        "description": "Gets an existing attestation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved attestation.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the attestation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                    },
                    "complianceState": {
                      "type": "string",
                      "enum": [
                        "Compliant",
                        "NonCompliant",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Compliant",
                            "description": "The resource is in compliance with the policy."
                          },
                          {
                            "value": "NonCompliant",
                            "description": "The resource is not in compliance with the policy."
                          },
                          {
                            "value": "Unknown",
                            "description": "The compliance state of the resource is not known."
                          }
                        ]
                      },
                      "description": "The compliance state that should be set on the resource."
                    },
                    "expiresOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state should expire."
                    },
                    "owner": {
                      "type": "string",
                      "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments describing why this attestation was created."
                    },
                    "evidence": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description for this piece of evidence."
                          },
                          "sourceUri": {
                            "type": "string",
                            "description": "The URI location of the evidence."
                          }
                        },
                        "description": "A piece of evidence supporting the compliance state set in the attestation."
                      },
                      "x-ms-identifiers": [],
                      "description": "The evidence supporting the compliance state set in this attestation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the attestation.",
                      "readOnly": true
                    },
                    "lastComplianceStateChangeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the compliance state was last changed in this attestation.",
                      "readOnly": true
                    },
                    "assessmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the evidence was assessed"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata for this attestation"
                    }
                  },
                  "required": [
                    "policyAssignmentId"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "An attestation resource."
            }
          }
        }
      },
      "delete": {
        "operationId": "Attestations_DeleteAtResource",
        "description": "Deletes an existing attestation at individual resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "attestationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the attestation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The attestation was successfully deleted."
          },
          "204": {
            "description": "The attestation did not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/checkPolicyRestrictions": {
      "post": {
        "operationId": "PolicyRestrictions_CheckAtSubscriptionScope",
        "description": "Checks what restrictions Azure Policy will place on a resource within a subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The check policy restrictions parameters describing the resource that is being evaluated.",
              "properties": {
                "resourceDetails": {
                  "description": "The information about the resource that will be evaluated.",
                  "properties": {
                    "resourceContent": {
                      "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
                      "type": "object"
                    },
                    "apiVersion": {
                      "description": "The api-version of the resource content.",
                      "type": "string"
                    },
                    "scope": {
                      "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceContent"
                  ]
                },
                "pendingFields": {
                  "description": "The list of fields and values that should be evaluated for potential restrictions.",
                  "type": "array",
                  "items": {
                    "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "field"
                    ]
                  }
                },
                "includeAuditEffect": {
                  "description": "Whether to include policies with the 'audit' effect in the results. Defaults to false.",
                  "type": "boolean",
                  "default": false
                }
              },
              "required": [
                "resourceDetails"
              ]
            },
            "description": "The check policy restrictions parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The restrictions that will be placed on the resource by Azure Policy.",
            "schema": {
              "description": "The result of a check policy restrictions evaluation on a resource.",
              "properties": {
                "fieldRestrictions": {
                  "description": "The restrictions that will be placed on various fields in the resource by policy.",
                  "type": "array",
                  "items": {
                    "description": "The restrictions that will be placed on a field in the resource by policy.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string",
                        "readOnly": true
                      },
                      "restrictions": {
                        "description": "The restrictions placed on that field by policy.",
                        "type": "array",
                        "items": {
                          "description": "The restrictions on a field imposed by a specific policy.",
                          "properties": {
                            "result": {
                              "description": "The type of restriction that is imposed on the field.",
                              "type": "string",
                              "enum": [
                                "Required",
                                "Removed",
                                "Deny",
                                "Audit"
                              ],
                              "x-ms-enum": {
                                "name": "FieldRestrictionResult",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Required",
                                    "description": "The field and/or values are required by policy."
                                  },
                                  {
                                    "value": "Removed",
                                    "description": "The field will be removed by policy."
                                  },
                                  {
                                    "value": "Deny",
                                    "description": "The field and/or values will be denied by policy."
                                  },
                                  {
                                    "value": "Audit",
                                    "description": "The field and/or values will be audited by policy."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "defaultValue": {
                              "description": "The value that policy will set for the field if the user does not provide a value.",
                              "type": "string",
                              "readOnly": true
                            },
                            "values": {
                              "description": "The values that policy either requires or denies for the field.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "policy": {
                              "description": "The details of the policy that is causing the field restriction.",
                              "readOnly": true,
                              "properties": {
                                "policyDefinitionId": {
                                  "description": "The resource identifier of the policy definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policySetDefinitionId": {
                                  "description": "The resource identifier of the policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyDefinitionReferenceId": {
                                  "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyAssignmentId": {
                                  "description": "The resource identifier of the policy assignment.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "policyEffect": {
                              "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
                              "type": "string",
                              "readOnly": true
                            },
                            "reason": {
                              "description": "The reason for the restriction.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "contentEvaluationResult": {
                  "description": "Evaluation results for the provided partial resource content.",
                  "properties": {
                    "policyEvaluations": {
                      "description": "Policy evaluation results against the given resource content. This will indicate if the partial content that was provided will be denied as-is.",
                      "type": "array",
                      "items": {
                        "description": "The result of a non-compliant policy evaluation against the given resource content.",
                        "properties": {
                          "policyInfo": {
                            "description": "The details of the policy that was evaluated.",
                            "readOnly": true,
                            "properties": {
                              "policyDefinitionId": {
                                "description": "The resource identifier of the policy definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policySetDefinitionId": {
                                "description": "The resource identifier of the policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyDefinitionReferenceId": {
                                "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyAssignmentId": {
                                "description": "The resource identifier of the policy assignment.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "evaluationResult": {
                            "description": "The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
                            "type": "string",
                            "readOnly": true
                          },
                          "evaluationDetails": {
                            "description": "The detailed results of the policy expressions and values that were evaluated.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "evaluatedExpressions": {
                                "description": "Details of the evaluated expressions.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Evaluation details of policy language expressions.",
                                  "properties": {
                                    "result": {
                                      "description": "Evaluation result.",
                                      "type": "string"
                                    },
                                    "expression": {
                                      "description": "Expression evaluated.",
                                      "type": "string"
                                    },
                                    "expressionKind": {
                                      "description": "The kind of expression that was evaluated.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "path": {
                                      "description": "Property path if the expression is a field or an alias.",
                                      "type": "string"
                                    },
                                    "expressionValue": {
                                      "description": "Value of the expression.",
                                      "type": "object"
                                    },
                                    "targetValue": {
                                      "description": "Target value to be compared with the expression value.",
                                      "type": "object"
                                    },
                                    "operator": {
                                      "description": "Operator to compare the expression value and the target value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "ifNotExistsDetails": {
                                "description": "Evaluation details of IfNotExists effect.",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "description": "ID of the last evaluated resource for IfNotExists effect.",
                                    "type": "string"
                                  },
                                  "totalResources": {
                                    "description": "Total number of resources to which the existence condition is applicable.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "reason": {
                                "description": "The reason for the evaluation result.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "effectDetails": {
                            "description": "The details of the effect that was applied to the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "policyEffect": {
                                "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/checkPolicyRestrictions": {
      "post": {
        "operationId": "PolicyRestrictions_CheckAtResourceGroupScope",
        "description": "Checks what restrictions Azure Policy will place on a resource within a resource group. Use this when the resource group the resource will be created in is already known.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The check policy restrictions parameters describing the resource that is being evaluated.",
              "properties": {
                "resourceDetails": {
                  "description": "The information about the resource that will be evaluated.",
                  "properties": {
                    "resourceContent": {
                      "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
                      "type": "object"
                    },
                    "apiVersion": {
                      "description": "The api-version of the resource content.",
                      "type": "string"
                    },
                    "scope": {
                      "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceContent"
                  ]
                },
                "pendingFields": {
                  "description": "The list of fields and values that should be evaluated for potential restrictions.",
                  "type": "array",
                  "items": {
                    "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "field"
                    ]
                  }
                },
                "includeAuditEffect": {
                  "description": "Whether to include policies with the 'audit' effect in the results. Defaults to false.",
                  "type": "boolean",
                  "default": false
                }
              },
              "required": [
                "resourceDetails"
              ]
            },
            "description": "The check policy restrictions parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The restrictions that will be placed on the resource by Azure Policy.",
            "schema": {
              "description": "The result of a check policy restrictions evaluation on a resource.",
              "properties": {
                "fieldRestrictions": {
                  "description": "The restrictions that will be placed on various fields in the resource by policy.",
                  "type": "array",
                  "items": {
                    "description": "The restrictions that will be placed on a field in the resource by policy.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string",
                        "readOnly": true
                      },
                      "restrictions": {
                        "description": "The restrictions placed on that field by policy.",
                        "type": "array",
                        "items": {
                          "description": "The restrictions on a field imposed by a specific policy.",
                          "properties": {
                            "result": {
                              "description": "The type of restriction that is imposed on the field.",
                              "type": "string",
                              "enum": [
                                "Required",
                                "Removed",
                                "Deny",
                                "Audit"
                              ],
                              "x-ms-enum": {
                                "name": "FieldRestrictionResult",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Required",
                                    "description": "The field and/or values are required by policy."
                                  },
                                  {
                                    "value": "Removed",
                                    "description": "The field will be removed by policy."
                                  },
                                  {
                                    "value": "Deny",
                                    "description": "The field and/or values will be denied by policy."
                                  },
                                  {
                                    "value": "Audit",
                                    "description": "The field and/or values will be audited by policy."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "defaultValue": {
                              "description": "The value that policy will set for the field if the user does not provide a value.",
                              "type": "string",
                              "readOnly": true
                            },
                            "values": {
                              "description": "The values that policy either requires or denies for the field.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "policy": {
                              "description": "The details of the policy that is causing the field restriction.",
                              "readOnly": true,
                              "properties": {
                                "policyDefinitionId": {
                                  "description": "The resource identifier of the policy definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policySetDefinitionId": {
                                  "description": "The resource identifier of the policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyDefinitionReferenceId": {
                                  "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyAssignmentId": {
                                  "description": "The resource identifier of the policy assignment.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "policyEffect": {
                              "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
                              "type": "string",
                              "readOnly": true
                            },
                            "reason": {
                              "description": "The reason for the restriction.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "contentEvaluationResult": {
                  "description": "Evaluation results for the provided partial resource content.",
                  "properties": {
                    "policyEvaluations": {
                      "description": "Policy evaluation results against the given resource content. This will indicate if the partial content that was provided will be denied as-is.",
                      "type": "array",
                      "items": {
                        "description": "The result of a non-compliant policy evaluation against the given resource content.",
                        "properties": {
                          "policyInfo": {
                            "description": "The details of the policy that was evaluated.",
                            "readOnly": true,
                            "properties": {
                              "policyDefinitionId": {
                                "description": "The resource identifier of the policy definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policySetDefinitionId": {
                                "description": "The resource identifier of the policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyDefinitionReferenceId": {
                                "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyAssignmentId": {
                                "description": "The resource identifier of the policy assignment.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "evaluationResult": {
                            "description": "The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
                            "type": "string",
                            "readOnly": true
                          },
                          "evaluationDetails": {
                            "description": "The detailed results of the policy expressions and values that were evaluated.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "evaluatedExpressions": {
                                "description": "Details of the evaluated expressions.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Evaluation details of policy language expressions.",
                                  "properties": {
                                    "result": {
                                      "description": "Evaluation result.",
                                      "type": "string"
                                    },
                                    "expression": {
                                      "description": "Expression evaluated.",
                                      "type": "string"
                                    },
                                    "expressionKind": {
                                      "description": "The kind of expression that was evaluated.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "path": {
                                      "description": "Property path if the expression is a field or an alias.",
                                      "type": "string"
                                    },
                                    "expressionValue": {
                                      "description": "Value of the expression.",
                                      "type": "object"
                                    },
                                    "targetValue": {
                                      "description": "Target value to be compared with the expression value.",
                                      "type": "object"
                                    },
                                    "operator": {
                                      "description": "Operator to compare the expression value and the target value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "ifNotExistsDetails": {
                                "description": "Evaluation details of IfNotExists effect.",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "description": "ID of the last evaluated resource for IfNotExists effect.",
                                    "type": "string"
                                  },
                                  "totalResources": {
                                    "description": "Total number of resources to which the existence condition is applicable.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "reason": {
                                "description": "The reason for the evaluation result.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "effectDetails": {
                            "description": "The details of the effect that was applied to the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "policyEffect": {
                                "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/checkPolicyRestrictions": {
      "post": {
        "operationId": "PolicyRestrictions_CheckAtManagementGroupScope",
        "description": "Checks what restrictions Azure Policy will place on resources within a management group.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check policy restrictions parameters describing the resource that is being evaluated.",
              "properties": {
                "resourceDetails": {
                  "description": "The information about the resource that will be evaluated.",
                  "properties": {
                    "resourceContent": {
                      "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
                      "type": "object"
                    },
                    "apiVersion": {
                      "description": "The api-version of the resource content.",
                      "type": "string"
                    },
                    "scope": {
                      "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceContent"
                  ]
                },
                "pendingFields": {
                  "description": "The list of fields and values that should be evaluated for potential restrictions.",
                  "type": "array",
                  "items": {
                    "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "field"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "description": "The check policy restrictions parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The restrictions that will be placed on the resource by Azure Policy.",
            "schema": {
              "description": "The result of a check policy restrictions evaluation on a resource.",
              "properties": {
                "fieldRestrictions": {
                  "description": "The restrictions that will be placed on various fields in the resource by policy.",
                  "type": "array",
                  "items": {
                    "description": "The restrictions that will be placed on a field in the resource by policy.",
                    "properties": {
                      "field": {
                        "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                        "type": "string",
                        "readOnly": true
                      },
                      "restrictions": {
                        "description": "The restrictions placed on that field by policy.",
                        "type": "array",
                        "items": {
                          "description": "The restrictions on a field imposed by a specific policy.",
                          "properties": {
                            "result": {
                              "description": "The type of restriction that is imposed on the field.",
                              "type": "string",
                              "enum": [
                                "Required",
                                "Removed",
                                "Deny",
                                "Audit"
                              ],
                              "x-ms-enum": {
                                "name": "FieldRestrictionResult",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Required",
                                    "description": "The field and/or values are required by policy."
                                  },
                                  {
                                    "value": "Removed",
                                    "description": "The field will be removed by policy."
                                  },
                                  {
                                    "value": "Deny",
                                    "description": "The field and/or values will be denied by policy."
                                  },
                                  {
                                    "value": "Audit",
                                    "description": "The field and/or values will be audited by policy."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "defaultValue": {
                              "description": "The value that policy will set for the field if the user does not provide a value.",
                              "type": "string",
                              "readOnly": true
                            },
                            "values": {
                              "description": "The values that policy either requires or denies for the field.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "policy": {
                              "description": "The details of the policy that is causing the field restriction.",
                              "readOnly": true,
                              "properties": {
                                "policyDefinitionId": {
                                  "description": "The resource identifier of the policy definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policySetDefinitionId": {
                                  "description": "The resource identifier of the policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyDefinitionReferenceId": {
                                  "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "policyAssignmentId": {
                                  "description": "The resource identifier of the policy assignment.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "policyEffect": {
                              "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
                              "type": "string",
                              "readOnly": true
                            },
                            "reason": {
                              "description": "The reason for the restriction.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "contentEvaluationResult": {
                  "description": "Evaluation results for the provided partial resource content.",
                  "properties": {
                    "policyEvaluations": {
                      "description": "Policy evaluation results against the given resource content. This will indicate if the partial content that was provided will be denied as-is.",
                      "type": "array",
                      "items": {
                        "description": "The result of a non-compliant policy evaluation against the given resource content.",
                        "properties": {
                          "policyInfo": {
                            "description": "The details of the policy that was evaluated.",
                            "readOnly": true,
                            "properties": {
                              "policyDefinitionId": {
                                "description": "The resource identifier of the policy definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policySetDefinitionId": {
                                "description": "The resource identifier of the policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyDefinitionReferenceId": {
                                "description": "The reference identifier of a specific policy definition within a policy set definition.",
                                "type": "string",
                                "readOnly": true
                              },
                              "policyAssignmentId": {
                                "description": "The resource identifier of the policy assignment.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "evaluationResult": {
                            "description": "The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
                            "type": "string",
                            "readOnly": true
                          },
                          "evaluationDetails": {
                            "description": "The detailed results of the policy expressions and values that were evaluated.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "evaluatedExpressions": {
                                "description": "Details of the evaluated expressions.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Evaluation details of policy language expressions.",
                                  "properties": {
                                    "result": {
                                      "description": "Evaluation result.",
                                      "type": "string"
                                    },
                                    "expression": {
                                      "description": "Expression evaluated.",
                                      "type": "string"
                                    },
                                    "expressionKind": {
                                      "description": "The kind of expression that was evaluated.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "path": {
                                      "description": "Property path if the expression is a field or an alias.",
                                      "type": "string"
                                    },
                                    "expressionValue": {
                                      "description": "Value of the expression.",
                                      "type": "object"
                                    },
                                    "targetValue": {
                                      "description": "Target value to be compared with the expression value.",
                                      "type": "object"
                                    },
                                    "operator": {
                                      "description": "Operator to compare the expression value and the target value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "ifNotExistsDetails": {
                                "description": "Evaluation details of IfNotExists effect.",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "description": "ID of the last evaluated resource for IfNotExists effect.",
                                    "type": "string"
                                  },
                                  "totalResources": {
                                    "description": "Total number of resources to which the existence condition is applicable.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "reason": {
                                "description": "The reason for the evaluation result.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "effectDetails": {
                            "description": "The details of the effect that was applied to the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "policyEffect": {
                                "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForSubscription",
        "description": "Queries component policy states under subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForResourceGroup",
        "description": "Queries component policy states under resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForResource",
        "description": "Queries component policy states for the resource.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $expand query parameter.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForPolicyDefinition",
        "description": "Queries component policy states for the subscription level policy definition.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy definition name.",
            "pattern": "^[^<>%&:\\\\?/#]*$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForSubscriptionLevelPolicyAssignment",
        "description": "Queries component policy states for the subscription level policy assignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "pattern": "^[^<>%&:\\\\?/#]*$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/componentPolicyStates/{componentPolicyStatesResource}/queryResults": {
      "post": {
        "operationId": "ComponentPolicyStates_ListQueryResultsForResourceGroupLevelPolicyAssignment",
        "description": "Queries component policy states for the resource group level policy assignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "pattern": "^[^<>%&:\\\\?/#]*$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "componentPolicyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "ComponentPolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "Apply"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "type": "object",
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Component Policy State record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string",
                        "readOnly": true
                      },
                      "timestamp": {
                        "description": "Timestamp for the component policy state record.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "componentId": {
                        "description": "Component Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentType": {
                        "description": "Component type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "componentName": {
                        "description": "Component name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string",
                        "readOnly": true
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object",
                                  "readOnly": true
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "reason": {
                            "description": "Additional textual reason for the evaluation outcome.",
                            "type": "string"
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.PolicyInsights/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "Lists available operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version to use with the client requests.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available operations.",
            "schema": {
              "description": "List of available operations.",
              "type": "object",
              "properties": {
                "@odata.count": {
                  "description": "OData entity count; represents the number of operations returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "value": {
                  "description": "List of available operations.",
                  "type": "array",
                  "items": {
                    "description": "Operation definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name.",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Display metadata associated with the operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Resource provider name.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource name on which the operation is performed.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Operation name.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Operation description.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForManagementGroup",
        "description": "Queries policy events for the resources under the management group.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForSubscription",
        "description": "Queries policy events for the resources under the subscription.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForResourceGroup",
        "description": "Queries policy events for the resources under the resource group.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForResource",
        "description": "Queries policy events for the resource.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $expand query parameter. For example, to expand components use $expand=components",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Expand"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForPolicySetDefinition",
        "description": "Queries policy events for the subscription level policy set definition.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policySetDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy set definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForPolicyDefinition",
        "description": "Queries policy events for the subscription level policy definition.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForSubscriptionLevelPolicyAssignment",
        "description": "Queries policy events for the subscription level policy assignment.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults": {
      "post": {
        "operationId": "PolicyEvents_ListQueryResultsForResourceGroupLevelPolicyAssignment",
        "description": "Queries policy events for the resource group level policy assignment.",
        "parameters": [
          {
            "name": "policyEventsResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "PolicyEventsResourceType",
              "modelAsString": true
            },
            "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy event records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy event record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy event record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "Tenant ID for the policy event record.",
                        "type": "string"
                      },
                      "principalOid": {
                        "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                        "type": "string"
                      },
                      "components": {
                        "description": "Components events records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component event details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Timestamp for component policy event record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "tenantId": {
                              "description": "Tenant ID for the policy event record.",
                              "type": "string"
                            },
                            "principalOid": {
                              "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                              "type": "string"
                            },
                            "policyDefinitionAction": {
                              "description": "Policy definition action, i.e. effect.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.PolicyInsights/policyMetadata/{resourceName}": {
      "get": {
        "operationId": "PolicyMetadata_GetResource",
        "description": "Get policy metadata resource.",
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy metadata resource.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy metadata resource definition.",
            "schema": {
              "description": "Policy metadata resource definition.",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the policy metadata.",
                  "properties": {
                    "metadataId": {
                      "description": "The policy metadata identifier.",
                      "type": "string",
                      "readOnly": true
                    },
                    "category": {
                      "description": "The category of the policy metadata.",
                      "type": "string",
                      "readOnly": true
                    },
                    "title": {
                      "description": "The title of the policy metadata.",
                      "type": "string",
                      "readOnly": true
                    },
                    "owner": {
                      "description": "The owner of the policy metadata.",
                      "type": "string",
                      "readOnly": true
                    },
                    "additionalContentUrl": {
                      "description": "Url for getting additional content about the resource metadata.",
                      "type": "string",
                      "readOnly": true
                    },
                    "metadata": {
                      "description": "Additional metadata.",
                      "type": "object",
                      "readOnly": true
                    },
                    "description": {
                      "description": "The description of the policy metadata.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requirements": {
                      "description": "The requirements of the policy metadata.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the policy metadata.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the policy metadata.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the policy metadata.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.PolicyInsights/policyMetadata": {
      "get": {
        "operationId": "PolicyMetadata_List",
        "description": "Get a list of the policy metadata resources.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy metadata resource collection.",
            "schema": {
              "description": "Collection of policy metadata resources.",
              "properties": {
                "value": {
                  "description": "Array of policy metadata definitions.",
                  "type": "array",
                  "items": {
                    "description": "Slim version of policy metadata resource definition, excluding properties with large strings",
                    "properties": {
                      "properties": {
                        "description": "The properties of the policy metadata, excluding properties containing large strings",
                        "properties": {
                          "metadataId": {
                            "description": "The policy metadata identifier.",
                            "type": "string",
                            "readOnly": true
                          },
                          "category": {
                            "description": "The category of the policy metadata.",
                            "type": "string",
                            "readOnly": true
                          },
                          "title": {
                            "description": "The title of the policy metadata.",
                            "type": "string",
                            "readOnly": true
                          },
                          "owner": {
                            "description": "The owner of the policy metadata.",
                            "type": "string",
                            "readOnly": true
                          },
                          "additionalContentUrl": {
                            "description": "Url for getting additional content about the resource metadata.",
                            "type": "string",
                            "readOnly": true
                          },
                          "metadata": {
                            "description": "Additional metadata.",
                            "type": "object",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the policy metadata.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the policy metadata.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy metadata.",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForManagementGroup",
        "description": "Queries policy states for the resources under the management group.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForManagementGroup",
        "description": "Summarizes policy states for the resources under the management group.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForSubscription",
        "description": "Queries policy states for the resources under the subscription.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForSubscription",
        "description": "Summarizes policy states for the resources under the subscription.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForResourceGroup",
        "description": "Queries policy states for the resources under the resource group.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForResourceGroup",
        "description": "Summarizes policy states for the resources under the resource group.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForResource",
        "description": "Queries policy states for the resource.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $expand query parameter. For example, to expand components use $expand=components",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Expand"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForResource",
        "description": "Summarizes policy states for the resource.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation": {
      "post": {
        "operationId": "PolicyStates_TriggerSubscriptionEvaluation",
        "description": "Triggers a policy evaluation scan for all the resources under the subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The scan is done."
          },
          "202": {
            "description": "The scan was successfully triggered."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation": {
      "post": {
        "operationId": "PolicyStates_TriggerResourceGroupEvaluation",
        "description": "Triggers a policy evaluation scan for all the resources under the resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The scan is done."
          },
          "202": {
            "description": "The scan was successfully triggered."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForPolicySetDefinition",
        "description": "Queries policy states for the subscription level policy set definition.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policySetDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy set definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForPolicySetDefinition",
        "description": "Summarizes policy states for the subscription level policy set definition.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policySetDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy set definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForPolicyDefinition",
        "description": "Queries policy states for the subscription level policy definition.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForPolicyDefinition",
        "description": "Summarizes policy states for the subscription level policy definition.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyDefinitionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy definition name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForSubscriptionLevelPolicyAssignment",
        "description": "Queries policy states for the subscription level policy assignment.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForSubscriptionLevelPolicyAssignment",
        "description": "Summarizes policy states for the subscription level policy assignment.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForResourceGroupLevelPolicyAssignment",
        "description": "Queries policy states for the resource group level policy assignment.",
        "parameters": [
          {
            "name": "policyStatesResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default",
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesResource",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "OrderBy"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Select"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "$apply",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData apply expression for aggregations.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "SkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "description": "Query results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of policy state records returned.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "@odata.nextLink": {
                  "description": "Odata next link; URL to get the next set of results.",
                  "type": "string"
                },
                "value": {
                  "description": "Query results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Policy state record.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp for the policy state record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "resourceId": {
                        "description": "Resource ID.",
                        "type": "string"
                      },
                      "policyAssignmentId": {
                        "description": "Policy assignment ID.",
                        "type": "string"
                      },
                      "policyDefinitionId": {
                        "description": "Policy definition ID.",
                        "type": "string"
                      },
                      "effectiveParameters": {
                        "description": "Effective parameters for the policy assignment.",
                        "type": "string"
                      },
                      "isCompliant": {
                        "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                        "type": "boolean"
                      },
                      "subscriptionId": {
                        "description": "Subscription ID.",
                        "type": "string"
                      },
                      "resourceType": {
                        "description": "Resource type.",
                        "type": "string"
                      },
                      "resourceLocation": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "Resource group name.",
                        "type": "string"
                      },
                      "resourceTags": {
                        "description": "List of resource tags.",
                        "type": "string"
                      },
                      "policyAssignmentName": {
                        "description": "Policy assignment name.",
                        "type": "string"
                      },
                      "policyAssignmentOwner": {
                        "description": "Policy assignment owner.",
                        "type": "string"
                      },
                      "policyAssignmentParameters": {
                        "description": "Policy assignment parameters.",
                        "type": "string"
                      },
                      "policyAssignmentScope": {
                        "description": "Policy assignment scope.",
                        "type": "string"
                      },
                      "policyDefinitionName": {
                        "description": "Policy definition name.",
                        "type": "string"
                      },
                      "policyDefinitionAction": {
                        "description": "Policy definition action, i.e. effect.",
                        "type": "string"
                      },
                      "policyDefinitionCategory": {
                        "description": "Policy definition category.",
                        "type": "string"
                      },
                      "policySetDefinitionId": {
                        "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionName": {
                        "description": "Policy set definition name, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionOwner": {
                        "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionCategory": {
                        "description": "Policy set definition category, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "policySetDefinitionParameters": {
                        "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "managementGroupIds": {
                        "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                        "type": "string"
                      },
                      "policyDefinitionReferenceId": {
                        "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                        "type": "string"
                      },
                      "complianceState": {
                        "description": "Compliance state of the resource.",
                        "type": "string"
                      },
                      "policyEvaluationDetails": {
                        "description": "Policy evaluation details.",
                        "type": "object",
                        "properties": {
                          "evaluatedExpressions": {
                            "description": "Details of the evaluated expressions.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Evaluation details of policy language expressions.",
                              "properties": {
                                "result": {
                                  "description": "Evaluation result.",
                                  "type": "string"
                                },
                                "expression": {
                                  "description": "Expression evaluated.",
                                  "type": "string"
                                },
                                "expressionKind": {
                                  "description": "The kind of expression that was evaluated.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "path": {
                                  "description": "Property path if the expression is a field or an alias.",
                                  "type": "string"
                                },
                                "expressionValue": {
                                  "description": "Value of the expression.",
                                  "type": "object"
                                },
                                "targetValue": {
                                  "description": "Target value to be compared with the expression value.",
                                  "type": "object"
                                },
                                "operator": {
                                  "description": "Operator to compare the expression value and the target value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "ifNotExistsDetails": {
                            "description": "Evaluation details of IfNotExists effect.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "ID of the last evaluated resource for IfNotExists effect.",
                                "type": "string"
                              },
                              "totalResources": {
                                "description": "Total number of resources to which the existence condition is applicable.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "policyDefinitionGroupNames": {
                        "description": "Policy definition group names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "components": {
                        "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Component state details.",
                          "properties": {
                            "id": {
                              "description": "Component Id.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Component type.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Component name.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Component compliance evaluation timestamp.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "complianceState": {
                              "description": "Component compliance state.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                          }
                        }
                      },
                      "policyDefinitionVersion": {
                        "description": "Evaluated policy definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionVersion": {
                        "description": "Evaluated policy set definition version.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentVersion": {
                        "description": "Evaluated policy assignment version.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize": {
      "post": {
        "operationId": "PolicyStates_SummarizeForResourceGroupLevelPolicyAssignment",
        "description": "Summarizes policy states for the resource group level policy assignment.",
        "parameters": [
          {
            "name": "policyStatesSummaryResource",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "latest"
            ],
            "x-ms-enum": {
              "name": "PolicyStatesSummaryResourceType",
              "modelAsString": true
            },
            "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "authorizationNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Authorization"
            ],
            "x-ms-enum": {
              "name": "AuthorizationNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "policyAssignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Policy assignment name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "From"
          },
          {
            "name": "$to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "To"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Summarize results.",
            "schema": {
              "description": "Summarize action results.",
              "properties": {
                "@odata.context": {
                  "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "OData entity count; represents the number of summaries returned; always set to 1.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 1
                },
                "value": {
                  "description": "Summarize action results.",
                  "type": "array",
                  "items": {
                    "description": "Summary results.",
                    "properties": {
                      "@odata.id": {
                        "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                        "type": "string"
                      },
                      "@odata.context": {
                        "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                        "type": "string"
                      },
                      "results": {
                        "description": "Compliance summary for all policy assignments.",
                        "properties": {
                          "queryResultsUri": {
                            "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                            "type": "string"
                          },
                          "nonCompliantResources": {
                            "description": "Number of non-compliant resources.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "nonCompliantPolicies": {
                            "description": "Number of non-compliant policies.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "resourceDetails": {
                            "description": "The resources summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyDetails": {
                            "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policyGroupDetails": {
                            "description": "The policy definition group summary at this level.",
                            "type": "array",
                            "items": {
                              "description": "The compliance state rollup.",
                              "properties": {
                                "complianceState": {
                                  "description": "The compliance state.",
                                  "type": "string"
                                },
                                "count": {
                                  "description": "Summarized count value for this compliance state.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "policyAssignments": {
                        "description": "Policy assignments summary.",
                        "type": "array",
                        "items": {
                          "description": "Policy assignment summary.",
                          "properties": {
                            "policyAssignmentId": {
                              "description": "Policy assignment ID.",
                              "type": "string"
                            },
                            "policySetDefinitionId": {
                              "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                              "type": "string"
                            },
                            "results": {
                              "description": "Compliance summary for the policy assignment.",
                              "properties": {
                                "queryResultsUri": {
                                  "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                  "type": "string"
                                },
                                "nonCompliantResources": {
                                  "description": "Number of non-compliant resources.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "nonCompliantPolicies": {
                                  "description": "Number of non-compliant policies.",
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0
                                },
                                "resourceDetails": {
                                  "description": "The resources summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyDetails": {
                                  "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyGroupDetails": {
                                  "description": "The policy definition group summary at this level.",
                                  "type": "array",
                                  "items": {
                                    "description": "The compliance state rollup.",
                                    "properties": {
                                      "complianceState": {
                                        "description": "The compliance state.",
                                        "type": "string"
                                      },
                                      "count": {
                                        "description": "Summarized count value for this compliance state.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "policyDefinitions": {
                              "description": "Policy definitions summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition summary.",
                                "properties": {
                                  "policyDefinitionId": {
                                    "description": "Policy definition ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionReferenceId": {
                                    "description": "Policy definition reference ID.",
                                    "type": "string"
                                  },
                                  "policyDefinitionGroupNames": {
                                    "description": "Policy definition group names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "effect": {
                                    "description": "Policy effect, i.e. policy definition action.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyDefinitionId"
                              ]
                            },
                            "policyGroups": {
                              "description": "Policy definition group summary.",
                              "type": "array",
                              "items": {
                                "description": "Policy definition group summary.",
                                "properties": {
                                  "policyGroupName": {
                                    "description": "Policy group name.",
                                    "type": "string"
                                  },
                                  "results": {
                                    "description": "Compliance summary for the policy definition group.",
                                    "properties": {
                                      "queryResultsUri": {
                                        "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                        "type": "string"
                                      },
                                      "nonCompliantResources": {
                                        "description": "Number of non-compliant resources.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "nonCompliantPolicies": {
                                        "description": "Number of non-compliant policies.",
                                        "type": "integer",
                                        "format": "int32",
                                        "minimum": 0
                                      },
                                      "resourceDetails": {
                                        "description": "The resources summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyDetails": {
                                        "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyGroupDetails": {
                                        "description": "The policy definition group summary at this level.",
                                        "type": "array",
                                        "items": {
                                          "description": "The compliance state rollup.",
                                          "properties": {
                                            "complianceState": {
                                              "description": "The compliance state.",
                                              "type": "string"
                                            },
                                            "count": {
                                              "description": "Summarized count value for this compliance state.",
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "policyGroupName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "policyAssignmentId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments": {
      "post": {
        "operationId": "Remediations_ListDeploymentsAtManagementGroup",
        "description": "Gets all deployments for a remediation at management group scope.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation deployments.",
            "schema": {
              "$ref": "#/definitions/RemediationDeploymentsListResult"
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel": {
      "post": {
        "operationId": "Remediations_CancelAtManagementGroup",
        "description": "Cancels a remediation at management group scope.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The remediation that was canceled.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations": {
      "get": {
        "operationId": "Remediations_ListForManagementGroup",
        "description": "Gets all remediations for the management group.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediations.",
            "schema": {
              "description": "List of remediations.",
              "properties": {
                "value": {
                  "description": "Array of remediation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the remediation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that should be remediated."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                          },
                          "resourceDiscoveryMode": {
                            "type": "string",
                            "enum": [
                              "ExistingNonCompliant",
                              "ReEvaluateCompliance"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceDiscoveryMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "ExistingNonCompliant",
                                  "description": "Remediate resources that are already known to be non-compliant."
                                },
                                {
                                  "value": "ReEvaluateCompliance",
                                  "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                                }
                              ]
                            },
                            "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                            "readOnly": true
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was created.",
                            "readOnly": true
                          },
                          "lastUpdatedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was last updated.",
                            "readOnly": true
                          },
                          "filters": {
                            "description": "The filters that will be applied to determine which resources to remediate.",
                            "properties": {
                              "locations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The resource locations that will be remediated."
                              },
                              "resourceIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                              }
                            }
                          },
                          "deploymentStatus": {
                            "description": "The deployment status summary for all deployments created by the remediation.",
                            "readOnly": true,
                            "properties": {
                              "totalDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation.",
                                "readOnly": true
                              },
                              "successfulDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have succeeded.",
                                "readOnly": true
                              },
                              "failedDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have failed.",
                                "readOnly": true
                              }
                            }
                          },
                          "statusMessage": {
                            "type": "string",
                            "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                            "readOnly": true
                          },
                          "correlationId": {
                            "type": "string",
                            "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                            "readOnly": true
                          },
                          "resourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                          },
                          "parallelDeployments": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                          },
                          "failureThreshold": {
                            "type": "object",
                            "properties": {
                              "percentage": {
                                "type": "number",
                                "format": "float",
                                "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                              }
                            },
                            "description": "The remediation failure threshold settings"
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the remediation.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the remediation.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the remediation.",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The remediation definition.",
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}": {
      "put": {
        "operationId": "Remediations_CreateOrUpdateAtManagementGroup",
        "description": "Creates or updates a remediation at management group scope.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            },
            "description": "The remediation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "The created remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "operationId": "Remediations_GetAtManagementGroup",
        "description": "Gets an existing remediation at management group scope.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "operationId": "Remediations_DeleteAtManagementGroup",
        "description": "Deletes an existing remediation at management group scope.",
        "parameters": [
          {
            "name": "managementGroupsNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Microsoft.Management"
            ],
            "x-ms-enum": {
              "name": "ManagementGroupsNamespaceType",
              "modelAsString": false
            },
            "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Management group ID.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "204": {
            "description": "The remediation did not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments": {
      "post": {
        "operationId": "Remediations_ListDeploymentsAtSubscription",
        "description": "Gets all deployments for a remediation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation deployments.",
            "schema": {
              "$ref": "#/definitions/RemediationDeploymentsListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel": {
      "post": {
        "operationId": "Remediations_CancelAtSubscription",
        "description": "Cancels a remediation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The remediation that was canceled.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations": {
      "get": {
        "operationId": "Remediations_ListForSubscription",
        "description": "Gets all remediations for the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediations.",
            "schema": {
              "description": "List of remediations.",
              "properties": {
                "value": {
                  "description": "Array of remediation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the remediation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that should be remediated."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                          },
                          "resourceDiscoveryMode": {
                            "type": "string",
                            "enum": [
                              "ExistingNonCompliant",
                              "ReEvaluateCompliance"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceDiscoveryMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "ExistingNonCompliant",
                                  "description": "Remediate resources that are already known to be non-compliant."
                                },
                                {
                                  "value": "ReEvaluateCompliance",
                                  "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                                }
                              ]
                            },
                            "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                            "readOnly": true
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was created.",
                            "readOnly": true
                          },
                          "lastUpdatedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was last updated.",
                            "readOnly": true
                          },
                          "filters": {
                            "description": "The filters that will be applied to determine which resources to remediate.",
                            "properties": {
                              "locations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The resource locations that will be remediated."
                              },
                              "resourceIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                              }
                            }
                          },
                          "deploymentStatus": {
                            "description": "The deployment status summary for all deployments created by the remediation.",
                            "readOnly": true,
                            "properties": {
                              "totalDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation.",
                                "readOnly": true
                              },
                              "successfulDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have succeeded.",
                                "readOnly": true
                              },
                              "failedDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have failed.",
                                "readOnly": true
                              }
                            }
                          },
                          "statusMessage": {
                            "type": "string",
                            "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                            "readOnly": true
                          },
                          "correlationId": {
                            "type": "string",
                            "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                            "readOnly": true
                          },
                          "resourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                          },
                          "parallelDeployments": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                          },
                          "failureThreshold": {
                            "type": "object",
                            "properties": {
                              "percentage": {
                                "type": "number",
                                "format": "float",
                                "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                              }
                            },
                            "description": "The remediation failure threshold settings"
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the remediation.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the remediation.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the remediation.",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The remediation definition.",
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}": {
      "put": {
        "operationId": "Remediations_CreateOrUpdateAtSubscription",
        "description": "Creates or updates a remediation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            },
            "description": "The remediation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "The created remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "operationId": "Remediations_GetAtSubscription",
        "description": "Gets an existing remediation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "operationId": "Remediations_DeleteAtSubscription",
        "description": "Deletes an existing remediation at subscription scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "204": {
            "description": "The remediation did not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments": {
      "post": {
        "operationId": "Remediations_ListDeploymentsAtResourceGroup",
        "description": "Gets all deployments for a remediation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation deployments.",
            "schema": {
              "$ref": "#/definitions/RemediationDeploymentsListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel": {
      "post": {
        "operationId": "Remediations_CancelAtResourceGroup",
        "description": "Cancels a remediation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The remediation that was canceled.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations": {
      "get": {
        "operationId": "Remediations_ListForResourceGroup",
        "description": "Gets all remediations for the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediations.",
            "schema": {
              "description": "List of remediations.",
              "properties": {
                "value": {
                  "description": "Array of remediation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the remediation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that should be remediated."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                          },
                          "resourceDiscoveryMode": {
                            "type": "string",
                            "enum": [
                              "ExistingNonCompliant",
                              "ReEvaluateCompliance"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceDiscoveryMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "ExistingNonCompliant",
                                  "description": "Remediate resources that are already known to be non-compliant."
                                },
                                {
                                  "value": "ReEvaluateCompliance",
                                  "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                                }
                              ]
                            },
                            "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                            "readOnly": true
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was created.",
                            "readOnly": true
                          },
                          "lastUpdatedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was last updated.",
                            "readOnly": true
                          },
                          "filters": {
                            "description": "The filters that will be applied to determine which resources to remediate.",
                            "properties": {
                              "locations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The resource locations that will be remediated."
                              },
                              "resourceIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                              }
                            }
                          },
                          "deploymentStatus": {
                            "description": "The deployment status summary for all deployments created by the remediation.",
                            "readOnly": true,
                            "properties": {
                              "totalDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation.",
                                "readOnly": true
                              },
                              "successfulDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have succeeded.",
                                "readOnly": true
                              },
                              "failedDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have failed.",
                                "readOnly": true
                              }
                            }
                          },
                          "statusMessage": {
                            "type": "string",
                            "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                            "readOnly": true
                          },
                          "correlationId": {
                            "type": "string",
                            "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                            "readOnly": true
                          },
                          "resourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                          },
                          "parallelDeployments": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                          },
                          "failureThreshold": {
                            "type": "object",
                            "properties": {
                              "percentage": {
                                "type": "number",
                                "format": "float",
                                "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                              }
                            },
                            "description": "The remediation failure threshold settings"
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the remediation.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the remediation.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the remediation.",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The remediation definition.",
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}": {
      "put": {
        "operationId": "Remediations_CreateOrUpdateAtResourceGroup",
        "description": "Creates or updates a remediation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            },
            "description": "The remediation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "The created remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "operationId": "Remediations_GetAtResourceGroup",
        "description": "Gets an existing remediation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "operationId": "Remediations_DeleteAtResourceGroup",
        "description": "Deletes an existing remediation at resource group scope.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Microsoft Azure subscription ID."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "204": {
            "description": "The remediation did not exist."
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments": {
      "post": {
        "operationId": "Remediations_ListDeploymentsAtResource",
        "description": "Gets all deployments for a remediation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation deployments.",
            "schema": {
              "$ref": "#/definitions/RemediationDeploymentsListResult"
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel": {
      "post": {
        "operationId": "Remediations_CancelAtResource",
        "description": "Cancel a remediation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The remediation that was canceled.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations": {
      "get": {
        "operationId": "Remediations_ListForResource",
        "description": "Gets all remediations for a resource.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Maximum number of records to return.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Top"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression.",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Filter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediations.",
            "schema": {
              "description": "List of remediations.",
              "properties": {
                "value": {
                  "description": "Array of remediation definitions.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the remediation.",
                        "properties": {
                          "policyAssignmentId": {
                            "type": "string",
                            "description": "The resource ID of the policy assignment that should be remediated."
                          },
                          "policyDefinitionReferenceId": {
                            "type": "string",
                            "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                          },
                          "resourceDiscoveryMode": {
                            "type": "string",
                            "enum": [
                              "ExistingNonCompliant",
                              "ReEvaluateCompliance"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceDiscoveryMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "ExistingNonCompliant",
                                  "description": "Remediate resources that are already known to be non-compliant."
                                },
                                {
                                  "value": "ReEvaluateCompliance",
                                  "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                                }
                              ]
                            },
                            "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                            "readOnly": true
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was created.",
                            "readOnly": true
                          },
                          "lastUpdatedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the remediation was last updated.",
                            "readOnly": true
                          },
                          "filters": {
                            "description": "The filters that will be applied to determine which resources to remediate.",
                            "properties": {
                              "locations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The resource locations that will be remediated."
                              },
                              "resourceIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                              }
                            }
                          },
                          "deploymentStatus": {
                            "description": "The deployment status summary for all deployments created by the remediation.",
                            "readOnly": true,
                            "properties": {
                              "totalDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation.",
                                "readOnly": true
                              },
                              "successfulDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have succeeded.",
                                "readOnly": true
                              },
                              "failedDeployments": {
                                "type": "integer",
                                "description": "The number of deployments required by the remediation that have failed.",
                                "readOnly": true
                              }
                            }
                          },
                          "statusMessage": {
                            "type": "string",
                            "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                            "readOnly": true
                          },
                          "correlationId": {
                            "type": "string",
                            "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                            "readOnly": true
                          },
                          "resourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                          },
                          "parallelDeployments": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                          },
                          "failureThreshold": {
                            "type": "object",
                            "properties": {
                              "percentage": {
                                "type": "number",
                                "format": "float",
                                "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                              }
                            },
                            "description": "The remediation failure threshold settings"
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the remediation.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the remediation.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the remediation.",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The remediation definition.",
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to get the next set of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}": {
      "put": {
        "operationId": "Remediations_CreateOrUpdateAtResource",
        "description": "Creates or updates a remediation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            },
            "description": "The remediation parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "The created remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "operationId": "Remediations_GetAtResource",
        "description": "Gets an existing remediation at resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "operationId": "Remediations_DeleteAtResource",
        "description": "Deletes an existing remediation at individual resource scope.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource ID.",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "remediationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the remediation.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted remediation.",
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the remediation.",
                  "properties": {
                    "policyAssignmentId": {
                      "type": "string",
                      "description": "The resource ID of the policy assignment that should be remediated."
                    },
                    "policyDefinitionReferenceId": {
                      "type": "string",
                      "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                    },
                    "resourceDiscoveryMode": {
                      "type": "string",
                      "enum": [
                        "ExistingNonCompliant",
                        "ReEvaluateCompliance"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceDiscoveryMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ExistingNonCompliant",
                            "description": "Remediate resources that are already known to be non-compliant."
                          },
                          {
                            "value": "ReEvaluateCompliance",
                            "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                          }
                        ]
                      },
                      "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                      "readOnly": true
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was created.",
                      "readOnly": true
                    },
                    "lastUpdatedOn": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the remediation was last updated.",
                      "readOnly": true
                    },
                    "filters": {
                      "description": "The filters that will be applied to determine which resources to remediate.",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The resource locations that will be remediated."
                        },
                        "resourceIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                        }
                      }
                    },
                    "deploymentStatus": {
                      "description": "The deployment status summary for all deployments created by the remediation.",
                      "readOnly": true,
                      "properties": {
                        "totalDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation.",
                          "readOnly": true
                        },
                        "successfulDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have succeeded.",
                          "readOnly": true
                        },
                        "failedDeployments": {
                          "type": "integer",
                          "description": "The number of deployments required by the remediation that have failed.",
                          "readOnly": true
                        }
                      }
                    },
                    "statusMessage": {
                      "type": "string",
                      "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                      "readOnly": true
                    },
                    "correlationId": {
                      "type": "string",
                      "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                      "readOnly": true
                    },
                    "resourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                    },
                    "parallelDeployments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                    },
                    "failureThreshold": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                        }
                      },
                      "description": "The remediation failure threshold settings"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the remediation.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the remediation.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the remediation.",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The remediation definition.",
              "x-ms-azure-resource": true
            }
          },
          "204": {
            "description": "The remediation did not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "AttestationListResult": {
      "description": "List of attestations.",
      "properties": {
        "value": {
          "description": "Array of attestation definitions.",
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties for the attestation.",
                "properties": {
                  "policyAssignmentId": {
                    "type": "string",
                    "description": "The resource ID of the policy assignment that the attestation is setting the state for."
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
                  },
                  "complianceState": {
                    "type": "string",
                    "enum": [
                      "Compliant",
                      "NonCompliant",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ComplianceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Compliant",
                          "description": "The resource is in compliance with the policy."
                        },
                        {
                          "value": "NonCompliant",
                          "description": "The resource is not in compliance with the policy."
                        },
                        {
                          "value": "Unknown",
                          "description": "The compliance state of the resource is not known."
                        }
                      ]
                    },
                    "description": "The compliance state that should be set on the resource."
                  },
                  "expiresOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the compliance state should expire."
                  },
                  "owner": {
                    "type": "string",
                    "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments describing why this attestation was created."
                  },
                  "evidence": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The description for this piece of evidence."
                        },
                        "sourceUri": {
                          "type": "string",
                          "description": "The URI location of the evidence."
                        }
                      },
                      "description": "A piece of evidence supporting the compliance state set in the attestation."
                    },
                    "x-ms-identifiers": [],
                    "description": "The evidence supporting the compliance state set in this attestation."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The status of the attestation.",
                    "readOnly": true
                  },
                  "lastComplianceStateChangeAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the compliance state was last changed in this attestation.",
                    "readOnly": true
                  },
                  "assessmentDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the evidence was assessed"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Additional metadata for this attestation"
                  }
                },
                "required": [
                  "policyAssignmentId"
                ]
              },
              "systemData": {
                "readOnly": true,
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "properties"
            ],
            "description": "An attestation resource."
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      }
    },
    "Attestation": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties for the attestation.",
          "properties": {
            "policyAssignmentId": {
              "type": "string",
              "description": "The resource ID of the policy assignment that the attestation is setting the state for."
            },
            "policyDefinitionReferenceId": {
              "type": "string",
              "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
            },
            "complianceState": {
              "type": "string",
              "enum": [
                "Compliant",
                "NonCompliant",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ComplianceState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Compliant",
                    "description": "The resource is in compliance with the policy."
                  },
                  {
                    "value": "NonCompliant",
                    "description": "The resource is not in compliance with the policy."
                  },
                  {
                    "value": "Unknown",
                    "description": "The compliance state of the resource is not known."
                  }
                ]
              },
              "description": "The compliance state that should be set on the resource."
            },
            "expiresOn": {
              "type": "string",
              "format": "date-time",
              "description": "The time the compliance state should expire."
            },
            "owner": {
              "type": "string",
              "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
            },
            "comments": {
              "type": "string",
              "description": "Comments describing why this attestation was created."
            },
            "evidence": {
              "type": "array",
              "items": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description for this piece of evidence."
                  },
                  "sourceUri": {
                    "type": "string",
                    "description": "The URI location of the evidence."
                  }
                },
                "description": "A piece of evidence supporting the compliance state set in the attestation."
              },
              "x-ms-identifiers": [],
              "description": "The evidence supporting the compliance state set in this attestation."
            },
            "provisioningState": {
              "type": "string",
              "description": "The status of the attestation.",
              "readOnly": true
            },
            "lastComplianceStateChangeAt": {
              "type": "string",
              "format": "date-time",
              "description": "The time the compliance state was last changed in this attestation.",
              "readOnly": true
            },
            "assessmentDate": {
              "type": "string",
              "format": "date-time",
              "description": "The time the evidence was assessed"
            },
            "metadata": {
              "type": "object",
              "description": "Additional metadata for this attestation"
            }
          },
          "required": [
            "policyAssignmentId"
          ]
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "required": [
        "properties"
      ],
      "description": "An attestation resource."
    },
    "AttestationProperties": {
      "properties": {
        "policyAssignmentId": {
          "type": "string",
          "description": "The resource ID of the policy assignment that the attestation is setting the state for."
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition."
        },
        "complianceState": {
          "type": "string",
          "enum": [
            "Compliant",
            "NonCompliant",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ComplianceState",
            "modelAsString": true,
            "values": [
              {
                "value": "Compliant",
                "description": "The resource is in compliance with the policy."
              },
              {
                "value": "NonCompliant",
                "description": "The resource is not in compliance with the policy."
              },
              {
                "value": "Unknown",
                "description": "The compliance state of the resource is not known."
              }
            ]
          },
          "description": "The compliance state that should be set on the resource."
        },
        "expiresOn": {
          "type": "string",
          "format": "date-time",
          "description": "The time the compliance state should expire."
        },
        "owner": {
          "type": "string",
          "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID."
        },
        "comments": {
          "type": "string",
          "description": "Comments describing why this attestation was created."
        },
        "evidence": {
          "type": "array",
          "items": {
            "properties": {
              "description": {
                "type": "string",
                "description": "The description for this piece of evidence."
              },
              "sourceUri": {
                "type": "string",
                "description": "The URI location of the evidence."
              }
            },
            "description": "A piece of evidence supporting the compliance state set in the attestation."
          },
          "x-ms-identifiers": [],
          "description": "The evidence supporting the compliance state set in this attestation."
        },
        "provisioningState": {
          "type": "string",
          "description": "The status of the attestation.",
          "readOnly": true
        },
        "lastComplianceStateChangeAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the compliance state was last changed in this attestation.",
          "readOnly": true
        },
        "assessmentDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time the evidence was assessed"
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata for this attestation"
        }
      },
      "required": [
        "policyAssignmentId"
      ],
      "description": "The properties of an attestation resource."
    },
    "AttestationEvidence": {
      "properties": {
        "description": {
          "type": "string",
          "description": "The description for this piece of evidence."
        },
        "sourceUri": {
          "type": "string",
          "description": "The URI location of the evidence."
        }
      },
      "description": "A piece of evidence supporting the compliance state set in the attestation."
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "additionalInfo": {
          "description": "Additional scenario specific error details.",
          "type": "array",
          "items": {
            "description": "Scenario specific error details.",
            "properties": {
              "type": {
                "description": "The type of included error details.",
                "type": "string",
                "readOnly": true
              },
              "info": {
                "description": "The scenario specific error details.",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "TypedErrorInfo": {
      "description": "Scenario specific error details.",
      "properties": {
        "type": {
          "description": "The type of included error details.",
          "type": "string",
          "readOnly": true
        },
        "info": {
          "description": "The scenario specific error details.",
          "readOnly": true
        }
      }
    },
    "CheckRestrictionsRequest": {
      "description": "The check policy restrictions parameters describing the resource that is being evaluated.",
      "properties": {
        "resourceDetails": {
          "description": "The information about the resource that will be evaluated.",
          "properties": {
            "resourceContent": {
              "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
              "type": "object"
            },
            "apiVersion": {
              "description": "The api-version of the resource content.",
              "type": "string"
            },
            "scope": {
              "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
              "type": "string"
            }
          },
          "required": [
            "resourceContent"
          ]
        },
        "pendingFields": {
          "description": "The list of fields and values that should be evaluated for potential restrictions.",
          "type": "array",
          "items": {
            "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
            "properties": {
              "field": {
                "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                "type": "string"
              },
              "values": {
                "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "field"
            ]
          }
        },
        "includeAuditEffect": {
          "description": "Whether to include policies with the 'audit' effect in the results. Defaults to false.",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "resourceDetails"
      ]
    },
    "CheckManagementGroupRestrictionsRequest": {
      "type": "object",
      "description": "The check policy restrictions parameters describing the resource that is being evaluated.",
      "properties": {
        "resourceDetails": {
          "description": "The information about the resource that will be evaluated.",
          "properties": {
            "resourceContent": {
              "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
              "type": "object"
            },
            "apiVersion": {
              "description": "The api-version of the resource content.",
              "type": "string"
            },
            "scope": {
              "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
              "type": "string"
            }
          },
          "required": [
            "resourceContent"
          ]
        },
        "pendingFields": {
          "description": "The list of fields and values that should be evaluated for potential restrictions.",
          "type": "array",
          "items": {
            "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
            "properties": {
              "field": {
                "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                "type": "string"
              },
              "values": {
                "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "field"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CheckRestrictionsResourceDetails": {
      "description": "The information about the resource that will be evaluated.",
      "properties": {
        "resourceContent": {
          "description": "The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.",
          "type": "object"
        },
        "apiVersion": {
          "description": "The api-version of the resource content.",
          "type": "string"
        },
        "scope": {
          "description": "The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID.",
          "type": "string"
        }
      },
      "required": [
        "resourceContent"
      ]
    },
    "PendingField": {
      "description": "A field that should be evaluated against Azure Policy to determine restrictions.",
      "properties": {
        "field": {
          "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
          "type": "string"
        },
        "values": {
          "description": "The list of potential values for the field that should be evaluated against Azure Policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "field"
      ]
    },
    "CheckRestrictionsResult": {
      "description": "The result of a check policy restrictions evaluation on a resource.",
      "properties": {
        "fieldRestrictions": {
          "description": "The restrictions that will be placed on various fields in the resource by policy.",
          "type": "array",
          "items": {
            "description": "The restrictions that will be placed on a field in the resource by policy.",
            "properties": {
              "field": {
                "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
                "type": "string",
                "readOnly": true
              },
              "restrictions": {
                "description": "The restrictions placed on that field by policy.",
                "type": "array",
                "items": {
                  "description": "The restrictions on a field imposed by a specific policy.",
                  "properties": {
                    "result": {
                      "description": "The type of restriction that is imposed on the field.",
                      "type": "string",
                      "enum": [
                        "Required",
                        "Removed",
                        "Deny",
                        "Audit"
                      ],
                      "x-ms-enum": {
                        "name": "FieldRestrictionResult",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Required",
                            "description": "The field and/or values are required by policy."
                          },
                          {
                            "value": "Removed",
                            "description": "The field will be removed by policy."
                          },
                          {
                            "value": "Deny",
                            "description": "The field and/or values will be denied by policy."
                          },
                          {
                            "value": "Audit",
                            "description": "The field and/or values will be audited by policy."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "defaultValue": {
                      "description": "The value that policy will set for the field if the user does not provide a value.",
                      "type": "string",
                      "readOnly": true
                    },
                    "values": {
                      "description": "The values that policy either requires or denies for the field.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "policy": {
                      "description": "The details of the policy that is causing the field restriction.",
                      "readOnly": true,
                      "properties": {
                        "policyDefinitionId": {
                          "description": "The resource identifier of the policy definition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "policySetDefinitionId": {
                          "description": "The resource identifier of the policy set definition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "policyDefinitionReferenceId": {
                          "description": "The reference identifier of a specific policy definition within a policy set definition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "policyAssignmentId": {
                          "description": "The resource identifier of the policy assignment.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "policyEffect": {
                      "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
                      "type": "string",
                      "readOnly": true
                    },
                    "reason": {
                      "description": "The reason for the restriction.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "contentEvaluationResult": {
          "description": "Evaluation results for the provided partial resource content.",
          "properties": {
            "policyEvaluations": {
              "description": "Policy evaluation results against the given resource content. This will indicate if the partial content that was provided will be denied as-is.",
              "type": "array",
              "items": {
                "description": "The result of a non-compliant policy evaluation against the given resource content.",
                "properties": {
                  "policyInfo": {
                    "description": "The details of the policy that was evaluated.",
                    "readOnly": true,
                    "properties": {
                      "policyDefinitionId": {
                        "description": "The resource identifier of the policy definition.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policySetDefinitionId": {
                        "description": "The resource identifier of the policy set definition.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyDefinitionReferenceId": {
                        "description": "The reference identifier of a specific policy definition within a policy set definition.",
                        "type": "string",
                        "readOnly": true
                      },
                      "policyAssignmentId": {
                        "description": "The resource identifier of the policy assignment.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "evaluationResult": {
                    "description": "The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
                    "type": "string",
                    "readOnly": true
                  },
                  "evaluationDetails": {
                    "description": "The detailed results of the policy expressions and values that were evaluated.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "evaluatedExpressions": {
                        "description": "Details of the evaluated expressions.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Evaluation details of policy language expressions.",
                          "properties": {
                            "result": {
                              "description": "Evaluation result.",
                              "type": "string"
                            },
                            "expression": {
                              "description": "Expression evaluated.",
                              "type": "string"
                            },
                            "expressionKind": {
                              "description": "The kind of expression that was evaluated.",
                              "type": "string",
                              "readOnly": true
                            },
                            "path": {
                              "description": "Property path if the expression is a field or an alias.",
                              "type": "string"
                            },
                            "expressionValue": {
                              "description": "Value of the expression.",
                              "type": "object"
                            },
                            "targetValue": {
                              "description": "Target value to be compared with the expression value.",
                              "type": "object"
                            },
                            "operator": {
                              "description": "Operator to compare the expression value and the target value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "ifNotExistsDetails": {
                        "description": "Evaluation details of IfNotExists effect.",
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "ID of the last evaluated resource for IfNotExists effect.",
                            "type": "string"
                          },
                          "totalResources": {
                            "description": "Total number of resources to which the existence condition is applicable.",
                            "type": "integer"
                          }
                        }
                      },
                      "reason": {
                        "description": "The reason for the evaluation result.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "effectDetails": {
                    "description": "The details of the effect that was applied to the resource.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "policyEffect": {
                        "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "FieldRestrictions": {
      "description": "The restrictions that will be placed on a field in the resource by policy.",
      "properties": {
        "field": {
          "description": "The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.",
          "type": "string",
          "readOnly": true
        },
        "restrictions": {
          "description": "The restrictions placed on that field by policy.",
          "type": "array",
          "items": {
            "description": "The restrictions on a field imposed by a specific policy.",
            "properties": {
              "result": {
                "description": "The type of restriction that is imposed on the field.",
                "type": "string",
                "enum": [
                  "Required",
                  "Removed",
                  "Deny",
                  "Audit"
                ],
                "x-ms-enum": {
                  "name": "FieldRestrictionResult",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Required",
                      "description": "The field and/or values are required by policy."
                    },
                    {
                      "value": "Removed",
                      "description": "The field will be removed by policy."
                    },
                    {
                      "value": "Deny",
                      "description": "The field and/or values will be denied by policy."
                    },
                    {
                      "value": "Audit",
                      "description": "The field and/or values will be audited by policy."
                    }
                  ]
                },
                "readOnly": true
              },
              "defaultValue": {
                "description": "The value that policy will set for the field if the user does not provide a value.",
                "type": "string",
                "readOnly": true
              },
              "values": {
                "description": "The values that policy either requires or denies for the field.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "policy": {
                "description": "The details of the policy that is causing the field restriction.",
                "readOnly": true,
                "properties": {
                  "policyDefinitionId": {
                    "description": "The resource identifier of the policy definition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "policySetDefinitionId": {
                    "description": "The resource identifier of the policy set definition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "policyDefinitionReferenceId": {
                    "description": "The reference identifier of a specific policy definition within a policy set definition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "policyAssignmentId": {
                    "description": "The resource identifier of the policy assignment.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "policyEffect": {
                "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the restriction.",
                "type": "string",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "FieldRestriction": {
      "description": "The restrictions on a field imposed by a specific policy.",
      "properties": {
        "result": {
          "description": "The type of restriction that is imposed on the field.",
          "type": "string",
          "enum": [
            "Required",
            "Removed",
            "Deny",
            "Audit"
          ],
          "x-ms-enum": {
            "name": "FieldRestrictionResult",
            "modelAsString": true,
            "values": [
              {
                "value": "Required",
                "description": "The field and/or values are required by policy."
              },
              {
                "value": "Removed",
                "description": "The field will be removed by policy."
              },
              {
                "value": "Deny",
                "description": "The field and/or values will be denied by policy."
              },
              {
                "value": "Audit",
                "description": "The field and/or values will be audited by policy."
              }
            ]
          },
          "readOnly": true
        },
        "defaultValue": {
          "description": "The value that policy will set for the field if the user does not provide a value.",
          "type": "string",
          "readOnly": true
        },
        "values": {
          "description": "The values that policy either requires or denies for the field.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "policy": {
          "description": "The details of the policy that is causing the field restriction.",
          "readOnly": true,
          "properties": {
            "policyDefinitionId": {
              "description": "The resource identifier of the policy definition.",
              "type": "string",
              "readOnly": true
            },
            "policySetDefinitionId": {
              "description": "The resource identifier of the policy set definition.",
              "type": "string",
              "readOnly": true
            },
            "policyDefinitionReferenceId": {
              "description": "The reference identifier of a specific policy definition within a policy set definition.",
              "type": "string",
              "readOnly": true
            },
            "policyAssignmentId": {
              "description": "The resource identifier of the policy assignment.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "policyEffect": {
          "description": "The effect of the policy that is causing the field restriction. http://aka.ms/policyeffects",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for the restriction.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PolicyEvaluationResult": {
      "description": "The result of a non-compliant policy evaluation against the given resource content.",
      "properties": {
        "policyInfo": {
          "description": "The details of the policy that was evaluated.",
          "readOnly": true,
          "properties": {
            "policyDefinitionId": {
              "description": "The resource identifier of the policy definition.",
              "type": "string",
              "readOnly": true
            },
            "policySetDefinitionId": {
              "description": "The resource identifier of the policy set definition.",
              "type": "string",
              "readOnly": true
            },
            "policyDefinitionReferenceId": {
              "description": "The reference identifier of a specific policy definition within a policy set definition.",
              "type": "string",
              "readOnly": true
            },
            "policyAssignmentId": {
              "description": "The resource identifier of the policy assignment.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "evaluationResult": {
          "description": "The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
          "type": "string",
          "readOnly": true
        },
        "evaluationDetails": {
          "description": "The detailed results of the policy expressions and values that were evaluated.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "evaluatedExpressions": {
              "description": "Details of the evaluated expressions.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Evaluation details of policy language expressions.",
                "properties": {
                  "result": {
                    "description": "Evaluation result.",
                    "type": "string"
                  },
                  "expression": {
                    "description": "Expression evaluated.",
                    "type": "string"
                  },
                  "expressionKind": {
                    "description": "The kind of expression that was evaluated.",
                    "type": "string",
                    "readOnly": true
                  },
                  "path": {
                    "description": "Property path if the expression is a field or an alias.",
                    "type": "string"
                  },
                  "expressionValue": {
                    "description": "Value of the expression.",
                    "type": "object"
                  },
                  "targetValue": {
                    "description": "Target value to be compared with the expression value.",
                    "type": "object"
                  },
                  "operator": {
                    "description": "Operator to compare the expression value and the target value.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "ifNotExistsDetails": {
              "description": "Evaluation details of IfNotExists effect.",
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "ID of the last evaluated resource for IfNotExists effect.",
                  "type": "string"
                },
                "totalResources": {
                  "description": "Total number of resources to which the existence condition is applicable.",
                  "type": "integer"
                }
              }
            },
            "reason": {
              "description": "The reason for the evaluation result.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "effectDetails": {
          "description": "The details of the effect that was applied to the resource.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "policyEffect": {
              "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "PolicyReference": {
      "description": "Resource identifiers for a policy.",
      "properties": {
        "policyDefinitionId": {
          "description": "The resource identifier of the policy definition.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionId": {
          "description": "The resource identifier of the policy set definition.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionReferenceId": {
          "description": "The reference identifier of a specific policy definition within a policy set definition.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentId": {
          "description": "The resource identifier of the policy assignment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PolicyEffectDetails": {
      "type": "object",
      "description": "The details of the effect that was applied to the resource.",
      "properties": {
        "policyEffect": {
          "description": "The effect that was applied to the resource. http://aka.ms/policyeffects",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CheckRestrictionEvaluationDetails": {
      "type": "object",
      "description": "Policy evaluation details.",
      "properties": {
        "evaluatedExpressions": {
          "description": "Details of the evaluated expressions.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Evaluation details of policy language expressions.",
            "properties": {
              "result": {
                "description": "Evaluation result.",
                "type": "string"
              },
              "expression": {
                "description": "Expression evaluated.",
                "type": "string"
              },
              "expressionKind": {
                "description": "The kind of expression that was evaluated.",
                "type": "string",
                "readOnly": true
              },
              "path": {
                "description": "Property path if the expression is a field or an alias.",
                "type": "string"
              },
              "expressionValue": {
                "description": "Value of the expression.",
                "type": "object"
              },
              "targetValue": {
                "description": "Target value to be compared with the expression value.",
                "type": "object"
              },
              "operator": {
                "description": "Operator to compare the expression value and the target value.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "ifNotExistsDetails": {
          "description": "Evaluation details of IfNotExists effect.",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "ID of the last evaluated resource for IfNotExists effect.",
              "type": "string"
            },
            "totalResources": {
              "description": "Total number of resources to which the existence condition is applicable.",
              "type": "integer"
            }
          }
        },
        "reason": {
          "description": "The reason for the evaluation result.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ComponentPolicyStatesQueryResults": {
      "type": "object",
      "description": "Query results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of policy state records returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "value": {
          "description": "Query results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Component Policy State record.",
            "properties": {
              "@odata.id": {
                "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
                "type": "string",
                "readOnly": true
              },
              "@odata.context": {
                "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                "type": "string",
                "readOnly": true
              },
              "timestamp": {
                "description": "Timestamp for the component policy state record.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "componentId": {
                "description": "Component Id.",
                "type": "string",
                "readOnly": true
              },
              "componentType": {
                "description": "Component type.",
                "type": "string",
                "readOnly": true
              },
              "componentName": {
                "description": "Component name.",
                "type": "string",
                "readOnly": true
              },
              "resourceId": {
                "description": "Resource ID.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentId": {
                "description": "Policy assignment ID.",
                "type": "string",
                "readOnly": true
              },
              "policyDefinitionId": {
                "description": "Policy definition ID.",
                "type": "string",
                "readOnly": true
              },
              "subscriptionId": {
                "description": "Subscription ID.",
                "type": "string",
                "readOnly": true
              },
              "resourceType": {
                "description": "Resource type.",
                "type": "string",
                "readOnly": true
              },
              "resourceLocation": {
                "description": "Resource location.",
                "type": "string",
                "readOnly": true
              },
              "resourceGroup": {
                "description": "Resource group name.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentName": {
                "description": "Policy assignment name.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentOwner": {
                "description": "Policy assignment owner.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentParameters": {
                "description": "Policy assignment parameters.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentScope": {
                "description": "Policy assignment scope.",
                "type": "string",
                "readOnly": true
              },
              "policyDefinitionName": {
                "description": "Policy definition name.",
                "type": "string",
                "readOnly": true
              },
              "policyDefinitionAction": {
                "description": "Policy definition action, i.e. effect.",
                "type": "string",
                "readOnly": true
              },
              "policyDefinitionCategory": {
                "description": "Policy definition category.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionId": {
                "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionName": {
                "description": "Policy set definition name, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionOwner": {
                "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionCategory": {
                "description": "Policy set definition category, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionParameters": {
                "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "policyDefinitionReferenceId": {
                "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                "type": "string",
                "readOnly": true
              },
              "complianceState": {
                "description": "Compliance state of the resource.",
                "type": "string",
                "readOnly": true
              },
              "policyEvaluationDetails": {
                "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
                "type": "object",
                "properties": {
                  "evaluatedExpressions": {
                    "description": "Details of the evaluated expressions.",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "description": "Evaluation details of policy language expressions.",
                      "properties": {
                        "result": {
                          "description": "Evaluation result.",
                          "type": "string"
                        },
                        "expression": {
                          "description": "Expression evaluated.",
                          "type": "string",
                          "readOnly": true
                        },
                        "expressionKind": {
                          "description": "The kind of expression that was evaluated.",
                          "type": "string",
                          "readOnly": true
                        },
                        "path": {
                          "description": "Property path if the expression is a field or an alias.",
                          "type": "string",
                          "readOnly": true
                        },
                        "expressionValue": {
                          "description": "Value of the expression.",
                          "type": "object",
                          "readOnly": true
                        },
                        "targetValue": {
                          "description": "Target value to be compared with the expression value.",
                          "type": "object",
                          "readOnly": true
                        },
                        "operator": {
                          "description": "Operator to compare the expression value and the target value.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "reason": {
                    "description": "Additional textual reason for the evaluation outcome.",
                    "type": "string"
                  }
                }
              },
              "policyDefinitionGroupNames": {
                "description": "Policy definition group names.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "policyDefinitionVersion": {
                "description": "Evaluated policy definition version.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionVersion": {
                "description": "Evaluated policy set definition version.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentVersion": {
                "description": "Evaluated policy assignment version.",
                "type": "string",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ComponentPolicyState": {
      "type": "object",
      "description": "Component Policy State record.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since component policy state records do not have an entity ID.",
          "type": "string",
          "readOnly": true
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string",
          "readOnly": true
        },
        "timestamp": {
          "description": "Timestamp for the component policy state record.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "componentId": {
          "description": "Component Id.",
          "type": "string",
          "readOnly": true
        },
        "componentType": {
          "description": "Component type.",
          "type": "string",
          "readOnly": true
        },
        "componentName": {
          "description": "Component name.",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Subscription ID.",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "resourceLocation": {
          "description": "Resource location.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentName": {
          "description": "Policy assignment name.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentOwner": {
          "description": "Policy assignment owner.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentParameters": {
          "description": "Policy assignment parameters.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentScope": {
          "description": "Policy assignment scope.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionName": {
          "description": "Policy definition name.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionAction": {
          "description": "Policy definition action, i.e. effect.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionCategory": {
          "description": "Policy definition category.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionName": {
          "description": "Policy set definition name, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionOwner": {
          "description": "Policy set definition owner, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionCategory": {
          "description": "Policy set definition category, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionParameters": {
          "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "policyDefinitionReferenceId": {
          "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
          "type": "string",
          "readOnly": true
        },
        "complianceState": {
          "description": "Compliance state of the resource.",
          "type": "string",
          "readOnly": true
        },
        "policyEvaluationDetails": {
          "description": "Policy evaluation details. This is only included in the response if the request contains $expand=PolicyEvaluationDetails.",
          "type": "object",
          "properties": {
            "evaluatedExpressions": {
              "description": "Details of the evaluated expressions.",
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "object",
                "description": "Evaluation details of policy language expressions.",
                "properties": {
                  "result": {
                    "description": "Evaluation result.",
                    "type": "string"
                  },
                  "expression": {
                    "description": "Expression evaluated.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expressionKind": {
                    "description": "The kind of expression that was evaluated.",
                    "type": "string",
                    "readOnly": true
                  },
                  "path": {
                    "description": "Property path if the expression is a field or an alias.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expressionValue": {
                    "description": "Value of the expression.",
                    "type": "object",
                    "readOnly": true
                  },
                  "targetValue": {
                    "description": "Target value to be compared with the expression value.",
                    "type": "object",
                    "readOnly": true
                  },
                  "operator": {
                    "description": "Operator to compare the expression value and the target value.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "reason": {
              "description": "Additional textual reason for the evaluation outcome.",
              "type": "string"
            }
          }
        },
        "policyDefinitionGroupNames": {
          "description": "Policy definition group names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "policyDefinitionVersion": {
          "description": "Evaluated policy definition version.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionVersion": {
          "description": "Evaluated policy set definition version.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentVersion": {
          "description": "Evaluated policy assignment version.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "ComponentPolicyEvaluationDetails": {
      "type": "object",
      "description": "Policy evaluation details.",
      "properties": {
        "evaluatedExpressions": {
          "description": "Details of the evaluated expressions.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "description": "Evaluation details of policy language expressions.",
            "properties": {
              "result": {
                "description": "Evaluation result.",
                "type": "string"
              },
              "expression": {
                "description": "Expression evaluated.",
                "type": "string",
                "readOnly": true
              },
              "expressionKind": {
                "description": "The kind of expression that was evaluated.",
                "type": "string",
                "readOnly": true
              },
              "path": {
                "description": "Property path if the expression is a field or an alias.",
                "type": "string",
                "readOnly": true
              },
              "expressionValue": {
                "description": "Value of the expression.",
                "type": "object",
                "readOnly": true
              },
              "targetValue": {
                "description": "Target value to be compared with the expression value.",
                "type": "object",
                "readOnly": true
              },
              "operator": {
                "description": "Operator to compare the expression value and the target value.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "reason": {
          "description": "Additional textual reason for the evaluation outcome.",
          "type": "string"
        }
      }
    },
    "ComponentExpressionEvaluationDetails": {
      "type": "object",
      "description": "Evaluation details of policy language expressions.",
      "properties": {
        "result": {
          "description": "Evaluation result.",
          "type": "string"
        },
        "expression": {
          "description": "Expression evaluated.",
          "type": "string",
          "readOnly": true
        },
        "expressionKind": {
          "description": "The kind of expression that was evaluated.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "Property path if the expression is a field or an alias.",
          "type": "string",
          "readOnly": true
        },
        "expressionValue": {
          "description": "Value of the expression.",
          "type": "object",
          "readOnly": true
        },
        "targetValue": {
          "description": "Target value to be compared with the expression value.",
          "type": "object",
          "readOnly": true
        },
        "operator": {
          "description": "Operator to compare the expression value and the target value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationsListResults": {
      "description": "List of available operations.",
      "type": "object",
      "properties": {
        "@odata.count": {
          "description": "OData entity count; represents the number of operations returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "value": {
          "description": "List of available operations.",
          "type": "array",
          "items": {
            "description": "Operation definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name.",
                "type": "string"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "Display metadata associated with the operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Resource provider name.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource name on which the operation is performed.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation name.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Operation description.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Operation": {
      "description": "Operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name.",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider name.",
              "type": "string"
            },
            "resource": {
              "description": "Resource name on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "Operation name.",
              "type": "string"
            },
            "description": {
              "description": "Operation description.",
              "type": "string"
            }
          }
        }
      }
    },
    "PolicyEventsQueryResults": {
      "description": "Query results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of policy event records returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "@odata.nextLink": {
          "description": "Odata next link; URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Query results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Policy event record.",
            "properties": {
              "@odata.id": {
                "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
                "type": "string"
              },
              "@odata.context": {
                "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                "type": "string"
              },
              "timestamp": {
                "description": "Timestamp for the policy event record.",
                "type": "string",
                "format": "date-time"
              },
              "resourceId": {
                "description": "Resource ID.",
                "type": "string"
              },
              "policyAssignmentId": {
                "description": "Policy assignment ID.",
                "type": "string"
              },
              "policyDefinitionId": {
                "description": "Policy definition ID.",
                "type": "string"
              },
              "effectiveParameters": {
                "description": "Effective parameters for the policy assignment.",
                "type": "string"
              },
              "isCompliant": {
                "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
                "type": "boolean"
              },
              "subscriptionId": {
                "description": "Subscription ID.",
                "type": "string"
              },
              "resourceType": {
                "description": "Resource type.",
                "type": "string"
              },
              "resourceLocation": {
                "description": "Resource location.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "Resource group name.",
                "type": "string"
              },
              "resourceTags": {
                "description": "List of resource tags.",
                "type": "string"
              },
              "policyAssignmentName": {
                "description": "Policy assignment name.",
                "type": "string"
              },
              "policyAssignmentOwner": {
                "description": "Policy assignment owner.",
                "type": "string"
              },
              "policyAssignmentParameters": {
                "description": "Policy assignment parameters.",
                "type": "string"
              },
              "policyAssignmentScope": {
                "description": "Policy assignment scope.",
                "type": "string"
              },
              "policyDefinitionName": {
                "description": "Policy definition name.",
                "type": "string"
              },
              "policyDefinitionAction": {
                "description": "Policy definition action, i.e. effect.",
                "type": "string"
              },
              "policyDefinitionCategory": {
                "description": "Policy definition category.",
                "type": "string"
              },
              "policySetDefinitionId": {
                "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionName": {
                "description": "Policy set definition name, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionOwner": {
                "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionCategory": {
                "description": "Policy set definition category, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionParameters": {
                "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "managementGroupIds": {
                "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                "type": "string"
              },
              "policyDefinitionReferenceId": {
                "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "complianceState": {
                "description": "Compliance state of the resource.",
                "type": "string"
              },
              "tenantId": {
                "description": "Tenant ID for the policy event record.",
                "type": "string"
              },
              "principalOid": {
                "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
                "type": "string"
              },
              "components": {
                "description": "Components events records populated only when URL contains $expand=components clause.",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Component event details.",
                  "properties": {
                    "id": {
                      "description": "Component Id.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Component type.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Component name.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Timestamp for component policy event record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "tenantId": {
                      "description": "Tenant ID for the policy event record.",
                      "type": "string"
                    },
                    "principalOid": {
                      "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                      "type": "string"
                    },
                    "policyDefinitionAction": {
                      "description": "Policy definition action, i.e. effect.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                  }
                }
              }
            },
            "additionalProperties": {
              "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PolicyEvent": {
      "type": "object",
      "description": "Policy event record.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since policy event records do not have an entity ID.",
          "type": "string"
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp for the policy event record.",
          "type": "string",
          "format": "date-time"
        },
        "resourceId": {
          "description": "Resource ID.",
          "type": "string"
        },
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string"
        },
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string"
        },
        "effectiveParameters": {
          "description": "Effective parameters for the policy assignment.",
          "type": "string"
        },
        "isCompliant": {
          "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against.",
          "type": "boolean"
        },
        "subscriptionId": {
          "description": "Subscription ID.",
          "type": "string"
        },
        "resourceType": {
          "description": "Resource type.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "Resource location.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        },
        "resourceTags": {
          "description": "List of resource tags.",
          "type": "string"
        },
        "policyAssignmentName": {
          "description": "Policy assignment name.",
          "type": "string"
        },
        "policyAssignmentOwner": {
          "description": "Policy assignment owner.",
          "type": "string"
        },
        "policyAssignmentParameters": {
          "description": "Policy assignment parameters.",
          "type": "string"
        },
        "policyAssignmentScope": {
          "description": "Policy assignment scope.",
          "type": "string"
        },
        "policyDefinitionName": {
          "description": "Policy definition name.",
          "type": "string"
        },
        "policyDefinitionAction": {
          "description": "Policy definition action, i.e. effect.",
          "type": "string"
        },
        "policyDefinitionCategory": {
          "description": "Policy definition category.",
          "type": "string"
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionName": {
          "description": "Policy set definition name, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionOwner": {
          "description": "Policy set definition owner, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionCategory": {
          "description": "Policy set definition category, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionParameters": {
          "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "managementGroupIds": {
          "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
          "type": "string"
        },
        "policyDefinitionReferenceId": {
          "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "complianceState": {
          "description": "Compliance state of the resource.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant ID for the policy event record.",
          "type": "string"
        },
        "principalOid": {
          "description": "Principal object ID for the user who initiated the resource operation that triggered the policy event.",
          "type": "string"
        },
        "components": {
          "description": "Components events records populated only when URL contains $expand=components clause.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Component event details.",
            "properties": {
              "id": {
                "description": "Component Id.",
                "type": "string"
              },
              "type": {
                "description": "Component type.",
                "type": "string"
              },
              "name": {
                "description": "Component name.",
                "type": "string"
              },
              "timestamp": {
                "description": "Timestamp for component policy event record.",
                "type": "string",
                "format": "date-time"
              },
              "tenantId": {
                "description": "Tenant ID for the policy event record.",
                "type": "string"
              },
              "principalOid": {
                "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
                "type": "string"
              },
              "policyDefinitionAction": {
                "description": "Policy definition action, i.e. effect.",
                "type": "string"
              }
            },
            "additionalProperties": {
              "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
            }
          }
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "ComponentEventDetails": {
      "type": "object",
      "description": "Component event details.",
      "properties": {
        "id": {
          "description": "Component Id.",
          "type": "string"
        },
        "type": {
          "description": "Component type.",
          "type": "string"
        },
        "name": {
          "description": "Component name.",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp for component policy event record.",
          "type": "string",
          "format": "date-time"
        },
        "tenantId": {
          "description": "Tenant ID for the policy event record.",
          "type": "string"
        },
        "principalOid": {
          "description": "Principal object ID for the user who initiated the resource component operation that triggered the policy event.",
          "type": "string"
        },
        "policyDefinitionAction": {
          "description": "Policy definition action, i.e. effect.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "QueryFailure": {
      "description": "Error response.",
      "properties": {
        "error": {
          "description": "Error definition.",
          "properties": {
            "code": {
              "description": "Service specific error code which serves as the substatus for the HTTP error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Description of the error.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "MetadataDocument": {
      "description": "Metadata XML document.",
      "type": "string"
    },
    "PolicyMetadata": {
      "description": "Policy metadata resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the policy metadata.",
          "properties": {
            "metadataId": {
              "description": "The policy metadata identifier.",
              "type": "string",
              "readOnly": true
            },
            "category": {
              "description": "The category of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "title": {
              "description": "The title of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "owner": {
              "description": "The owner of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "additionalContentUrl": {
              "description": "Url for getting additional content about the resource metadata.",
              "type": "string",
              "readOnly": true
            },
            "metadata": {
              "description": "Additional metadata.",
              "type": "object",
              "readOnly": true
            },
            "description": {
              "description": "The description of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "requirements": {
              "description": "The requirements of the policy metadata.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "id": {
          "type": "string",
          "description": "The ID of the policy metadata.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the policy metadata.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the policy metadata.",
          "readOnly": true
        }
      }
    },
    "PolicyMetadataSlimProperties": {
      "description": "The properties of the policy metadata, excluding properties containing large strings",
      "properties": {
        "metadataId": {
          "description": "The policy metadata identifier.",
          "type": "string",
          "readOnly": true
        },
        "category": {
          "description": "The category of the policy metadata.",
          "type": "string",
          "readOnly": true
        },
        "title": {
          "description": "The title of the policy metadata.",
          "type": "string",
          "readOnly": true
        },
        "owner": {
          "description": "The owner of the policy metadata.",
          "type": "string",
          "readOnly": true
        },
        "additionalContentUrl": {
          "description": "Url for getting additional content about the resource metadata.",
          "type": "string",
          "readOnly": true
        },
        "metadata": {
          "description": "Additional metadata.",
          "type": "object",
          "readOnly": true
        }
      }
    },
    "PolicyMetadataProperties": {
      "description": "The properties of the policy metadata.",
      "properties": {
        "description": {
          "description": "The description of the policy metadata.",
          "type": "string",
          "readOnly": true
        },
        "requirements": {
          "description": "The requirements of the policy metadata.",
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "description": "The properties of the policy metadata, excluding properties containing large strings",
          "properties": {
            "metadataId": {
              "description": "The policy metadata identifier.",
              "type": "string",
              "readOnly": true
            },
            "category": {
              "description": "The category of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "title": {
              "description": "The title of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "owner": {
              "description": "The owner of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "additionalContentUrl": {
              "description": "Url for getting additional content about the resource metadata.",
              "type": "string",
              "readOnly": true
            },
            "metadata": {
              "description": "Additional metadata.",
              "type": "object",
              "readOnly": true
            }
          }
        }
      ]
    },
    "SlimPolicyMetadata": {
      "description": "Slim version of policy metadata resource definition, excluding properties with large strings",
      "properties": {
        "properties": {
          "description": "The properties of the policy metadata, excluding properties containing large strings",
          "properties": {
            "metadataId": {
              "description": "The policy metadata identifier.",
              "type": "string",
              "readOnly": true
            },
            "category": {
              "description": "The category of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "title": {
              "description": "The title of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "owner": {
              "description": "The owner of the policy metadata.",
              "type": "string",
              "readOnly": true
            },
            "additionalContentUrl": {
              "description": "Url for getting additional content about the resource metadata.",
              "type": "string",
              "readOnly": true
            },
            "metadata": {
              "description": "Additional metadata.",
              "type": "object",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The ID of the policy metadata.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the policy metadata.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the policy metadata.",
          "readOnly": true
        }
      }
    },
    "PolicyMetadataCollection": {
      "description": "Collection of policy metadata resources.",
      "properties": {
        "value": {
          "description": "Array of policy metadata definitions.",
          "type": "array",
          "items": {
            "description": "Slim version of policy metadata resource definition, excluding properties with large strings",
            "properties": {
              "properties": {
                "description": "The properties of the policy metadata, excluding properties containing large strings",
                "properties": {
                  "metadataId": {
                    "description": "The policy metadata identifier.",
                    "type": "string",
                    "readOnly": true
                  },
                  "category": {
                    "description": "The category of the policy metadata.",
                    "type": "string",
                    "readOnly": true
                  },
                  "title": {
                    "description": "The title of the policy metadata.",
                    "type": "string",
                    "readOnly": true
                  },
                  "owner": {
                    "description": "The owner of the policy metadata.",
                    "type": "string",
                    "readOnly": true
                  },
                  "additionalContentUrl": {
                    "description": "Url for getting additional content about the resource metadata.",
                    "type": "string",
                    "readOnly": true
                  },
                  "metadata": {
                    "description": "Additional metadata.",
                    "type": "object",
                    "readOnly": true
                  }
                },
                "x-ms-client-flatten": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the policy metadata.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the policy metadata.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the policy metadata.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      }
    },
    "PolicyStatesQueryResults": {
      "description": "Query results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of policy state records returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "@odata.nextLink": {
          "description": "Odata next link; URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Query results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Policy state record.",
            "properties": {
              "@odata.id": {
                "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
                "type": "string"
              },
              "@odata.context": {
                "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                "type": "string"
              },
              "timestamp": {
                "description": "Timestamp for the policy state record.",
                "type": "string",
                "format": "date-time"
              },
              "resourceId": {
                "description": "Resource ID.",
                "type": "string"
              },
              "policyAssignmentId": {
                "description": "Policy assignment ID.",
                "type": "string"
              },
              "policyDefinitionId": {
                "description": "Policy definition ID.",
                "type": "string"
              },
              "effectiveParameters": {
                "description": "Effective parameters for the policy assignment.",
                "type": "string"
              },
              "isCompliant": {
                "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
                "type": "boolean"
              },
              "subscriptionId": {
                "description": "Subscription ID.",
                "type": "string"
              },
              "resourceType": {
                "description": "Resource type.",
                "type": "string"
              },
              "resourceLocation": {
                "description": "Resource location.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "Resource group name.",
                "type": "string"
              },
              "resourceTags": {
                "description": "List of resource tags.",
                "type": "string"
              },
              "policyAssignmentName": {
                "description": "Policy assignment name.",
                "type": "string"
              },
              "policyAssignmentOwner": {
                "description": "Policy assignment owner.",
                "type": "string"
              },
              "policyAssignmentParameters": {
                "description": "Policy assignment parameters.",
                "type": "string"
              },
              "policyAssignmentScope": {
                "description": "Policy assignment scope.",
                "type": "string"
              },
              "policyDefinitionName": {
                "description": "Policy definition name.",
                "type": "string"
              },
              "policyDefinitionAction": {
                "description": "Policy definition action, i.e. effect.",
                "type": "string"
              },
              "policyDefinitionCategory": {
                "description": "Policy definition category.",
                "type": "string"
              },
              "policySetDefinitionId": {
                "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionName": {
                "description": "Policy set definition name, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionOwner": {
                "description": "Policy set definition owner, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionCategory": {
                "description": "Policy set definition category, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "policySetDefinitionParameters": {
                "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "managementGroupIds": {
                "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
                "type": "string"
              },
              "policyDefinitionReferenceId": {
                "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "complianceState": {
                "description": "Compliance state of the resource.",
                "type": "string"
              },
              "policyEvaluationDetails": {
                "description": "Policy evaluation details.",
                "type": "object",
                "properties": {
                  "evaluatedExpressions": {
                    "description": "Details of the evaluated expressions.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Evaluation details of policy language expressions.",
                      "properties": {
                        "result": {
                          "description": "Evaluation result.",
                          "type": "string"
                        },
                        "expression": {
                          "description": "Expression evaluated.",
                          "type": "string"
                        },
                        "expressionKind": {
                          "description": "The kind of expression that was evaluated.",
                          "type": "string",
                          "readOnly": true
                        },
                        "path": {
                          "description": "Property path if the expression is a field or an alias.",
                          "type": "string"
                        },
                        "expressionValue": {
                          "description": "Value of the expression.",
                          "type": "object"
                        },
                        "targetValue": {
                          "description": "Target value to be compared with the expression value.",
                          "type": "object"
                        },
                        "operator": {
                          "description": "Operator to compare the expression value and the target value.",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "ifNotExistsDetails": {
                    "description": "Evaluation details of IfNotExists effect.",
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "description": "ID of the last evaluated resource for IfNotExists effect.",
                        "type": "string"
                      },
                      "totalResources": {
                        "description": "Total number of resources to which the existence condition is applicable.",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "policyDefinitionGroupNames": {
                "description": "Policy definition group names.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "components": {
                "description": "Components state compliance records populated only when URL contains $expand=components clause.",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Component state details.",
                  "properties": {
                    "id": {
                      "description": "Component Id.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Component type.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Component name.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Component compliance evaluation timestamp.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "complianceState": {
                      "description": "Component compliance state.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
                  }
                }
              },
              "policyDefinitionVersion": {
                "description": "Evaluated policy definition version.",
                "type": "string",
                "readOnly": true
              },
              "policySetDefinitionVersion": {
                "description": "Evaluated policy set definition version.",
                "type": "string",
                "readOnly": true
              },
              "policyAssignmentVersion": {
                "description": "Evaluated policy assignment version.",
                "type": "string",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PolicyState": {
      "type": "object",
      "description": "Policy state record.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
          "type": "string"
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp for the policy state record.",
          "type": "string",
          "format": "date-time"
        },
        "resourceId": {
          "description": "Resource ID.",
          "type": "string"
        },
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string"
        },
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string"
        },
        "effectiveParameters": {
          "description": "Effective parameters for the policy assignment.",
          "type": "string"
        },
        "isCompliant": {
          "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
          "type": "boolean"
        },
        "subscriptionId": {
          "description": "Subscription ID.",
          "type": "string"
        },
        "resourceType": {
          "description": "Resource type.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "Resource location.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        },
        "resourceTags": {
          "description": "List of resource tags.",
          "type": "string"
        },
        "policyAssignmentName": {
          "description": "Policy assignment name.",
          "type": "string"
        },
        "policyAssignmentOwner": {
          "description": "Policy assignment owner.",
          "type": "string"
        },
        "policyAssignmentParameters": {
          "description": "Policy assignment parameters.",
          "type": "string"
        },
        "policyAssignmentScope": {
          "description": "Policy assignment scope.",
          "type": "string"
        },
        "policyDefinitionName": {
          "description": "Policy definition name.",
          "type": "string"
        },
        "policyDefinitionAction": {
          "description": "Policy definition action, i.e. effect.",
          "type": "string"
        },
        "policyDefinitionCategory": {
          "description": "Policy definition category.",
          "type": "string"
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionName": {
          "description": "Policy set definition name, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionOwner": {
          "description": "Policy set definition owner, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionCategory": {
          "description": "Policy set definition category, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionParameters": {
          "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "managementGroupIds": {
          "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
          "type": "string"
        },
        "policyDefinitionReferenceId": {
          "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "complianceState": {
          "description": "Compliance state of the resource.",
          "type": "string"
        },
        "policyEvaluationDetails": {
          "description": "Policy evaluation details.",
          "type": "object",
          "properties": {
            "evaluatedExpressions": {
              "description": "Details of the evaluated expressions.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Evaluation details of policy language expressions.",
                "properties": {
                  "result": {
                    "description": "Evaluation result.",
                    "type": "string"
                  },
                  "expression": {
                    "description": "Expression evaluated.",
                    "type": "string"
                  },
                  "expressionKind": {
                    "description": "The kind of expression that was evaluated.",
                    "type": "string",
                    "readOnly": true
                  },
                  "path": {
                    "description": "Property path if the expression is a field or an alias.",
                    "type": "string"
                  },
                  "expressionValue": {
                    "description": "Value of the expression.",
                    "type": "object"
                  },
                  "targetValue": {
                    "description": "Target value to be compared with the expression value.",
                    "type": "object"
                  },
                  "operator": {
                    "description": "Operator to compare the expression value and the target value.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "ifNotExistsDetails": {
              "description": "Evaluation details of IfNotExists effect.",
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "ID of the last evaluated resource for IfNotExists effect.",
                  "type": "string"
                },
                "totalResources": {
                  "description": "Total number of resources to which the existence condition is applicable.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "policyDefinitionGroupNames": {
          "description": "Policy definition group names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "components": {
          "description": "Components state compliance records populated only when URL contains $expand=components clause.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Component state details.",
            "properties": {
              "id": {
                "description": "Component Id.",
                "type": "string"
              },
              "type": {
                "description": "Component type.",
                "type": "string"
              },
              "name": {
                "description": "Component name.",
                "type": "string"
              },
              "timestamp": {
                "description": "Component compliance evaluation timestamp.",
                "type": "string",
                "format": "date-time"
              },
              "complianceState": {
                "description": "Component compliance state.",
                "type": "string"
              }
            },
            "additionalProperties": {
              "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
            }
          }
        },
        "policyDefinitionVersion": {
          "description": "Evaluated policy definition version.",
          "type": "string",
          "readOnly": true
        },
        "policySetDefinitionVersion": {
          "description": "Evaluated policy set definition version.",
          "type": "string",
          "readOnly": true
        },
        "policyAssignmentVersion": {
          "description": "Evaluated policy assignment version.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "PolicyEvaluationDetails": {
      "type": "object",
      "description": "Policy evaluation details.",
      "properties": {
        "evaluatedExpressions": {
          "description": "Details of the evaluated expressions.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Evaluation details of policy language expressions.",
            "properties": {
              "result": {
                "description": "Evaluation result.",
                "type": "string"
              },
              "expression": {
                "description": "Expression evaluated.",
                "type": "string"
              },
              "expressionKind": {
                "description": "The kind of expression that was evaluated.",
                "type": "string",
                "readOnly": true
              },
              "path": {
                "description": "Property path if the expression is a field or an alias.",
                "type": "string"
              },
              "expressionValue": {
                "description": "Value of the expression.",
                "type": "object"
              },
              "targetValue": {
                "description": "Target value to be compared with the expression value.",
                "type": "object"
              },
              "operator": {
                "description": "Operator to compare the expression value and the target value.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "ifNotExistsDetails": {
          "description": "Evaluation details of IfNotExists effect.",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "ID of the last evaluated resource for IfNotExists effect.",
              "type": "string"
            },
            "totalResources": {
              "description": "Total number of resources to which the existence condition is applicable.",
              "type": "integer"
            }
          }
        }
      }
    },
    "ComponentStateDetails": {
      "type": "object",
      "description": "Component state details.",
      "properties": {
        "id": {
          "description": "Component Id.",
          "type": "string"
        },
        "type": {
          "description": "Component type.",
          "type": "string"
        },
        "name": {
          "description": "Component name.",
          "type": "string"
        },
        "timestamp": {
          "description": "Component compliance evaluation timestamp.",
          "type": "string",
          "format": "date-time"
        },
        "complianceState": {
          "description": "Component compliance state.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "ExpressionEvaluationDetails": {
      "type": "object",
      "description": "Evaluation details of policy language expressions.",
      "properties": {
        "result": {
          "description": "Evaluation result.",
          "type": "string"
        },
        "expression": {
          "description": "Expression evaluated.",
          "type": "string"
        },
        "expressionKind": {
          "description": "The kind of expression that was evaluated.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "Property path if the expression is a field or an alias.",
          "type": "string"
        },
        "expressionValue": {
          "description": "Value of the expression.",
          "type": "object"
        },
        "targetValue": {
          "description": "Target value to be compared with the expression value.",
          "type": "object"
        },
        "operator": {
          "description": "Operator to compare the expression value and the target value.",
          "type": "string"
        }
      }
    },
    "IfNotExistsEvaluationDetails": {
      "type": "object",
      "description": "Evaluation details of IfNotExists effect.",
      "properties": {
        "resourceId": {
          "description": "ID of the last evaluated resource for IfNotExists effect.",
          "type": "string"
        },
        "totalResources": {
          "description": "Total number of resources to which the existence condition is applicable.",
          "type": "integer"
        }
      }
    },
    "SummarizeResults": {
      "description": "Summarize action results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of summaries returned; always set to 1.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1
        },
        "value": {
          "description": "Summarize action results.",
          "type": "array",
          "items": {
            "description": "Summary results.",
            "properties": {
              "@odata.id": {
                "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
                "type": "string"
              },
              "@odata.context": {
                "description": "OData context string; used by OData clients to resolve type information based on metadata.",
                "type": "string"
              },
              "results": {
                "description": "Compliance summary for all policy assignments.",
                "properties": {
                  "queryResultsUri": {
                    "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                    "type": "string"
                  },
                  "nonCompliantResources": {
                    "description": "Number of non-compliant resources.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "nonCompliantPolicies": {
                    "description": "Number of non-compliant policies.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "resourceDetails": {
                    "description": "The resources summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyDetails": {
                    "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyGroupDetails": {
                    "description": "The policy definition group summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "policyAssignments": {
                "description": "Policy assignments summary.",
                "type": "array",
                "items": {
                  "description": "Policy assignment summary.",
                  "properties": {
                    "policyAssignmentId": {
                      "description": "Policy assignment ID.",
                      "type": "string"
                    },
                    "policySetDefinitionId": {
                      "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                      "type": "string"
                    },
                    "results": {
                      "description": "Compliance summary for the policy assignment.",
                      "properties": {
                        "queryResultsUri": {
                          "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                          "type": "string"
                        },
                        "nonCompliantResources": {
                          "description": "Number of non-compliant resources.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "nonCompliantPolicies": {
                          "description": "Number of non-compliant policies.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "resourceDetails": {
                          "description": "The resources summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyDetails": {
                          "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyGroupDetails": {
                          "description": "The policy definition group summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "policyDefinitions": {
                      "description": "Policy definitions summary.",
                      "type": "array",
                      "items": {
                        "description": "Policy definition summary.",
                        "properties": {
                          "policyDefinitionId": {
                            "description": "Policy definition ID.",
                            "type": "string"
                          },
                          "policyDefinitionReferenceId": {
                            "description": "Policy definition reference ID.",
                            "type": "string"
                          },
                          "policyDefinitionGroupNames": {
                            "description": "Policy definition group names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "effect": {
                            "description": "Policy effect, i.e. policy definition action.",
                            "type": "string"
                          },
                          "results": {
                            "description": "Compliance summary for the policy definition.",
                            "properties": {
                              "queryResultsUri": {
                                "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                "type": "string"
                              },
                              "nonCompliantResources": {
                                "description": "Number of non-compliant resources.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              },
                              "nonCompliantPolicies": {
                                "description": "Number of non-compliant policies.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              },
                              "resourceDetails": {
                                "description": "The resources summary at this level.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "policyDetails": {
                                "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "policyGroupDetails": {
                                "description": "The policy definition group summary at this level.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "policyDefinitionId"
                      ]
                    },
                    "policyGroups": {
                      "description": "Policy definition group summary.",
                      "type": "array",
                      "items": {
                        "description": "Policy definition group summary.",
                        "properties": {
                          "policyGroupName": {
                            "description": "Policy group name.",
                            "type": "string"
                          },
                          "results": {
                            "description": "Compliance summary for the policy definition group.",
                            "properties": {
                              "queryResultsUri": {
                                "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                                "type": "string"
                              },
                              "nonCompliantResources": {
                                "description": "Number of non-compliant resources.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              },
                              "nonCompliantPolicies": {
                                "description": "Number of non-compliant policies.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              },
                              "resourceDetails": {
                                "description": "The resources summary at this level.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "policyDetails": {
                                "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "policyGroupDetails": {
                                "description": "The policy definition group summary at this level.",
                                "type": "array",
                                "items": {
                                  "description": "The compliance state rollup.",
                                  "properties": {
                                    "complianceState": {
                                      "description": "The compliance state.",
                                      "type": "string"
                                    },
                                    "count": {
                                      "description": "Summarized count value for this compliance state.",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "policyGroupName"
                      ]
                    }
                  }
                },
                "x-ms-identifiers": [
                  "policyAssignmentId"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Summary": {
      "description": "Summary results.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
          "type": "string"
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for all policy assignments.",
          "properties": {
            "queryResultsUri": {
              "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
              "type": "string"
            },
            "nonCompliantResources": {
              "description": "Number of non-compliant resources.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "nonCompliantPolicies": {
              "description": "Number of non-compliant policies.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "resourceDetails": {
              "description": "The resources summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyDetails": {
              "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyGroupDetails": {
              "description": "The policy definition group summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "policyAssignments": {
          "description": "Policy assignments summary.",
          "type": "array",
          "items": {
            "description": "Policy assignment summary.",
            "properties": {
              "policyAssignmentId": {
                "description": "Policy assignment ID.",
                "type": "string"
              },
              "policySetDefinitionId": {
                "description": "Policy set definition ID, if the policy assignment is for a policy set.",
                "type": "string"
              },
              "results": {
                "description": "Compliance summary for the policy assignment.",
                "properties": {
                  "queryResultsUri": {
                    "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                    "type": "string"
                  },
                  "nonCompliantResources": {
                    "description": "Number of non-compliant resources.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "nonCompliantPolicies": {
                    "description": "Number of non-compliant policies.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "resourceDetails": {
                    "description": "The resources summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyDetails": {
                    "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyGroupDetails": {
                    "description": "The policy definition group summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "policyDefinitions": {
                "description": "Policy definitions summary.",
                "type": "array",
                "items": {
                  "description": "Policy definition summary.",
                  "properties": {
                    "policyDefinitionId": {
                      "description": "Policy definition ID.",
                      "type": "string"
                    },
                    "policyDefinitionReferenceId": {
                      "description": "Policy definition reference ID.",
                      "type": "string"
                    },
                    "policyDefinitionGroupNames": {
                      "description": "Policy definition group names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "effect": {
                      "description": "Policy effect, i.e. policy definition action.",
                      "type": "string"
                    },
                    "results": {
                      "description": "Compliance summary for the policy definition.",
                      "properties": {
                        "queryResultsUri": {
                          "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                          "type": "string"
                        },
                        "nonCompliantResources": {
                          "description": "Number of non-compliant resources.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "nonCompliantPolicies": {
                          "description": "Number of non-compliant policies.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "resourceDetails": {
                          "description": "The resources summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyDetails": {
                          "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyGroupDetails": {
                          "description": "The policy definition group summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "policyDefinitionId"
                ]
              },
              "policyGroups": {
                "description": "Policy definition group summary.",
                "type": "array",
                "items": {
                  "description": "Policy definition group summary.",
                  "properties": {
                    "policyGroupName": {
                      "description": "Policy group name.",
                      "type": "string"
                    },
                    "results": {
                      "description": "Compliance summary for the policy definition group.",
                      "properties": {
                        "queryResultsUri": {
                          "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                          "type": "string"
                        },
                        "nonCompliantResources": {
                          "description": "Number of non-compliant resources.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "nonCompliantPolicies": {
                          "description": "Number of non-compliant policies.",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "resourceDetails": {
                          "description": "The resources summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyDetails": {
                          "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "policyGroupDetails": {
                          "description": "The policy definition group summary at this level.",
                          "type": "array",
                          "items": {
                            "description": "The compliance state rollup.",
                            "properties": {
                              "complianceState": {
                                "description": "The compliance state.",
                                "type": "string"
                              },
                              "count": {
                                "description": "Summarized count value for this compliance state.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "policyGroupName"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "policyAssignmentId"
          ]
        }
      }
    },
    "SummaryResults": {
      "description": "Compliance summary on a particular summary level.",
      "properties": {
        "queryResultsUri": {
          "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
          "type": "string"
        },
        "nonCompliantResources": {
          "description": "Number of non-compliant resources.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "nonCompliantPolicies": {
          "description": "Number of non-compliant policies.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "resourceDetails": {
          "description": "The resources summary at this level.",
          "type": "array",
          "items": {
            "description": "The compliance state rollup.",
            "properties": {
              "complianceState": {
                "description": "The compliance state.",
                "type": "string"
              },
              "count": {
                "description": "Summarized count value for this compliance state.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "policyDetails": {
          "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
          "type": "array",
          "items": {
            "description": "The compliance state rollup.",
            "properties": {
              "complianceState": {
                "description": "The compliance state.",
                "type": "string"
              },
              "count": {
                "description": "Summarized count value for this compliance state.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "policyGroupDetails": {
          "description": "The policy definition group summary at this level.",
          "type": "array",
          "items": {
            "description": "The compliance state rollup.",
            "properties": {
              "complianceState": {
                "description": "The compliance state.",
                "type": "string"
              },
              "count": {
                "description": "Summarized count value for this compliance state.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ComplianceDetail": {
      "description": "The compliance state rollup.",
      "properties": {
        "complianceState": {
          "description": "The compliance state.",
          "type": "string"
        },
        "count": {
          "description": "Summarized count value for this compliance state.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PolicyAssignmentSummary": {
      "description": "Policy assignment summary.",
      "properties": {
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string"
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy assignment.",
          "properties": {
            "queryResultsUri": {
              "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
              "type": "string"
            },
            "nonCompliantResources": {
              "description": "Number of non-compliant resources.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "nonCompliantPolicies": {
              "description": "Number of non-compliant policies.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "resourceDetails": {
              "description": "The resources summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyDetails": {
              "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyGroupDetails": {
              "description": "The policy definition group summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "policyDefinitions": {
          "description": "Policy definitions summary.",
          "type": "array",
          "items": {
            "description": "Policy definition summary.",
            "properties": {
              "policyDefinitionId": {
                "description": "Policy definition ID.",
                "type": "string"
              },
              "policyDefinitionReferenceId": {
                "description": "Policy definition reference ID.",
                "type": "string"
              },
              "policyDefinitionGroupNames": {
                "description": "Policy definition group names.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "effect": {
                "description": "Policy effect, i.e. policy definition action.",
                "type": "string"
              },
              "results": {
                "description": "Compliance summary for the policy definition.",
                "properties": {
                  "queryResultsUri": {
                    "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                    "type": "string"
                  },
                  "nonCompliantResources": {
                    "description": "Number of non-compliant resources.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "nonCompliantPolicies": {
                    "description": "Number of non-compliant policies.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "resourceDetails": {
                    "description": "The resources summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyDetails": {
                    "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyGroupDetails": {
                    "description": "The policy definition group summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "policyDefinitionId"
          ]
        },
        "policyGroups": {
          "description": "Policy definition group summary.",
          "type": "array",
          "items": {
            "description": "Policy definition group summary.",
            "properties": {
              "policyGroupName": {
                "description": "Policy group name.",
                "type": "string"
              },
              "results": {
                "description": "Compliance summary for the policy definition group.",
                "properties": {
                  "queryResultsUri": {
                    "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
                    "type": "string"
                  },
                  "nonCompliantResources": {
                    "description": "Number of non-compliant resources.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "nonCompliantPolicies": {
                    "description": "Number of non-compliant policies.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "resourceDetails": {
                    "description": "The resources summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyDetails": {
                    "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policyGroupDetails": {
                    "description": "The policy definition group summary at this level.",
                    "type": "array",
                    "items": {
                      "description": "The compliance state rollup.",
                      "properties": {
                        "complianceState": {
                          "description": "The compliance state.",
                          "type": "string"
                        },
                        "count": {
                          "description": "Summarized count value for this compliance state.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "policyGroupName"
          ]
        }
      }
    },
    "PolicyDefinitionSummary": {
      "description": "Policy definition summary.",
      "properties": {
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string"
        },
        "policyDefinitionReferenceId": {
          "description": "Policy definition reference ID.",
          "type": "string"
        },
        "policyDefinitionGroupNames": {
          "description": "Policy definition group names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "effect": {
          "description": "Policy effect, i.e. policy definition action.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy definition.",
          "properties": {
            "queryResultsUri": {
              "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
              "type": "string"
            },
            "nonCompliantResources": {
              "description": "Number of non-compliant resources.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "nonCompliantPolicies": {
              "description": "Number of non-compliant policies.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "resourceDetails": {
              "description": "The resources summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyDetails": {
              "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyGroupDetails": {
              "description": "The policy definition group summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "PolicyGroupSummary": {
      "description": "Policy definition group summary.",
      "properties": {
        "policyGroupName": {
          "description": "Policy group name.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy definition group.",
          "properties": {
            "queryResultsUri": {
              "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
              "type": "string"
            },
            "nonCompliantResources": {
              "description": "Number of non-compliant resources.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "nonCompliantPolicies": {
              "description": "Number of non-compliant policies.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "resourceDetails": {
              "description": "The resources summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyDetails": {
              "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policyGroupDetails": {
              "description": "The policy definition group summary at this level.",
              "type": "array",
              "items": {
                "description": "The compliance state rollup.",
                "properties": {
                  "complianceState": {
                    "description": "The compliance state.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Summarized count value for this compliance state.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "RemediationListResult": {
      "description": "List of remediations.",
      "properties": {
        "value": {
          "description": "Array of remediation definitions.",
          "type": "array",
          "items": {
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties for the remediation.",
                "properties": {
                  "policyAssignmentId": {
                    "type": "string",
                    "description": "The resource ID of the policy assignment that should be remediated."
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
                  },
                  "resourceDiscoveryMode": {
                    "type": "string",
                    "enum": [
                      "ExistingNonCompliant",
                      "ReEvaluateCompliance"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceDiscoveryMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "ExistingNonCompliant",
                          "description": "Remediate resources that are already known to be non-compliant."
                        },
                        {
                          "value": "ReEvaluateCompliance",
                          "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                        }
                      ]
                    },
                    "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
                    "readOnly": true
                  },
                  "createdOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the remediation was created.",
                    "readOnly": true
                  },
                  "lastUpdatedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the remediation was last updated.",
                    "readOnly": true
                  },
                  "filters": {
                    "description": "The filters that will be applied to determine which resources to remediate.",
                    "properties": {
                      "locations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The resource locations that will be remediated."
                      },
                      "resourceIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                      }
                    }
                  },
                  "deploymentStatus": {
                    "description": "The deployment status summary for all deployments created by the remediation.",
                    "readOnly": true,
                    "properties": {
                      "totalDeployments": {
                        "type": "integer",
                        "description": "The number of deployments required by the remediation.",
                        "readOnly": true
                      },
                      "successfulDeployments": {
                        "type": "integer",
                        "description": "The number of deployments required by the remediation that have succeeded.",
                        "readOnly": true
                      },
                      "failedDeployments": {
                        "type": "integer",
                        "description": "The number of deployments required by the remediation that have failed.",
                        "readOnly": true
                      }
                    }
                  },
                  "statusMessage": {
                    "type": "string",
                    "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
                    "readOnly": true
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
                    "readOnly": true
                  },
                  "resourceCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
                  },
                  "parallelDeployments": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
                  },
                  "failureThreshold": {
                    "type": "object",
                    "properties": {
                      "percentage": {
                        "type": "number",
                        "format": "float",
                        "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                      }
                    },
                    "description": "The remediation failure threshold settings"
                  }
                }
              },
              "id": {
                "type": "string",
                "description": "The ID of the remediation.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the remediation.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the remediation.",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "The remediation definition.",
            "x-ms-azure-resource": true
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      }
    },
    "RemediationDeploymentsListResult": {
      "description": "List of deployments for a remediation.",
      "properties": {
        "value": {
          "description": "Array of deployments for the remediation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemediationDeployment"
          },
          "x-ms-identifiers": [
            "remediatedResourceId"
          ],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      }
    },
    "RemediationDeployment": {
      "description": "Details of a single deployment created by the remediation.",
      "properties": {
        "remediatedResourceId": {
          "type": "string",
          "description": "Resource ID of the resource that is being remediated by the deployment.",
          "readOnly": true
        },
        "deploymentId": {
          "type": "string",
          "description": "Resource ID of the template deployment that will remediate the resource.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the remediation deployment.",
          "readOnly": true
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of the resource that is being remediated.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "Error encountered while remediated the resource.",
          "readOnly": true
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the remediation was created.",
          "readOnly": true
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the remediation deployment was last updated.",
          "readOnly": true
        }
      }
    },
    "Remediation": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties for the remediation.",
          "properties": {
            "policyAssignmentId": {
              "type": "string",
              "description": "The resource ID of the policy assignment that should be remediated."
            },
            "policyDefinitionReferenceId": {
              "type": "string",
              "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
            },
            "resourceDiscoveryMode": {
              "type": "string",
              "enum": [
                "ExistingNonCompliant",
                "ReEvaluateCompliance"
              ],
              "x-ms-enum": {
                "name": "ResourceDiscoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ExistingNonCompliant",
                    "description": "Remediate resources that are already known to be non-compliant."
                  },
                  {
                    "value": "ReEvaluateCompliance",
                    "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
                  }
                ]
              },
              "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
            },
            "provisioningState": {
              "type": "string",
              "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
              "readOnly": true
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the remediation was created.",
              "readOnly": true
            },
            "lastUpdatedOn": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the remediation was last updated.",
              "readOnly": true
            },
            "filters": {
              "description": "The filters that will be applied to determine which resources to remediate.",
              "properties": {
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The resource locations that will be remediated."
                },
                "resourceIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
                }
              }
            },
            "deploymentStatus": {
              "description": "The deployment status summary for all deployments created by the remediation.",
              "readOnly": true,
              "properties": {
                "totalDeployments": {
                  "type": "integer",
                  "description": "The number of deployments required by the remediation.",
                  "readOnly": true
                },
                "successfulDeployments": {
                  "type": "integer",
                  "description": "The number of deployments required by the remediation that have succeeded.",
                  "readOnly": true
                },
                "failedDeployments": {
                  "type": "integer",
                  "description": "The number of deployments required by the remediation that have failed.",
                  "readOnly": true
                }
              }
            },
            "statusMessage": {
              "type": "string",
              "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
              "readOnly": true
            },
            "correlationId": {
              "type": "string",
              "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
              "readOnly": true
            },
            "resourceCount": {
              "type": "integer",
              "format": "int32",
              "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
            },
            "parallelDeployments": {
              "type": "integer",
              "format": "int32",
              "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
            },
            "failureThreshold": {
              "type": "object",
              "properties": {
                "percentage": {
                  "type": "number",
                  "format": "float",
                  "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
                }
              },
              "description": "The remediation failure threshold settings"
            }
          }
        },
        "id": {
          "type": "string",
          "description": "The ID of the remediation.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the remediation.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the remediation.",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "The remediation definition.",
      "x-ms-azure-resource": true
    },
    "RemediationProperties": {
      "properties": {
        "policyAssignmentId": {
          "type": "string",
          "description": "The resource ID of the policy assignment that should be remediated."
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
        },
        "resourceDiscoveryMode": {
          "type": "string",
          "enum": [
            "ExistingNonCompliant",
            "ReEvaluateCompliance"
          ],
          "x-ms-enum": {
            "name": "ResourceDiscoveryMode",
            "modelAsString": true,
            "values": [
              {
                "value": "ExistingNonCompliant",
                "description": "Remediate resources that are already known to be non-compliant."
              },
              {
                "value": "ReEvaluateCompliance",
                "description": "Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode."
              }
            ]
          },
          "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified."
        },
        "provisioningState": {
          "type": "string",
          "description": "The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
          "readOnly": true
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the remediation was created.",
          "readOnly": true
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the remediation was last updated.",
          "readOnly": true
        },
        "filters": {
          "description": "The filters that will be applied to determine which resources to remediate.",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The resource locations that will be remediated."
            },
            "resourceIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
            }
          }
        },
        "deploymentStatus": {
          "description": "The deployment status summary for all deployments created by the remediation.",
          "readOnly": true,
          "properties": {
            "totalDeployments": {
              "type": "integer",
              "description": "The number of deployments required by the remediation.",
              "readOnly": true
            },
            "successfulDeployments": {
              "type": "integer",
              "description": "The number of deployments required by the remediation that have succeeded.",
              "readOnly": true
            },
            "failedDeployments": {
              "type": "integer",
              "description": "The number of deployments required by the remediation that have failed.",
              "readOnly": true
            }
          }
        },
        "statusMessage": {
          "type": "string",
          "description": "The remediation status message. Provides additional details regarding the state of the remediation.",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "description": "The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
          "readOnly": true
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used."
        },
        "parallelDeployments": {
          "type": "integer",
          "format": "int32",
          "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used."
        },
        "failureThreshold": {
          "type": "object",
          "properties": {
            "percentage": {
              "type": "number",
              "format": "float",
              "description": "A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold."
            }
          },
          "description": "The remediation failure threshold settings"
        }
      },
      "description": "The remediation properties."
    },
    "RemediationFilters": {
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The resource locations that will be remediated."
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided."
        }
      },
      "description": "The filters that will be applied to determine which resources to remediate."
    },
    "RemediationDeploymentSummary": {
      "properties": {
        "totalDeployments": {
          "type": "integer",
          "description": "The number of deployments required by the remediation.",
          "readOnly": true
        },
        "successfulDeployments": {
          "type": "integer",
          "description": "The number of deployments required by the remediation that have succeeded.",
          "readOnly": true
        },
        "failedDeployments": {
          "type": "integer",
          "description": "The number of deployments required by the remediation that have failed.",
          "readOnly": true
        }
      },
      "description": "The deployment status summary for all deployments created by the remediation."
    }
  },
  "parameters": {
    "attestationNameParameter": {
      "name": "attestationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the attestation.",
      "x-ms-parameter-location": "method"
    },
    "resourceIdParameter": {
      "name": "resourceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource ID.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "topParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "description": "Maximum number of records to return.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Top"
    },
    "filterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData filter expression.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Filter"
    },
    "managementGroupsNamespaceParameter": {
      "name": "managementGroupsNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.Management"
      ],
      "x-ms-enum": {
        "name": "ManagementGroupsNamespaceType",
        "modelAsString": false
      },
      "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "managementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Management group ID.",
      "x-ms-parameter-location": "method"
    },
    "componentPolicyStatesResource": {
      "name": "componentPolicyStatesResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "latest"
      ],
      "x-ms-enum": {
        "name": "ComponentPolicyStatesResource",
        "modelAsString": true
      },
      "description": "The virtual resource under ComponentPolicyStates resource type. In a given time range, 'latest' represents the latest component policy state(s).",
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Microsoft Azure subscription ID.",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource group name.",
      "x-ms-parameter-location": "method"
    },
    "resourceId": {
      "name": "resourceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource ID.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "authorizationNamespace": {
      "name": "authorizationNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.Authorization"
      ],
      "x-ms-enum": {
        "name": "AuthorizationNamespaceType",
        "modelAsString": false
      },
      "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "policyDefinitionName": {
      "name": "policyDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy definition name.",
      "pattern": "^[^<>%&:\\\\?/#]*$",
      "minLength": 1,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "policyAssignmentName": {
      "name": "policyAssignmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy assignment name.",
      "pattern": "^[^<>%&:\\\\?/#]*$",
      "minLength": 1,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "apiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "top": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "description": "Maximum number of records to return.",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "Top"
    },
    "orderBy": {
      "name": "$orderby",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "OrderBy"
    },
    "select": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "Select"
    },
    "from": {
      "name": "$from",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "From"
    },
    "to": {
      "name": "$to",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "To"
    },
    "filter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData filter expression.",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "Filter"
    },
    "apply": {
      "name": "$apply",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData apply expression for aggregations.",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "Apply"
    },
    "componentPolicyStatesExpand": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The $expand query parameter.",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "Expand"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "policyEventsResourceParameter": {
      "name": "policyEventsResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "default"
      ],
      "x-ms-enum": {
        "name": "PolicyEventsResourceType",
        "modelAsString": true
      },
      "description": "The name of the virtual resource under PolicyEvents resource type; only \"default\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "managementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Management group name.",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Microsoft Azure subscription ID."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource group name.",
      "x-ms-parameter-location": "method"
    },
    "authorizationNamespaceParameter": {
      "name": "authorizationNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.Authorization"
      ],
      "x-ms-enum": {
        "name": "AuthorizationNamespaceType",
        "modelAsString": false
      },
      "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "policySetDefinitionNameParameter": {
      "name": "policySetDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy set definition name.",
      "x-ms-parameter-location": "method"
    },
    "policyDefinitionNameParameter": {
      "name": "policyDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy definition name.",
      "x-ms-parameter-location": "method"
    },
    "policyAssignmentNameParameter": {
      "name": "policyAssignmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy assignment name.",
      "x-ms-parameter-location": "method"
    },
    "scopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A valid scope, i.e. management group, subscription, resource group, or resource ID. Scope used has no effect on metadata returned.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "orderByParameter": {
      "name": "$orderby",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "OrderBy"
    },
    "selectParameter": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Select"
    },
    "fromParameter": {
      "name": "$from",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "From"
    },
    "toParameter": {
      "name": "$to",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "To"
    },
    "applyParameter": {
      "name": "$apply",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData apply expression for aggregations.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Apply"
    },
    "expandParameter": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The $expand query parameter. For example, to expand components use $expand=components",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Expand"
    },
    "skipTokenParameter": {
      "name": "$skiptoken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "SkipToken"
    },
    "resourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the policy metadata resource.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "policyStatesResourceParameter": {
      "name": "policyStatesResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "default",
        "latest"
      ],
      "x-ms-enum": {
        "name": "PolicyStatesResource",
        "modelAsString": true
      },
      "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
      "x-ms-parameter-location": "method"
    },
    "policyStatesSummaryResourceParameter": {
      "name": "policyStatesSummaryResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "latest"
      ],
      "x-ms-enum": {
        "name": "PolicyStatesSummaryResourceType",
        "modelAsString": true
      },
      "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
      "x-ms-parameter-location": "method"
    },
    "remediationNameParameter": {
      "name": "remediationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the remediation.",
      "x-ms-parameter-location": "method"
    }
  }
}