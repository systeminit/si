{
  "swagger": "2.0",
  "info": {
    "title": "Azure recoveryservices",
    "version": "2025-08-01",
    "description": "Azure recoveryservices service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.RecoveryServices/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operations List response which contains list of available APIs.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of available operations.",
                  "items": {
                    "type": "object",
                    "description": "Available operation details.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Operation."
                      },
                      "display": {
                        "description": "Contains the localized display information for this particular operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "Name of the provider for display purposes"
                          },
                          "resource": {
                            "type": "string",
                            "description": "ResourceType for which this Operation can be performed."
                          },
                          "operation": {
                            "type": "string",
                            "description": "Operations Name itself."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the operation having details of what operation is about."
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX"
                      },
                      "properties": {
                        "description": "ShoeBox properties for the given operation.",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Operation properties.",
                            "type": "object",
                            "properties": {
                              "logSpecifications": {
                                "type": "array",
                                "description": "List of log specifications of this operation.",
                                "items": {
                                  "type": "object",
                                  "description": "Class to represent shoebox log specification in json client discovery.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name for shoebox log specification."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Localized display name"
                                    },
                                    "blobDuration": {
                                      "type": "string",
                                      "description": "blob duration of shoebox log specification"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next chunk of Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/capabilities": {
      "post": {
        "operationId": "RecoveryServices_Capabilities",
        "summary": "API to get details about capabilities provided by Microsoft.RecoveryServices RP",
        "description": "API to get details about capabilities provided by Microsoft.RecoveryServices RP",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Input to get capabilities information for Microsoft.RecoveryServices",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
                },
                "properties": {
                  "description": "Capabilities information",
                  "type": "object",
                  "properties": {
                    "dnsZones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "DNSZone information",
                        "properties": {
                          "subResource": {
                            "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                            "type": "string",
                            "enum": [
                              "AzureBackup",
                              "AzureBackup_secondary",
                              "AzureSiteRecovery"
                            ],
                            "x-ms-enum": {
                              "name": "VaultSubResourceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AzureBackup",
                                  "value": "AzureBackup"
                                },
                                {
                                  "name": "AzureBackup_secondary",
                                  "value": "AzureBackup_secondary"
                                },
                                {
                                  "name": "AzureSiteRecovery",
                                  "value": "AzureSiteRecovery"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Capabilities response for Microsoft.RecoveryServices",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
                },
                "properties": {
                  "description": "Capabilities properties in response",
                  "type": "object",
                  "properties": {
                    "dnsZones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "DNSZone information for Microsoft.RecoveryServices",
                        "properties": {
                          "subResource": {
                            "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                            "type": "string",
                            "enum": [
                              "AzureBackup",
                              "AzureBackup_secondary",
                              "AzureSiteRecovery"
                            ],
                            "x-ms-enum": {
                              "name": "VaultSubResourceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AzureBackup",
                                  "value": "AzureBackup"
                                },
                                {
                                  "name": "AzureBackup_secondary",
                                  "value": "AzureBackup_secondary"
                                },
                                {
                                  "name": "AzureSiteRecovery",
                                  "value": "AzureSiteRecovery"
                                }
                              ]
                            }
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource Private link DNS zone names.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/deletedVaults": {
      "get": {
        "operationId": "DeletedVaults_ListBySubscriptionId",
        "tags": [
          "DeletedVaults"
        ],
        "description": "List deleted vaults in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response model for a list of DeletedVaults.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DeletedVault items on this page",
                  "items": {
                    "type": "object",
                    "description": "DeletedVault information as returned by the resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "vaultId": {
                            "type": "string",
                            "description": "ARM Id of the Vault which was deleted.",
                            "readOnly": true
                          },
                          "vaultDeletionTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time in UTC at which the Vault was deleted.",
                            "readOnly": true
                          },
                          "purgeAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time in UTC at which the DeletedVault will be purged.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/deletedVaults/{deletedVaultName}": {
      "get": {
        "operationId": "DeletedVaults_Get",
        "tags": [
          "DeletedVaults"
        ],
        "description": "Get a specific deleted vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deletedVaultName",
            "in": "path",
            "description": "The name of the DeletedVault",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "DeletedVault information as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "vaultId": {
                      "type": "string",
                      "description": "ARM Id of the Vault which was deleted.",
                      "readOnly": true
                    },
                    "vaultDeletionTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time in UTC at which the Vault was deleted.",
                      "readOnly": true
                    },
                    "purgeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time in UTC at which the DeletedVault will be purged.",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/deletedVaults/{deletedVaultName}/operations/{operationId}": {
      "get": {
        "operationId": "DeletedVaults_GetOperationStatus",
        "tags": [
          "DeletedVaults"
        ],
        "description": "Get the operation status of a deleted vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deletedVaultName",
            "in": "path",
            "description": "The name of deleted vault.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/deletedVaults/{deletedVaultName}/undelete": {
      "post": {
        "operationId": "DeletedVaults_Undelete",
        "tags": [
          "DeletedVaults"
        ],
        "description": "Start undelete of a deleted vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deletedVaultName",
            "in": "path",
            "description": "The name of the DeletedVault",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Input definition for DeletedVault undelete.",
              "properties": {
                "properties": {
                  "description": "Undelete input properties.",
                  "type": "object",
                  "properties": {
                    "recoveryResourceGroupId": {
                      "type": "string",
                      "description": "Recovery resource group Id."
                    }
                  },
                  "required": [
                    "recoveryResourceGroupId"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "DeletedVault information as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "vaultId": {
                      "type": "string",
                      "description": "ARM Id of the Vault which was deleted.",
                      "readOnly": true
                    },
                    "vaultDeletionTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time in UTC at which the Vault was deleted.",
                      "readOnly": true
                    },
                    "purgeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time in UTC at which the DeletedVault will be purged.",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/vaults": {
      "get": {
        "operationId": "Vaults_ListBySubscriptionId",
        "tags": [
          "Vaults"
        ],
        "description": "Fetches all the resources of the specified type in the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response model for a list of Vaults.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Vault items on this page",
                  "items": {
                    "type": "object",
                    "description": "Resource information, as returned by the resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of the vault.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning State.",
                            "readOnly": true
                          },
                          "upgradeDetails": {
                            "description": "Details for upgrading vault.",
                            "type": "object",
                            "properties": {
                              "operationId": {
                                "type": "string",
                                "description": "ID of the vault upgrade operation.",
                                "readOnly": true
                              },
                              "startTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation has started.",
                                "readOnly": true
                              },
                              "lastUpdatedTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation status was last updated.",
                                "readOnly": true
                              },
                              "endTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation has ended.",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the vault upgrade operation.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unknown",
                                  "InProgress",
                                  "Upgraded",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "VaultUpgradeState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unknown",
                                      "value": "Unknown"
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Upgraded",
                                      "value": "Upgraded"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Message to the user containing information about the upgrade operation.",
                                "readOnly": true
                              },
                              "triggerType": {
                                "description": "The way the vault upgrade was triggered.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "UserTriggered",
                                  "ForcedUpgrade"
                                ],
                                "x-ms-enum": {
                                  "name": "TriggerType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "UserTriggered",
                                      "value": "UserTriggered"
                                    },
                                    {
                                      "name": "ForcedUpgrade",
                                      "value": "ForcedUpgrade"
                                    }
                                  ]
                                }
                              },
                              "upgradedResourceId": {
                                "type": "string",
                                "description": "Resource ID of the upgraded vault.",
                                "readOnly": true
                              },
                              "previousResourceId": {
                                "type": "string",
                                "description": "Resource ID of the vault before the upgrade.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connection.",
                            "items": {
                              "type": "object",
                              "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Private Endpoint Connection Response Properties.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "provisioningState": {
                                      "description": "Gets or sets provisioning state of the private endpoint connection.",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Deleting",
                                        "Failed",
                                        "Pending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProvisioningState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Succeeded",
                                            "value": "Succeeded"
                                          },
                                          {
                                            "name": "Deleting",
                                            "value": "Deleting"
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed"
                                          },
                                          {
                                            "name": "Pending",
                                            "value": "Pending"
                                          }
                                        ]
                                      }
                                    },
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Gets or sets id.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Gets or sets private link service connection state.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Gets or sets the status.",
                                          "readOnly": true,
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointConnectionStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Pending",
                                                "value": "Pending"
                                              },
                                              {
                                                "name": "Approved",
                                                "value": "Approved"
                                              },
                                              {
                                                "name": "Rejected",
                                                "value": "Rejected"
                                              },
                                              {
                                                "name": "Disconnected",
                                                "value": "Disconnected"
                                              }
                                            ]
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Gets or sets description.",
                                          "readOnly": true
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Gets or sets actions required.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "type": "array",
                                      "description": "Group Ids for the Private Endpoint",
                                      "items": {
                                        "type": "string",
                                        "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                        "enum": [
                                          "AzureBackup",
                                          "AzureBackup_secondary",
                                          "AzureSiteRecovery"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VaultSubResourceType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "AzureBackup",
                                              "value": "AzureBackup"
                                            },
                                            {
                                              "name": "AzureBackup_secondary",
                                              "value": "AzureBackup_secondary"
                                            },
                                            {
                                              "name": "AzureSiteRecovery",
                                              "value": "AzureSiteRecovery"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the private Endpoint Connection",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the private Endpoint connection",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "privateEndpointStateForBackup": {
                            "description": "Private endpoint state for backup.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "VaultPrivateEndpointState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "privateEndpointStateForSiteRecovery": {
                            "description": "Private endpoint state for site recovery.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "VaultPrivateEndpointState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Customer Managed Key details of the resource.",
                            "type": "object",
                            "properties": {
                              "keyVaultProperties": {
                                "description": "The properties of the Key Vault which hosts CMK",
                                "type": "object",
                                "properties": {
                                  "keyUri": {
                                    "type": "string",
                                    "description": "The key uri of the Customer Managed Key"
                                  }
                                }
                              },
                              "kekIdentity": {
                                "description": "The details of the identity used for CMK",
                                "type": "object",
                                "properties": {
                                  "useSystemAssignedIdentity": {
                                    "type": "boolean",
                                    "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                                  }
                                }
                              },
                              "infrastructureEncryption": {
                                "description": "Enabling/Disabling the Double Encryption state",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "InfrastructureEncryptionState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "moveDetails": {
                            "description": "The details of the latest move operation performed on the Azure Resource",
                            "type": "object",
                            "properties": {
                              "operationId": {
                                "type": "string",
                                "description": "OperationId of the Resource Move Operation",
                                "readOnly": true
                              },
                              "startTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start Time of the Resource Move Operation",
                                "readOnly": true
                              },
                              "completionTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End Time of the Resource Move Operation",
                                "readOnly": true
                              },
                              "sourceResourceId": {
                                "type": "string",
                                "description": "Source Resource of the Resource Move Operation",
                                "readOnly": true
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "Target Resource of the Resource Move Operation",
                                "readOnly": true
                              }
                            }
                          },
                          "moveState": {
                            "description": "The State of the Resource after the move operation",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "InProgress",
                              "PrepareFailed",
                              "CommitFailed",
                              "PrepareTimedout",
                              "CommitTimedout",
                              "MoveSucceeded",
                              "Failure",
                              "CriticalFailure",
                              "PartialSuccess"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceMoveState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown"
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress"
                                },
                                {
                                  "name": "PrepareFailed",
                                  "value": "PrepareFailed"
                                },
                                {
                                  "name": "CommitFailed",
                                  "value": "CommitFailed"
                                },
                                {
                                  "name": "PrepareTimedout",
                                  "value": "PrepareTimedout"
                                },
                                {
                                  "name": "CommitTimedout",
                                  "value": "CommitTimedout"
                                },
                                {
                                  "name": "MoveSucceeded",
                                  "value": "MoveSucceeded"
                                },
                                {
                                  "name": "Failure",
                                  "value": "Failure"
                                },
                                {
                                  "name": "CriticalFailure",
                                  "value": "CriticalFailure"
                                },
                                {
                                  "name": "PartialSuccess",
                                  "value": "PartialSuccess"
                                }
                              ]
                            }
                          },
                          "backupStorageVersion": {
                            "description": "Backup storage version",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "V1",
                              "V2",
                              "Unassigned"
                            ],
                            "x-ms-enum": {
                              "name": "BackupStorageVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "V1",
                                  "value": "V1"
                                },
                                {
                                  "name": "V2",
                                  "value": "V2"
                                },
                                {
                                  "name": "Unassigned",
                                  "value": "Unassigned"
                                }
                              ]
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "property to enable or disable resource provider inbound network traffic from public clients",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "monitoringSettings": {
                            "description": "Monitoring Settings of the vault",
                            "type": "object",
                            "properties": {
                              "azureMonitorAlertSettings": {
                                "description": "Settings for Azure Monitor based alerts",
                                "type": "object",
                                "properties": {
                                  "alertsForAllJobFailures": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "alertsForAllReplicationIssues": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "alertsForAllFailoverIssues": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "classicAlertSettings": {
                                "description": "Settings for classic alerts",
                                "type": "object",
                                "properties": {
                                  "alertsForCriticalOperations": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "emailNotificationsForSiteRecovery": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "restoreSettings": {
                            "description": "Restore Settings of the vault",
                            "type": "object",
                            "properties": {
                              "crossSubscriptionRestoreSettings": {
                                "description": "Settings for CrossSubscriptionRestore",
                                "type": "object",
                                "properties": {
                                  "crossSubscriptionRestoreState": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled",
                                      "PermanentlyDisabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CrossSubscriptionRestoreState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "PermanentlyDisabled",
                                          "value": "PermanentlyDisabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "redundancySettings": {
                            "description": "The redundancy Settings of a Vault",
                            "type": "object",
                            "properties": {
                              "standardTierStorageRedundancy": {
                                "description": "The storage redundancy setting of a vault",
                                "type": "string",
                                "enum": [
                                  "Invalid",
                                  "LocallyRedundant",
                                  "GeoRedundant",
                                  "ZoneRedundant"
                                ],
                                "x-ms-enum": {
                                  "name": "StandardTierStorageRedundancy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Invalid",
                                      "value": "Invalid"
                                    },
                                    {
                                      "name": "LocallyRedundant",
                                      "value": "LocallyRedundant"
                                    },
                                    {
                                      "name": "GeoRedundant",
                                      "value": "GeoRedundant"
                                    },
                                    {
                                      "name": "ZoneRedundant",
                                      "value": "ZoneRedundant"
                                    }
                                  ]
                                }
                              },
                              "crossRegionRestore": {
                                "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CrossRegionRestore",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "securitySettings": {
                            "description": "Security Settings of the vault",
                            "type": "object",
                            "properties": {
                              "immutabilitySettings": {
                                "description": "Immutability Settings of a vault",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "enum": [
                                      "Disabled",
                                      "Unlocked",
                                      "Locked"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ImmutabilityState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "Unlocked",
                                          "value": "Unlocked"
                                        },
                                        {
                                          "name": "Locked",
                                          "value": "Locked"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "softDeleteSettings": {
                                "description": "Soft delete Settings of a vault",
                                "type": "object",
                                "properties": {
                                  "softDeleteState": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled",
                                      "AlwaysON"
                                    ],
                                    "x-ms-enum": {
                                      "name": "SoftDeleteState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "AlwaysON",
                                          "value": "AlwaysON"
                                        }
                                      ]
                                    }
                                  },
                                  "softDeleteRetentionPeriodInDays": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Soft delete retention period in days"
                                  },
                                  "enhancedSecurityState": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled",
                                      "AlwaysON"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnhancedSecurityState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "AlwaysON",
                                          "value": "AlwaysON"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "multiUserAuthorization": {
                                "description": "MUA Settings of a vault",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Invalid",
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "MultiUserAuthorization",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Invalid",
                                      "value": "Invalid"
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sourceScanConfiguration": {
                                "description": "Source scan configuration of vault",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "State",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "sourceScanIdentity": {
                                    "description": "Identity details to be used for an operation",
                                    "type": "object",
                                    "properties": {
                                      "operationIdentityType": {
                                        "description": "Identity type that should be used for an operation.",
                                        "type": "string",
                                        "enum": [
                                          "SystemAssigned",
                                          "UserAssigned"
                                        ],
                                        "x-ms-enum": {
                                          "name": "IdentityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "SystemAssigned",
                                              "value": "SystemAssigned"
                                            },
                                            {
                                              "name": "UserAssigned",
                                              "value": "UserAssigned"
                                            }
                                          ]
                                        }
                                      },
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "secureScore": {
                            "description": "Secure Score of Recovery Services Vault",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Minimum",
                              "Adequate",
                              "Maximum"
                            ],
                            "x-ms-enum": {
                              "name": "SecureScoreLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Minimum",
                                  "value": "Minimum"
                                },
                                {
                                  "name": "Adequate",
                                  "value": "Adequate"
                                },
                                {
                                  "name": "Maximum",
                                  "value": "Maximum"
                                }
                              ]
                            }
                          },
                          "bcdrSecurityLevel": {
                            "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Poor",
                              "Fair",
                              "Good",
                              "Excellent"
                            ],
                            "x-ms-enum": {
                              "name": "BCDRSecurityLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Poor",
                                  "value": "Poor"
                                },
                                {
                                  "name": "Fair",
                                  "value": "Fair"
                                },
                                {
                                  "name": "Good",
                                  "value": "Good"
                                },
                                {
                                  "name": "Excellent",
                                  "value": "Excellent"
                                }
                              ]
                            }
                          },
                          "resourceGuardOperationRequests": {
                            "type": "array",
                            "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of resource identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The tenant ID of resource.",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "None",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssigned",
                                  "value": "SystemAssigned"
                                },
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "UserAssigned",
                                  "value": "UserAssigned"
                                },
                                {
                                  "name": "SystemAssigned, UserAssigned",
                                  "value": "SystemAssigned, UserAssigned"
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "A resource identity that is managed by the user of the service.",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "sku": {
                        "description": "Identifies the unique system identifier for each Azure resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "RS0"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "RS0",
                                  "value": "RS0"
                                }
                              ]
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The Sku tier."
                          },
                          "family": {
                            "type": "string",
                            "description": "The sku family"
                          },
                          "size": {
                            "type": "string",
                            "description": "The sku size"
                          },
                          "capacity": {
                            "type": "string",
                            "description": "The sku capacity"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "etag for the resource."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "RecoveryServices_CheckNameAvailability",
        "summary": "API to check for resource name availability.\nA name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type\nor if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago",
        "description": "API to check for resource name availability.\nA name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type\nor if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Contains information about Resource type and Resource name",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Resource Name availability input parameters - Resource type and resource name",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
                },
                "name": {
                  "type": "string",
                  "description": "Resource name for which availability needs to be checked"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response for check name availability API. Resource provider will set availability as true | false.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean"
                },
                "reason": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults": {
      "get": {
        "operationId": "Vaults_ListByResourceGroup",
        "tags": [
          "GetOperationResult"
        ],
        "description": "Retrieve a list of Vaults.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response model for a list of Vaults.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Vault items on this page",
                  "items": {
                    "type": "object",
                    "description": "Resource information, as returned by the resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of the vault.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning State.",
                            "readOnly": true
                          },
                          "upgradeDetails": {
                            "description": "Details for upgrading vault.",
                            "type": "object",
                            "properties": {
                              "operationId": {
                                "type": "string",
                                "description": "ID of the vault upgrade operation.",
                                "readOnly": true
                              },
                              "startTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation has started.",
                                "readOnly": true
                              },
                              "lastUpdatedTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation status was last updated.",
                                "readOnly": true
                              },
                              "endTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC time at which the upgrade operation has ended.",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the vault upgrade operation.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Unknown",
                                  "InProgress",
                                  "Upgraded",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "VaultUpgradeState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Unknown",
                                      "value": "Unknown"
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Upgraded",
                                      "value": "Upgraded"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Message to the user containing information about the upgrade operation.",
                                "readOnly": true
                              },
                              "triggerType": {
                                "description": "The way the vault upgrade was triggered.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "UserTriggered",
                                  "ForcedUpgrade"
                                ],
                                "x-ms-enum": {
                                  "name": "TriggerType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "UserTriggered",
                                      "value": "UserTriggered"
                                    },
                                    {
                                      "name": "ForcedUpgrade",
                                      "value": "ForcedUpgrade"
                                    }
                                  ]
                                }
                              },
                              "upgradedResourceId": {
                                "type": "string",
                                "description": "Resource ID of the upgraded vault.",
                                "readOnly": true
                              },
                              "previousResourceId": {
                                "type": "string",
                                "description": "Resource ID of the vault before the upgrade.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connection.",
                            "items": {
                              "type": "object",
                              "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Private Endpoint Connection Response Properties.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "provisioningState": {
                                      "description": "Gets or sets provisioning state of the private endpoint connection.",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Deleting",
                                        "Failed",
                                        "Pending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProvisioningState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Succeeded",
                                            "value": "Succeeded"
                                          },
                                          {
                                            "name": "Deleting",
                                            "value": "Deleting"
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed"
                                          },
                                          {
                                            "name": "Pending",
                                            "value": "Pending"
                                          }
                                        ]
                                      }
                                    },
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Gets or sets id.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Gets or sets private link service connection state.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Gets or sets the status.",
                                          "readOnly": true,
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointConnectionStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Pending",
                                                "value": "Pending"
                                              },
                                              {
                                                "name": "Approved",
                                                "value": "Approved"
                                              },
                                              {
                                                "name": "Rejected",
                                                "value": "Rejected"
                                              },
                                              {
                                                "name": "Disconnected",
                                                "value": "Disconnected"
                                              }
                                            ]
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Gets or sets description.",
                                          "readOnly": true
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Gets or sets actions required.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupIds": {
                                      "type": "array",
                                      "description": "Group Ids for the Private Endpoint",
                                      "items": {
                                        "type": "string",
                                        "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                        "enum": [
                                          "AzureBackup",
                                          "AzureBackup_secondary",
                                          "AzureSiteRecovery"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VaultSubResourceType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "AzureBackup",
                                              "value": "AzureBackup"
                                            },
                                            {
                                              "name": "AzureBackup_secondary",
                                              "value": "AzureBackup_secondary"
                                            },
                                            {
                                              "name": "AzureSiteRecovery",
                                              "value": "AzureSiteRecovery"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the private Endpoint Connection",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the private Endpoint connection",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "privateEndpointStateForBackup": {
                            "description": "Private endpoint state for backup.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "VaultPrivateEndpointState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "privateEndpointStateForSiteRecovery": {
                            "description": "Private endpoint state for site recovery.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "VaultPrivateEndpointState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Customer Managed Key details of the resource.",
                            "type": "object",
                            "properties": {
                              "keyVaultProperties": {
                                "description": "The properties of the Key Vault which hosts CMK",
                                "type": "object",
                                "properties": {
                                  "keyUri": {
                                    "type": "string",
                                    "description": "The key uri of the Customer Managed Key"
                                  }
                                }
                              },
                              "kekIdentity": {
                                "description": "The details of the identity used for CMK",
                                "type": "object",
                                "properties": {
                                  "useSystemAssignedIdentity": {
                                    "type": "boolean",
                                    "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                                  }
                                }
                              },
                              "infrastructureEncryption": {
                                "description": "Enabling/Disabling the Double Encryption state",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "InfrastructureEncryptionState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "moveDetails": {
                            "description": "The details of the latest move operation performed on the Azure Resource",
                            "type": "object",
                            "properties": {
                              "operationId": {
                                "type": "string",
                                "description": "OperationId of the Resource Move Operation",
                                "readOnly": true
                              },
                              "startTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start Time of the Resource Move Operation",
                                "readOnly": true
                              },
                              "completionTimeUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End Time of the Resource Move Operation",
                                "readOnly": true
                              },
                              "sourceResourceId": {
                                "type": "string",
                                "description": "Source Resource of the Resource Move Operation",
                                "readOnly": true
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "Target Resource of the Resource Move Operation",
                                "readOnly": true
                              }
                            }
                          },
                          "moveState": {
                            "description": "The State of the Resource after the move operation",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "InProgress",
                              "PrepareFailed",
                              "CommitFailed",
                              "PrepareTimedout",
                              "CommitTimedout",
                              "MoveSucceeded",
                              "Failure",
                              "CriticalFailure",
                              "PartialSuccess"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceMoveState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown"
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress"
                                },
                                {
                                  "name": "PrepareFailed",
                                  "value": "PrepareFailed"
                                },
                                {
                                  "name": "CommitFailed",
                                  "value": "CommitFailed"
                                },
                                {
                                  "name": "PrepareTimedout",
                                  "value": "PrepareTimedout"
                                },
                                {
                                  "name": "CommitTimedout",
                                  "value": "CommitTimedout"
                                },
                                {
                                  "name": "MoveSucceeded",
                                  "value": "MoveSucceeded"
                                },
                                {
                                  "name": "Failure",
                                  "value": "Failure"
                                },
                                {
                                  "name": "CriticalFailure",
                                  "value": "CriticalFailure"
                                },
                                {
                                  "name": "PartialSuccess",
                                  "value": "PartialSuccess"
                                }
                              ]
                            }
                          },
                          "backupStorageVersion": {
                            "description": "Backup storage version",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "V1",
                              "V2",
                              "Unassigned"
                            ],
                            "x-ms-enum": {
                              "name": "BackupStorageVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "V1",
                                  "value": "V1"
                                },
                                {
                                  "name": "V2",
                                  "value": "V2"
                                },
                                {
                                  "name": "Unassigned",
                                  "value": "Unassigned"
                                }
                              ]
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "property to enable or disable resource provider inbound network traffic from public clients",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "monitoringSettings": {
                            "description": "Monitoring Settings of the vault",
                            "type": "object",
                            "properties": {
                              "azureMonitorAlertSettings": {
                                "description": "Settings for Azure Monitor based alerts",
                                "type": "object",
                                "properties": {
                                  "alertsForAllJobFailures": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "alertsForAllReplicationIssues": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "alertsForAllFailoverIssues": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "classicAlertSettings": {
                                "description": "Settings for classic alerts",
                                "type": "object",
                                "properties": {
                                  "alertsForCriticalOperations": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "emailNotificationsForSiteRecovery": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AlertsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "restoreSettings": {
                            "description": "Restore Settings of the vault",
                            "type": "object",
                            "properties": {
                              "crossSubscriptionRestoreSettings": {
                                "description": "Settings for CrossSubscriptionRestore",
                                "type": "object",
                                "properties": {
                                  "crossSubscriptionRestoreState": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled",
                                      "PermanentlyDisabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CrossSubscriptionRestoreState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "PermanentlyDisabled",
                                          "value": "PermanentlyDisabled"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "redundancySettings": {
                            "description": "The redundancy Settings of a Vault",
                            "type": "object",
                            "properties": {
                              "standardTierStorageRedundancy": {
                                "description": "The storage redundancy setting of a vault",
                                "type": "string",
                                "enum": [
                                  "Invalid",
                                  "LocallyRedundant",
                                  "GeoRedundant",
                                  "ZoneRedundant"
                                ],
                                "x-ms-enum": {
                                  "name": "StandardTierStorageRedundancy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Invalid",
                                      "value": "Invalid"
                                    },
                                    {
                                      "name": "LocallyRedundant",
                                      "value": "LocallyRedundant"
                                    },
                                    {
                                      "name": "GeoRedundant",
                                      "value": "GeoRedundant"
                                    },
                                    {
                                      "name": "ZoneRedundant",
                                      "value": "ZoneRedundant"
                                    }
                                  ]
                                }
                              },
                              "crossRegionRestore": {
                                "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CrossRegionRestore",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "securitySettings": {
                            "description": "Security Settings of the vault",
                            "type": "object",
                            "properties": {
                              "immutabilitySettings": {
                                "description": "Immutability Settings of a vault",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "enum": [
                                      "Disabled",
                                      "Unlocked",
                                      "Locked"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ImmutabilityState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "Unlocked",
                                          "value": "Unlocked"
                                        },
                                        {
                                          "name": "Locked",
                                          "value": "Locked"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "softDeleteSettings": {
                                "description": "Soft delete Settings of a vault",
                                "type": "object",
                                "properties": {
                                  "softDeleteState": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled",
                                      "AlwaysON"
                                    ],
                                    "x-ms-enum": {
                                      "name": "SoftDeleteState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "AlwaysON",
                                          "value": "AlwaysON"
                                        }
                                      ]
                                    }
                                  },
                                  "softDeleteRetentionPeriodInDays": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Soft delete retention period in days"
                                  },
                                  "enhancedSecurityState": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled",
                                      "AlwaysON"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnhancedSecurityState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        },
                                        {
                                          "name": "AlwaysON",
                                          "value": "AlwaysON"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "multiUserAuthorization": {
                                "description": "MUA Settings of a vault",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Invalid",
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "MultiUserAuthorization",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Invalid",
                                      "value": "Invalid"
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sourceScanConfiguration": {
                                "description": "Source scan configuration of vault",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "State",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Invalid",
                                          "value": "Invalid"
                                        },
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "sourceScanIdentity": {
                                    "description": "Identity details to be used for an operation",
                                    "type": "object",
                                    "properties": {
                                      "operationIdentityType": {
                                        "description": "Identity type that should be used for an operation.",
                                        "type": "string",
                                        "enum": [
                                          "SystemAssigned",
                                          "UserAssigned"
                                        ],
                                        "x-ms-enum": {
                                          "name": "IdentityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "SystemAssigned",
                                              "value": "SystemAssigned"
                                            },
                                            {
                                              "name": "UserAssigned",
                                              "value": "UserAssigned"
                                            }
                                          ]
                                        }
                                      },
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "secureScore": {
                            "description": "Secure Score of Recovery Services Vault",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Minimum",
                              "Adequate",
                              "Maximum"
                            ],
                            "x-ms-enum": {
                              "name": "SecureScoreLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Minimum",
                                  "value": "Minimum"
                                },
                                {
                                  "name": "Adequate",
                                  "value": "Adequate"
                                },
                                {
                                  "name": "Maximum",
                                  "value": "Maximum"
                                }
                              ]
                            }
                          },
                          "bcdrSecurityLevel": {
                            "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Poor",
                              "Fair",
                              "Good",
                              "Excellent"
                            ],
                            "x-ms-enum": {
                              "name": "BCDRSecurityLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Poor",
                                  "value": "Poor"
                                },
                                {
                                  "name": "Fair",
                                  "value": "Fair"
                                },
                                {
                                  "name": "Good",
                                  "value": "Good"
                                },
                                {
                                  "name": "Excellent",
                                  "value": "Excellent"
                                }
                              ]
                            }
                          },
                          "resourceGuardOperationRequests": {
                            "type": "array",
                            "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of resource identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The tenant ID of resource.",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "None",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssigned",
                                  "value": "SystemAssigned"
                                },
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "UserAssigned",
                                  "value": "UserAssigned"
                                },
                                {
                                  "name": "SystemAssigned, UserAssigned",
                                  "value": "SystemAssigned, UserAssigned"
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "A resource identity that is managed by the user of the service.",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "The principal ID of the user-assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "The client ID of the user-assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "sku": {
                        "description": "Identifies the unique system identifier for each Azure resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "RS0"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "RS0",
                                  "value": "RS0"
                                }
                              ]
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The Sku tier."
                          },
                          "family": {
                            "type": "string",
                            "description": "The sku family"
                          },
                          "size": {
                            "type": "string",
                            "description": "The sku size"
                          },
                          "capacity": {
                            "type": "string",
                            "description": "The sku capacity"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "etag for the resource."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}": {
      "get": {
        "operationId": "Vaults_Get",
        "tags": [
          "Vaults"
        ],
        "description": "Get the Vault details.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Vaults_CreateOrUpdate",
        "tags": [
          "Vaults"
        ],
        "description": "Creates or updates a Recovery Services vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "vault",
            "in": "body",
            "description": "Recovery Services Vault to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Vault' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Vault' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Vaults_Update",
        "tags": [
          "Vaults"
        ],
        "description": "Updates the vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "vault",
            "in": "body",
            "description": "Recovery Services Vault to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Patch Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Optional ETag."
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Vaults_Delete",
        "tags": [
          "Vaults"
        ],
        "description": "Deletes a vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/certificates/{certificateName}": {
      "put": {
        "operationId": "VaultCertificates_Create",
        "tags": [
          "Vaults"
        ],
        "description": "Uploads a certificate for a resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Certificate friendly name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateRequest",
            "in": "body",
            "description": "Input parameters for uploading the vault certificate.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Details of the certificate to be uploaded to the vault.",
              "properties": {
                "properties": {
                  "description": "Raw certificate data.",
                  "type": "object",
                  "properties": {
                    "authType": {
                      "description": "Specifies the authentication type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "ACS",
                        "AAD",
                        "AccessControlService",
                        "AzureActiveDirectory"
                      ],
                      "x-ms-enum": {
                        "name": "AuthType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "ACS",
                            "value": "ACS"
                          },
                          {
                            "name": "AAD",
                            "value": "AAD"
                          },
                          {
                            "name": "AccessControlService",
                            "value": "AccessControlService"
                          },
                          {
                            "name": "AzureActiveDirectory",
                            "value": "AzureActiveDirectory"
                          }
                        ]
                      }
                    },
                    "certificate": {
                      "type": "string",
                      "format": "byte",
                      "description": "The base64 encoded certificate raw data string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VaultCertificateResponse' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Certificate corresponding to a vault that can be used by clients to register themselves with the vault.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Resource name associated with the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "description": "Resource Id represents the complete path to the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Certificate details representing the Vault credentials.",
                  "type": "object",
                  "properties": {
                    "authType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "certificate": {
                      "type": "string",
                      "format": "byte",
                      "description": "The base64 encoded certificate raw data string."
                    },
                    "friendlyName": {
                      "type": "string",
                      "description": "Certificate friendly name."
                    },
                    "issuer": {
                      "type": "string",
                      "description": "Certificate issuer."
                    },
                    "resourceId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Resource ID of the vault."
                    },
                    "subject": {
                      "type": "string",
                      "description": "Certificate Subject Name."
                    },
                    "thumbprint": {
                      "type": "string",
                      "description": "Certificate thumbprint."
                    },
                    "validFrom": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Certificate Validity start Date time."
                    },
                    "validTo": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Certificate Validity End Date time."
                    }
                  },
                  "discriminator": "authType",
                  "required": [
                    "authType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/extendedInformation/vaultExtendedInfo": {
      "get": {
        "operationId": "VaultExtendedInfo_Get",
        "tags": [
          "VaultExtendedInfoResources"
        ],
        "description": "Get the vault extended info.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Vault extended information.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Vault extended information.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "integrityKey": {
                      "type": "string",
                      "description": "Integrity key."
                    },
                    "encryptionKey": {
                      "type": "string",
                      "description": "Encryption key."
                    },
                    "encryptionKeyThumbprint": {
                      "type": "string",
                      "description": "Encryption key thumbprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm for Vault ExtendedInfo"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "VaultExtendedInfo_CreateOrUpdate",
        "tags": [
          "VaultExtendedInfoResources"
        ],
        "description": "Create vault extended info.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceResourceExtendedInfoDetails",
            "in": "body",
            "description": "Details of ResourceExtendedInfo",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Vault extended information.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Vault extended information.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "integrityKey": {
                      "type": "string",
                      "description": "Integrity key."
                    },
                    "encryptionKey": {
                      "type": "string",
                      "description": "Encryption key."
                    },
                    "encryptionKeyThumbprint": {
                      "type": "string",
                      "description": "Encryption key thumbprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm for Vault ExtendedInfo"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VaultExtendedInfoResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Vault extended information.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Vault extended information.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "integrityKey": {
                      "type": "string",
                      "description": "Integrity key."
                    },
                    "encryptionKey": {
                      "type": "string",
                      "description": "Encryption key."
                    },
                    "encryptionKeyThumbprint": {
                      "type": "string",
                      "description": "Encryption key thumbprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm for Vault ExtendedInfo"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VaultExtendedInfo_Update",
        "tags": [
          "VaultExtendedInfoResources"
        ],
        "description": "Update vault extended info.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceResourceExtendedInfoDetails",
            "in": "body",
            "description": "Details of ResourceExtendedInfo",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Vault extended information.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Vault extended information.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "integrityKey": {
                      "type": "string",
                      "description": "Integrity key."
                    },
                    "encryptionKey": {
                      "type": "string",
                      "description": "Encryption key."
                    },
                    "encryptionKeyThumbprint": {
                      "type": "string",
                      "description": "Encryption key thumbprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm for Vault ExtendedInfo"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Vault extended information.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Vault extended information.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "integrityKey": {
                      "type": "string",
                      "description": "Integrity key."
                    },
                    "encryptionKey": {
                      "type": "string",
                      "description": "Encryption key."
                    },
                    "encryptionKeyThumbprint": {
                      "type": "string",
                      "description": "Encryption key thumbprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm for Vault ExtendedInfo"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationResults/{operationId}": {
      "get": {
        "operationId": "GetOperationResult",
        "tags": [
          "Vaults"
        ],
        "description": "Gets the operation result for a resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Resource information, as returned by the resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the vault.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning State.",
                      "readOnly": true
                    },
                    "upgradeDetails": {
                      "description": "Details for upgrading vault.",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "ID of the vault upgrade operation.",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has started.",
                          "readOnly": true
                        },
                        "lastUpdatedTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation status was last updated.",
                          "readOnly": true
                        },
                        "endTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC time at which the upgrade operation has ended.",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the vault upgrade operation.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "InProgress",
                            "Upgraded",
                            "Failed"
                          ],
                          "x-ms-enum": {
                            "name": "VaultUpgradeState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Upgraded",
                                "value": "Upgraded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to the user containing information about the upgrade operation.",
                          "readOnly": true
                        },
                        "triggerType": {
                          "description": "The way the vault upgrade was triggered.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "UserTriggered",
                            "ForcedUpgrade"
                          ],
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserTriggered",
                                "value": "UserTriggered"
                              },
                              {
                                "name": "ForcedUpgrade",
                                "value": "ForcedUpgrade"
                              }
                            ]
                          }
                        },
                        "upgradedResourceId": {
                          "type": "string",
                          "description": "Resource ID of the upgraded vault.",
                          "readOnly": true
                        },
                        "previousResourceId": {
                          "type": "string",
                          "description": "Resource ID of the vault before the upgrade.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connection.",
                      "items": {
                        "type": "object",
                        "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Private Endpoint Connection Response Properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "provisioningState": {
                                "description": "Gets or sets provisioning state of the private endpoint connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Deleting",
                                  "Failed",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending"
                                    }
                                  ]
                                }
                              },
                              "privateEndpoint": {
                                "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Gets or sets id.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Gets or sets private link service connection state.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Gets or sets the status.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointConnectionStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pending",
                                          "value": "Pending"
                                        },
                                        {
                                          "name": "Approved",
                                          "value": "Approved"
                                        },
                                        {
                                          "name": "Rejected",
                                          "value": "Rejected"
                                        },
                                        {
                                          "name": "Disconnected",
                                          "value": "Disconnected"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets or sets description.",
                                    "readOnly": true
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Gets or sets actions required.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "description": "Group Ids for the Private Endpoint",
                                "items": {
                                  "type": "string",
                                  "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                  "enum": [
                                    "AzureBackup",
                                    "AzureBackup_secondary",
                                    "AzureSiteRecovery"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VaultSubResourceType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AzureBackup",
                                        "value": "AzureBackup"
                                      },
                                      {
                                        "name": "AzureBackup_secondary",
                                        "value": "AzureBackup_secondary"
                                      },
                                      {
                                        "name": "AzureSiteRecovery",
                                        "value": "AzureSiteRecovery"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the private Endpoint Connection",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                            "readOnly": true
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the private Endpoint connection",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "privateEndpointStateForBackup": {
                      "description": "Private endpoint state for backup.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "privateEndpointStateForSiteRecovery": {
                      "description": "Private endpoint state for site recovery.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "VaultPrivateEndpointState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Customer Managed Key details of the resource.",
                      "type": "object",
                      "properties": {
                        "keyVaultProperties": {
                          "description": "The properties of the Key Vault which hosts CMK",
                          "type": "object",
                          "properties": {
                            "keyUri": {
                              "type": "string",
                              "description": "The key uri of the Customer Managed Key"
                            }
                          }
                        },
                        "kekIdentity": {
                          "description": "The details of the identity used for CMK",
                          "type": "object",
                          "properties": {
                            "useSystemAssignedIdentity": {
                              "type": "boolean",
                              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                            }
                          }
                        },
                        "infrastructureEncryption": {
                          "description": "Enabling/Disabling the Double Encryption state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InfrastructureEncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "moveDetails": {
                      "description": "The details of the latest move operation performed on the Azure Resource",
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "OperationId of the Resource Move Operation",
                          "readOnly": true
                        },
                        "startTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "completionTimeUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End Time of the Resource Move Operation",
                          "readOnly": true
                        },
                        "sourceResourceId": {
                          "type": "string",
                          "description": "Source Resource of the Resource Move Operation",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "Target Resource of the Resource Move Operation",
                          "readOnly": true
                        }
                      }
                    },
                    "moveState": {
                      "description": "The State of the Resource after the move operation",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "InProgress",
                        "PrepareFailed",
                        "CommitFailed",
                        "PrepareTimedout",
                        "CommitTimedout",
                        "MoveSucceeded",
                        "Failure",
                        "CriticalFailure",
                        "PartialSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceMoveState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown"
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress"
                          },
                          {
                            "name": "PrepareFailed",
                            "value": "PrepareFailed"
                          },
                          {
                            "name": "CommitFailed",
                            "value": "CommitFailed"
                          },
                          {
                            "name": "PrepareTimedout",
                            "value": "PrepareTimedout"
                          },
                          {
                            "name": "CommitTimedout",
                            "value": "CommitTimedout"
                          },
                          {
                            "name": "MoveSucceeded",
                            "value": "MoveSucceeded"
                          },
                          {
                            "name": "Failure",
                            "value": "Failure"
                          },
                          {
                            "name": "CriticalFailure",
                            "value": "CriticalFailure"
                          },
                          {
                            "name": "PartialSuccess",
                            "value": "PartialSuccess"
                          }
                        ]
                      }
                    },
                    "backupStorageVersion": {
                      "description": "Backup storage version",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "V1",
                        "V2",
                        "Unassigned"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "V1",
                            "value": "V1"
                          },
                          {
                            "name": "V2",
                            "value": "V2"
                          },
                          {
                            "name": "Unassigned",
                            "value": "Unassigned"
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "property to enable or disable resource provider inbound network traffic from public clients",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "monitoringSettings": {
                      "description": "Monitoring Settings of the vault",
                      "type": "object",
                      "properties": {
                        "azureMonitorAlertSettings": {
                          "description": "Settings for Azure Monitor based alerts",
                          "type": "object",
                          "properties": {
                            "alertsForAllJobFailures": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllReplicationIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "alertsForAllFailoverIssues": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "classicAlertSettings": {
                          "description": "Settings for classic alerts",
                          "type": "object",
                          "properties": {
                            "alertsForCriticalOperations": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "emailNotificationsForSiteRecovery": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "AlertsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "restoreSettings": {
                      "description": "Restore Settings of the vault",
                      "type": "object",
                      "properties": {
                        "crossSubscriptionRestoreSettings": {
                          "description": "Settings for CrossSubscriptionRestore",
                          "type": "object",
                          "properties": {
                            "crossSubscriptionRestoreState": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled",
                                "PermanentlyDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "CrossSubscriptionRestoreState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "PermanentlyDisabled",
                                    "value": "PermanentlyDisabled"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "redundancySettings": {
                      "description": "The redundancy Settings of a Vault",
                      "type": "object",
                      "properties": {
                        "standardTierStorageRedundancy": {
                          "description": "The storage redundancy setting of a vault",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "LocallyRedundant",
                            "GeoRedundant",
                            "ZoneRedundant"
                          ],
                          "x-ms-enum": {
                            "name": "StandardTierStorageRedundancy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "LocallyRedundant",
                                "value": "LocallyRedundant"
                              },
                              {
                                "name": "GeoRedundant",
                                "value": "GeoRedundant"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              }
                            ]
                          }
                        },
                        "crossRegionRestore": {
                          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "CrossRegionRestore",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "securitySettings": {
                      "description": "Security Settings of the vault",
                      "type": "object",
                      "properties": {
                        "immutabilitySettings": {
                          "description": "Immutability Settings of a vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Unlocked",
                                "Locked"
                              ],
                              "x-ms-enum": {
                                "name": "ImmutabilityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "Unlocked",
                                    "value": "Unlocked"
                                  },
                                  {
                                    "name": "Locked",
                                    "value": "Locked"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "softDeleteSettings": {
                          "description": "Soft delete Settings of a vault",
                          "type": "object",
                          "properties": {
                            "softDeleteState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "SoftDeleteState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            },
                            "softDeleteRetentionPeriodInDays": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Soft delete retention period in days"
                            },
                            "enhancedSecurityState": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled",
                                "AlwaysON"
                              ],
                              "x-ms-enum": {
                                "name": "EnhancedSecurityState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  },
                                  {
                                    "name": "AlwaysON",
                                    "value": "AlwaysON"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "multiUserAuthorization": {
                          "description": "MUA Settings of a vault",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MultiUserAuthorization",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Invalid",
                                "value": "Invalid"
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "sourceScanConfiguration": {
                          "description": "Source scan configuration of vault",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "State",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Invalid",
                                    "value": "Invalid"
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "sourceScanIdentity": {
                              "description": "Identity details to be used for an operation",
                              "type": "object",
                              "properties": {
                                "operationIdentityType": {
                                  "description": "Identity type that should be used for an operation.",
                                  "type": "string",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "SystemAssigned",
                                        "value": "SystemAssigned"
                                      },
                                      {
                                        "name": "UserAssigned",
                                        "value": "UserAssigned"
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "secureScore": {
                      "description": "Secure Score of Recovery Services Vault",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "None",
                        "Minimum",
                        "Adequate",
                        "Maximum"
                      ],
                      "x-ms-enum": {
                        "name": "SecureScoreLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Minimum",
                            "value": "Minimum"
                          },
                          {
                            "name": "Adequate",
                            "value": "Adequate"
                          },
                          {
                            "name": "Maximum",
                            "value": "Maximum"
                          }
                        ]
                      }
                    },
                    "bcdrSecurityLevel": {
                      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Poor",
                        "Fair",
                        "Good",
                        "Excellent"
                      ],
                      "x-ms-enum": {
                        "name": "BCDRSecurityLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Poor",
                            "value": "Poor"
                          },
                          {
                            "name": "Fair",
                            "value": "Fair"
                          },
                          {
                            "name": "Good",
                            "value": "Good"
                          },
                          {
                            "name": "Excellent",
                            "value": "Excellent"
                          }
                        ]
                      }
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of resource identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant ID of resource.",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned, UserAssigned",
                            "value": "SystemAssigned, UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "A resource identity that is managed by the user of the service.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the user-assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the user-assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "Identifies the unique system identifier for each Azure resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RS0"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "RS0",
                            "value": "RS0"
                          }
                        ]
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The Sku tier."
                    },
                    "family": {
                      "type": "string",
                      "description": "The sku family"
                    },
                    "size": {
                      "type": "string",
                      "description": "The sku size"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "The sku capacity"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "etag for the resource."
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationStatus/{operationId}": {
      "get": {
        "operationId": "GetOperationStatus",
        "description": "Gets the operation status for a resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_List",
        "tags": [
          "PrivateLinkResourceOperationGroup"
        ],
        "description": "Returns the list of private link resources that need to be created for Backup and SiteRecovery",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Class which represent the stamps associated with the vault.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateLinkResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Information of the private link resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource Private link DNS zone name.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResourceOperationGroup"
        ],
        "description": "Returns a specified private link resource that need to be created for Backup and SiteRecovery",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Information of the private link resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "type": "array",
                      "description": "[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "description": "The private link resource Private link DNS zone name.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/registeredIdentities/{identityName}": {
      "delete": {
        "operationId": "RegisteredIdentities_Delete",
        "tags": [
          "Vaults"
        ],
        "description": "Unregisters the given container from your Recovery Services vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "identityName",
            "in": "path",
            "description": "Name of the protection container to unregister.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/replicationUsages": {
      "get": {
        "operationId": "ReplicationUsages_List",
        "tags": [
          "Vaults"
        ],
        "description": "Fetches the replication usages of the vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Replication usages for vault.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The list of replication usages for the given vault.",
                  "items": {
                    "type": "object",
                    "description": "Replication usages of a vault.",
                    "properties": {
                      "monitoringSummary": {
                        "description": "Summary of the replication monitoring data for this vault.",
                        "type": "object",
                        "properties": {
                          "unHealthyVmCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of unhealthy VMs."
                          },
                          "unHealthyProviderCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of unhealthy replication providers."
                          },
                          "eventsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of all critical warnings."
                          },
                          "deprecatedProviderCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of all deprecated recovery service providers."
                          },
                          "supportedProviderCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of all the supported recovery service providers."
                          },
                          "unsupportedProviderCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of all the unsupported recovery service providers."
                          }
                        }
                      },
                      "jobsSummary": {
                        "description": "Summary of the replication jobs data for this vault.",
                        "type": "object",
                        "properties": {
                          "failedJobs": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of failed jobs."
                          },
                          "suspendedJobs": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of suspended jobs."
                          },
                          "inProgressJobs": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Count of in-progress jobs."
                          }
                        }
                      },
                      "protectedItemCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of replication protected items for this vault."
                      },
                      "recoveryPlanCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of replication recovery plans for this vault."
                      },
                      "registeredServersCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of servers registered to this vault."
                      },
                      "recoveryServicesProviderAuthType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The authentication type of recovery service providers in the vault."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/usages": {
      "get": {
        "operationId": "Usages_ListByVaults",
        "tags": [
          "Vaults"
        ],
        "description": "Fetches the usages of the vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the Vault",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Usage for vault.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The list of usages for the given vault.",
                  "items": {
                    "type": "object",
                    "description": "Usages of a vault.",
                    "properties": {
                      "unit": {
                        "description": "Unit of the usage.",
                        "type": "string",
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond"
                        ],
                        "x-ms-enum": {
                          "name": "UsagesUnit",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Count",
                              "value": "Count"
                            },
                            {
                              "name": "Bytes",
                              "value": "Bytes"
                            },
                            {
                              "name": "Seconds",
                              "value": "Seconds"
                            },
                            {
                              "name": "Percent",
                              "value": "Percent"
                            },
                            {
                              "name": "CountPerSecond",
                              "value": "CountPerSecond"
                            },
                            {
                              "name": "BytesPerSecond",
                              "value": "BytesPerSecond"
                            }
                          ]
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "description": "Quota period of usage."
                      },
                      "nextResetTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Next reset time of usage."
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Current value of usage."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Limit of usage."
                      },
                      "name": {
                        "description": "Name of usage.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of usage."
                          },
                          "localizedValue": {
                            "type": "string",
                            "description": "Localized value of usage."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupPreValidateProtection": {
      "post": {
        "operationId": "ProtectionIntent_Validate",
        "summary": "It will validate followings\n1. Vault capacity\n2. VM is already protected\n3. Any VM related configuration passed in properties.",
        "description": "It will validate followings\n1. Vault capacity\n2. VM is already protected\n3. Any VM related configuration passed in properties.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "azureRegion",
            "in": "path",
            "description": "Azure region to hit Api",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Enable backup validation request on Virtual Machine",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.\nIt will validate followings\n1. Vault capacity\n2. VM is already protected\n3. Any VM related configuration passed in properties.",
              "properties": {
                "resourceType": {
                  "description": "ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "VM",
                    "FileFolder",
                    "AzureSqlDb",
                    "SQLDB",
                    "Exchange",
                    "Sharepoint",
                    "VMwareVM",
                    "SystemState",
                    "Client",
                    "GenericDataSource",
                    "SQLDataBase",
                    "AzureFileShare",
                    "SAPHanaDatabase",
                    "SAPAseDatabase",
                    "SAPHanaDBInstance"
                  ],
                  "x-ms-enum": {
                    "name": "DataSourceType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "VM",
                        "value": "VM"
                      },
                      {
                        "name": "FileFolder",
                        "value": "FileFolder"
                      },
                      {
                        "name": "AzureSqlDb",
                        "value": "AzureSqlDb"
                      },
                      {
                        "name": "SQLDB",
                        "value": "SQLDB"
                      },
                      {
                        "name": "Exchange",
                        "value": "Exchange"
                      },
                      {
                        "name": "Sharepoint",
                        "value": "Sharepoint"
                      },
                      {
                        "name": "VMwareVM",
                        "value": "VMwareVM"
                      },
                      {
                        "name": "SystemState",
                        "value": "SystemState"
                      },
                      {
                        "name": "Client",
                        "value": "Client"
                      },
                      {
                        "name": "GenericDataSource",
                        "value": "GenericDataSource"
                      },
                      {
                        "name": "SQLDataBase",
                        "value": "SQLDataBase"
                      },
                      {
                        "name": "AzureFileShare",
                        "value": "AzureFileShare"
                      },
                      {
                        "name": "SAPHanaDatabase",
                        "value": "SAPHanaDatabase"
                      },
                      {
                        "name": "SAPAseDatabase",
                        "value": "SAPAseDatabase"
                      },
                      {
                        "name": "SAPHanaDBInstance",
                        "value": "SAPHanaDBInstance"
                      }
                    ]
                  }
                },
                "resourceId": {
                  "type": "string",
                  "description": "ARM Virtual Machine Id"
                },
                "vaultId": {
                  "type": "string",
                  "description": "ARM id of the Recovery Services Vault"
                },
                "properties": {
                  "type": "string",
                  "description": "Configuration of VM if any needs to be validated like OS type etc"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response contract for enable backup validation request",
              "properties": {
                "status": {
                  "description": "Validation Status",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "ValidationStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "errorCode": {
                  "type": "string",
                  "description": "Response error code"
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Response error message"
                },
                "recommendation": {
                  "type": "string",
                  "description": "Recommended action for user"
                },
                "containerName": {
                  "type": "string",
                  "description": "Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required\nfor portal"
                },
                "protectedItemName": {
                  "type": "string",
                  "description": "Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is required for portal"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupStatus": {
      "post": {
        "operationId": "BackupStatus_Get",
        "summary": "Get the container backup status",
        "description": "Get the container backup status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "azureRegion",
            "in": "path",
            "description": "Azure region to hit Api",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Container Backup Status Request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "BackupStatus request.",
              "properties": {
                "resourceType": {
                  "description": "Container Type - VM, SQLPaaS, DPM, AzureFileShare...",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "VM",
                    "FileFolder",
                    "AzureSqlDb",
                    "SQLDB",
                    "Exchange",
                    "Sharepoint",
                    "VMwareVM",
                    "SystemState",
                    "Client",
                    "GenericDataSource",
                    "SQLDataBase",
                    "AzureFileShare",
                    "SAPHanaDatabase",
                    "SAPAseDatabase",
                    "SAPHanaDBInstance"
                  ],
                  "x-ms-enum": {
                    "name": "DataSourceType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "VM",
                        "value": "VM"
                      },
                      {
                        "name": "FileFolder",
                        "value": "FileFolder"
                      },
                      {
                        "name": "AzureSqlDb",
                        "value": "AzureSqlDb"
                      },
                      {
                        "name": "SQLDB",
                        "value": "SQLDB"
                      },
                      {
                        "name": "Exchange",
                        "value": "Exchange"
                      },
                      {
                        "name": "Sharepoint",
                        "value": "Sharepoint"
                      },
                      {
                        "name": "VMwareVM",
                        "value": "VMwareVM"
                      },
                      {
                        "name": "SystemState",
                        "value": "SystemState"
                      },
                      {
                        "name": "Client",
                        "value": "Client"
                      },
                      {
                        "name": "GenericDataSource",
                        "value": "GenericDataSource"
                      },
                      {
                        "name": "SQLDataBase",
                        "value": "SQLDataBase"
                      },
                      {
                        "name": "AzureFileShare",
                        "value": "AzureFileShare"
                      },
                      {
                        "name": "SAPHanaDatabase",
                        "value": "SAPHanaDatabase"
                      },
                      {
                        "name": "SAPAseDatabase",
                        "value": "SAPAseDatabase"
                      },
                      {
                        "name": "SAPHanaDBInstance",
                        "value": "SAPHanaDBInstance"
                      }
                    ]
                  }
                },
                "resourceId": {
                  "type": "string",
                  "description": "Entire ARM resource id of the resource"
                },
                "poLogicalName": {
                  "type": "string",
                  "description": "Protectable Item Logical Name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "BackupStatus response.",
              "properties": {
                "protectionStatus": {
                  "description": "Specifies whether the container is registered or not",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "NotProtected",
                    "Protecting",
                    "Protected",
                    "ProtectionFailed"
                  ],
                  "x-ms-enum": {
                    "name": "ProtectionStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "NotProtected",
                        "value": "NotProtected"
                      },
                      {
                        "name": "Protecting",
                        "value": "Protecting"
                      },
                      {
                        "name": "Protected",
                        "value": "Protected"
                      },
                      {
                        "name": "ProtectionFailed",
                        "value": "ProtectionFailed"
                      }
                    ]
                  }
                },
                "vaultId": {
                  "type": "string",
                  "description": "Specifies the arm resource id of the vault"
                },
                "fabricName": {
                  "description": "Specifies the fabric name - Azure or AD",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Azure"
                  ],
                  "x-ms-enum": {
                    "name": "FabricName",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Azure",
                        "value": "Azure"
                      }
                    ]
                  }
                },
                "containerName": {
                  "type": "string",
                  "description": "Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname."
                },
                "protectedItemName": {
                  "type": "string",
                  "description": "Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname."
                },
                "errorCode": {
                  "type": "string",
                  "description": "ErrorCode in case of intent failed"
                },
                "errorMessage": {
                  "type": "string",
                  "description": "ErrorMessage in case of intent failed."
                },
                "policyName": {
                  "type": "string",
                  "description": "Specifies the policy name which is used for protection"
                },
                "registrationStatus": {
                  "type": "string",
                  "description": "Container registration status"
                },
                "protectedItemsCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected items"
                },
                "acquireStorageAccountLock": {
                  "description": "Specifies whether the storage account lock has been acquired or not",
                  "type": "string",
                  "enum": [
                    "Acquire",
                    "NotAcquire"
                  ],
                  "x-ms-enum": {
                    "name": "AcquireStorageAccountLock",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Acquire",
                        "value": "Acquire"
                      },
                      {
                        "name": "NotAcquire",
                        "value": "NotAcquire"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupValidateFeatures": {
      "post": {
        "operationId": "FeatureSupport_Validate",
        "summary": "It will validate if given feature with resource properties is supported in service",
        "description": "It will validate if given feature with resource properties is supported in service",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "azureRegion",
            "in": "path",
            "description": "Azure region to hit Api",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Feature support request object",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for feature request",
              "properties": {
                "featureType": {
                  "type": "string",
                  "description": "backup support feature type."
                }
              },
              "discriminator": "featureType",
              "required": [
                "featureType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response for feature support requests for Azure IaasVm",
              "properties": {
                "supportStatus": {
                  "description": "Support status of feature",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Supported",
                    "DefaultOFF",
                    "DefaultON",
                    "NotSupported"
                  ],
                  "x-ms-enum": {
                    "name": "SupportStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Supported",
                        "value": "Supported"
                      },
                      {
                        "name": "DefaultOFF",
                        "value": "DefaultOFF"
                      },
                      {
                        "name": "DefaultON",
                        "value": "DefaultON"
                      },
                      {
                        "name": "NotSupported",
                        "value": "NotSupported"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupDeletedProtectionContainers": {
      "get": {
        "operationId": "DeletedProtectionContainers_List",
        "description": "Lists the soft deleted containers registered to Recovery Services Vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectionContainer resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ProtectionContainerResource properties",
                        "type": "object",
                        "properties": {
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the container."
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the container.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "registrationStatus": {
                            "type": "string",
                            "description": "Status of registration of the container with the Recovery Services Vault."
                          },
                          "healthStatus": {
                            "type": "string",
                            "description": "Status of health of the container."
                          },
                          "containerType": {
                            "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Unknown",
                              "IaasVMContainer",
                              "IaasVMServiceContainer",
                              "DPMContainer",
                              "AzureBackupServerContainer",
                              "MABContainer",
                              "Cluster",
                              "AzureSqlContainer",
                              "Windows",
                              "VCenter",
                              "VMAppContainer",
                              "SQLAGWorkLoadContainer",
                              "StorageContainer",
                              "GenericContainer",
                              "Microsoft.ClassicCompute/virtualMachines",
                              "Microsoft.Compute/virtualMachines",
                              "AzureWorkloadContainer"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectableContainerType",
                              "modelAsString": false
                            }
                          },
                          "protectableObjectType": {
                            "type": "string",
                            "description": "Type of the protectable object associated with this container"
                          }
                        },
                        "discriminator": "containerType",
                        "required": [
                          "containerType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEncryptionConfigs/backupResourceEncryptionConfig": {
      "get": {
        "operationId": "BackupResourceEncryptionConfigs_Get",
        "tags": [
          "BackupResourceEncryptionConfigs"
        ],
        "description": "Fetches Vault Encryption config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceEncryptionConfigExtendedResource properties",
                  "type": "object",
                  "properties": {
                    "encryptionAtRestType": {
                      "description": "Encryption At Rest Type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "MicrosoftManaged",
                        "CustomerManaged"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionAtRestType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged"
                          },
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged"
                          }
                        ]
                      }
                    },
                    "keyUri": {
                      "type": "string",
                      "description": "Key Vault Key URI"
                    },
                    "subscriptionId": {
                      "type": "string",
                      "description": "Key Vault Subscription Id"
                    },
                    "lastUpdateStatus": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "NotEnabled",
                        "PartiallySucceeded",
                        "PartiallyFailed",
                        "Failed",
                        "Succeeded",
                        "Initialized",
                        "FirstInitialization"
                      ],
                      "x-ms-enum": {
                        "name": "LastUpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "NotEnabled",
                            "value": "NotEnabled"
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded"
                          },
                          {
                            "name": "PartiallyFailed",
                            "value": "PartiallyFailed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized"
                          },
                          {
                            "name": "FirstInitialization",
                            "value": "FirstInitialization"
                          }
                        ]
                      }
                    },
                    "infrastructureEncryptionState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "InfrastructureEncryptionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "User Assigned Identity Id"
                    },
                    "useSystemAssignedIdentity": {
                      "type": "boolean",
                      "description": "bool to indicate whether to use system Assigned Identity or not"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BackupResourceEncryptionConfigs_Update",
        "tags": [
          "BackupResourceEncryptionConfigs"
        ],
        "description": "Updates Vault encryption config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Vault encryption input config request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "encryptionAtRestType": {
                      "description": "Encryption At Rest Type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "MicrosoftManaged",
                        "CustomerManaged"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionAtRestType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged"
                          },
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged"
                          }
                        ]
                      }
                    },
                    "keyUri": {
                      "type": "string",
                      "description": "Key Vault Key URI"
                    },
                    "subscriptionId": {
                      "type": "string",
                      "description": "Key Vault Subscription Id"
                    },
                    "lastUpdateStatus": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "NotEnabled",
                        "PartiallySucceeded",
                        "PartiallyFailed",
                        "Failed",
                        "Succeeded",
                        "Initialized",
                        "FirstInitialization"
                      ],
                      "x-ms-enum": {
                        "name": "LastUpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "NotEnabled",
                            "value": "NotEnabled"
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded"
                          },
                          {
                            "name": "PartiallyFailed",
                            "value": "PartiallyFailed"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Initialized",
                            "value": "Initialized"
                          },
                          {
                            "name": "FirstInitialization",
                            "value": "FirstInitialization"
                          }
                        ]
                      }
                    },
                    "infrastructureEncryptionState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "InfrastructureEncryptionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    }
                  },
                  "description": "BackupResourceEncryptionConfigResource properties"
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines": {
      "get": {
        "operationId": "BackupEngines_List",
        "tags": [
          "BackupEngines"
        ],
        "description": "Backup management servers registered to Recovery Services Vault. Returns a pageable list of servers.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of BackupEngineBase resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "The base backup engine class. All workload specific backup engines derive from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "BackupEngineBaseResource properties",
                        "type": "object",
                        "properties": {
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the backup engine."
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the backup engine.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "registrationStatus": {
                            "type": "string",
                            "description": "Registration status of the backup engine with the Recovery Services Vault."
                          },
                          "backupEngineState": {
                            "type": "string",
                            "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
                          },
                          "healthStatus": {
                            "type": "string",
                            "description": "Backup status of the backup engine."
                          },
                          "backupEngineType": {
                            "description": "Type of the backup engine.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "DpmBackupEngine",
                              "AzureBackupServerEngine"
                            ],
                            "x-ms-enum": {
                              "name": "BackupEngineType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "DpmBackupEngine",
                                  "value": "DpmBackupEngine"
                                },
                                {
                                  "name": "AzureBackupServerEngine",
                                  "value": "AzureBackupServerEngine"
                                }
                              ]
                            }
                          },
                          "canReRegister": {
                            "type": "boolean",
                            "description": "Flag indicating if the backup engine be registered, once already registered."
                          },
                          "backupEngineId": {
                            "type": "string",
                            "description": "ID of the backup engine."
                          },
                          "dpmVersion": {
                            "type": "string",
                            "description": "Backup engine version"
                          },
                          "azureBackupAgentVersion": {
                            "type": "string",
                            "description": "Backup agent version"
                          },
                          "isAzureBackupAgentUpgradeAvailable": {
                            "type": "boolean",
                            "description": "To check if backup agent upgrade available"
                          },
                          "isDpmUpgradeAvailable": {
                            "type": "boolean",
                            "description": "To check if backup engine upgrade available"
                          },
                          "extendedInfo": {
                            "description": "Extended info of the backupengine",
                            "type": "object",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "Database name of backup engine."
                              },
                              "protectedItemsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of protected items in the backup engine."
                              },
                              "protectedServersCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of protected servers in the backup engine."
                              },
                              "diskCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of disks in the backup engine."
                              },
                              "usedDiskSpace": {
                                "type": "number",
                                "format": "double",
                                "description": "Disk space used in the backup engine."
                              },
                              "availableDiskSpace": {
                                "type": "number",
                                "format": "double",
                                "description": "Disk space currently available in the backup engine."
                              },
                              "refreshedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Last refresh time in the backup engine."
                              },
                              "azureProtectedInstances": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Protected instances in the backup engine."
                              }
                            }
                          }
                        },
                        "discriminator": "backupEngineType",
                        "required": [
                          "backupEngineType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines/{backupEngineName}": {
      "get": {
        "operationId": "BackupEngines_Get",
        "tags": [
          "BackupEngines"
        ],
        "description": "Returns backup management server registered to Recovery Services Vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupEngineName",
            "in": "path",
            "description": "Name of the backup management server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The base backup engine class. All workload specific backup engines derive from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupEngineBaseResource properties",
                  "type": "object",
                  "properties": {
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly name of the backup engine."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backup engine.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "registrationStatus": {
                      "type": "string",
                      "description": "Registration status of the backup engine with the Recovery Services Vault."
                    },
                    "backupEngineState": {
                      "type": "string",
                      "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "Backup status of the backup engine."
                    },
                    "backupEngineType": {
                      "description": "Type of the backup engine.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "DpmBackupEngine",
                        "AzureBackupServerEngine"
                      ],
                      "x-ms-enum": {
                        "name": "BackupEngineType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "DpmBackupEngine",
                            "value": "DpmBackupEngine"
                          },
                          {
                            "name": "AzureBackupServerEngine",
                            "value": "AzureBackupServerEngine"
                          }
                        ]
                      }
                    },
                    "canReRegister": {
                      "type": "boolean",
                      "description": "Flag indicating if the backup engine be registered, once already registered."
                    },
                    "backupEngineId": {
                      "type": "string",
                      "description": "ID of the backup engine."
                    },
                    "dpmVersion": {
                      "type": "string",
                      "description": "Backup engine version"
                    },
                    "azureBackupAgentVersion": {
                      "type": "string",
                      "description": "Backup agent version"
                    },
                    "isAzureBackupAgentUpgradeAvailable": {
                      "type": "boolean",
                      "description": "To check if backup agent upgrade available"
                    },
                    "isDpmUpgradeAvailable": {
                      "type": "boolean",
                      "description": "To check if backup engine upgrade available"
                    },
                    "extendedInfo": {
                      "description": "Extended info of the backupengine",
                      "type": "object",
                      "properties": {
                        "databaseName": {
                          "type": "string",
                          "description": "Database name of backup engine."
                        },
                        "protectedItemsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of protected items in the backup engine."
                        },
                        "protectedServersCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of protected servers in the backup engine."
                        },
                        "diskCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of disks in the backup engine."
                        },
                        "usedDiskSpace": {
                          "type": "number",
                          "format": "double",
                          "description": "Disk space used in the backup engine."
                        },
                        "availableDiskSpace": {
                          "type": "number",
                          "format": "double",
                          "description": "Disk space currently available in the backup engine."
                        },
                        "refreshedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last refresh time in the backup engine."
                        },
                        "azureProtectedInstances": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Protected instances in the backup engine."
                        }
                      }
                    }
                  },
                  "discriminator": "backupEngineType",
                  "required": [
                    "backupEngineType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}": {
      "get": {
        "operationId": "ProtectionIntent_Get",
        "tags": [
          "ProtectionIntentResources"
        ],
        "description": "Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of the operation,\ncall the GetItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "intentObjectName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup ProtectionIntent.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionIntentResource properties",
                  "type": "object",
                  "properties": {
                    "protectionIntentItemType": {
                      "description": "backup protectionIntent type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureResourceItem",
                        "RecoveryServiceVaultItem",
                        "AzureWorkloadContainerAutoProtectionIntent",
                        "AzureWorkloadAutoProtectionIntent",
                        "AzureWorkloadSQLAutoProtectionIntent"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionIntentItemType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureResourceItem",
                            "value": "AzureResourceItem"
                          },
                          {
                            "name": "RecoveryServiceVaultItem",
                            "value": "RecoveryServiceVaultItem"
                          },
                          {
                            "name": "AzureWorkloadContainerAutoProtectionIntent",
                            "value": "AzureWorkloadContainerAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadAutoProtectionIntent",
                            "value": "AzureWorkloadAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadSQLAutoProtectionIntent",
                            "value": "AzureWorkloadSQLAutoProtectionIntent"
                          }
                        ]
                      }
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "itemId": {
                      "type": "string",
                      "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "protectionState": {
                      "description": "Backup state of this backup item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "NotProtected",
                        "Protecting",
                        "Protected",
                        "ProtectionFailed"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "NotProtected",
                            "value": "NotProtected"
                          },
                          {
                            "name": "Protecting",
                            "value": "Protecting"
                          },
                          {
                            "name": "Protected",
                            "value": "Protected"
                          },
                          {
                            "name": "ProtectionFailed",
                            "value": "ProtectionFailed"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "protectionIntentItemType",
                  "required": [
                    "protectionIntentItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ProtectionIntent_CreateOrUpdate",
        "tags": [
          "ProtectionIntentResources"
        ],
        "description": "Create Intent for Enabling backup of an item. This is a synchronous operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "intentObjectName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backed up item",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for backup ProtectionIntent.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionIntentResource properties",
                  "type": "object",
                  "properties": {
                    "protectionIntentItemType": {
                      "description": "backup protectionIntent type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureResourceItem",
                        "RecoveryServiceVaultItem",
                        "AzureWorkloadContainerAutoProtectionIntent",
                        "AzureWorkloadAutoProtectionIntent",
                        "AzureWorkloadSQLAutoProtectionIntent"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionIntentItemType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureResourceItem",
                            "value": "AzureResourceItem"
                          },
                          {
                            "name": "RecoveryServiceVaultItem",
                            "value": "RecoveryServiceVaultItem"
                          },
                          {
                            "name": "AzureWorkloadContainerAutoProtectionIntent",
                            "value": "AzureWorkloadContainerAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadAutoProtectionIntent",
                            "value": "AzureWorkloadAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadSQLAutoProtectionIntent",
                            "value": "AzureWorkloadSQLAutoProtectionIntent"
                          }
                        ]
                      }
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "itemId": {
                      "type": "string",
                      "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "protectionState": {
                      "description": "Backup state of this backup item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "NotProtected",
                        "Protecting",
                        "Protected",
                        "ProtectionFailed"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "NotProtected",
                            "value": "NotProtected"
                          },
                          {
                            "name": "Protecting",
                            "value": "Protecting"
                          },
                          {
                            "name": "Protected",
                            "value": "Protected"
                          },
                          {
                            "name": "ProtectionFailed",
                            "value": "ProtectionFailed"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "protectionIntentItemType",
                  "required": [
                    "protectionIntentItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProtectionIntentResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Base class for backup ProtectionIntent.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionIntentResource properties",
                  "type": "object",
                  "properties": {
                    "protectionIntentItemType": {
                      "description": "backup protectionIntent type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureResourceItem",
                        "RecoveryServiceVaultItem",
                        "AzureWorkloadContainerAutoProtectionIntent",
                        "AzureWorkloadAutoProtectionIntent",
                        "AzureWorkloadSQLAutoProtectionIntent"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionIntentItemType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureResourceItem",
                            "value": "AzureResourceItem"
                          },
                          {
                            "name": "RecoveryServiceVaultItem",
                            "value": "RecoveryServiceVaultItem"
                          },
                          {
                            "name": "AzureWorkloadContainerAutoProtectionIntent",
                            "value": "AzureWorkloadContainerAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadAutoProtectionIntent",
                            "value": "AzureWorkloadAutoProtectionIntent"
                          },
                          {
                            "name": "AzureWorkloadSQLAutoProtectionIntent",
                            "value": "AzureWorkloadSQLAutoProtectionIntent"
                          }
                        ]
                      }
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "itemId": {
                      "type": "string",
                      "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "protectionState": {
                      "description": "Backup state of this backup item.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "NotProtected",
                        "Protecting",
                        "Protected",
                        "ProtectionFailed"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "NotProtected",
                            "value": "NotProtected"
                          },
                          {
                            "name": "Protecting",
                            "value": "Protecting"
                          },
                          {
                            "name": "Protected",
                            "value": "Protected"
                          },
                          {
                            "name": "ProtectionFailed",
                            "value": "ProtectionFailed"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "protectionIntentItemType",
                  "required": [
                    "protectionIntentItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ProtectionIntent_Delete",
        "tags": [
          "ProtectionIntentResources"
        ],
        "description": "Used to remove intent from an item",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "intentObjectName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/operationResults/{operationId}": {
      "get": {
        "operationId": "ProtectionContainerRefreshOperationResults_Get",
        "description": "Provides the result of the refresh operation triggered by the BeginRefresh operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated with the container.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID associated with the operation whose result needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted."
          },
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectableContainers": {
      "get": {
        "operationId": "ProtectableContainers_List",
        "description": "Lists the containers that can be registered to Recovery Services Vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "fabricName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectableContainer resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Protectable Container Class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      },
                      "properties": {
                        "description": "ProtectableContainerResource properties",
                        "type": "object",
                        "properties": {
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the container."
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the container.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "protectableContainerType": {
                            "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Unknown",
                              "IaasVMContainer",
                              "IaasVMServiceContainer",
                              "DPMContainer",
                              "AzureBackupServerContainer",
                              "MABContainer",
                              "Cluster",
                              "AzureSqlContainer",
                              "Windows",
                              "VCenter",
                              "VMAppContainer",
                              "SQLAGWorkLoadContainer",
                              "StorageContainer",
                              "GenericContainer",
                              "Microsoft.ClassicCompute/virtualMachines",
                              "Microsoft.Compute/virtualMachines",
                              "AzureWorkloadContainer"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectableContainerType",
                              "modelAsString": false
                            }
                          },
                          "healthStatus": {
                            "type": "string",
                            "description": "Status of health of the container."
                          },
                          "containerId": {
                            "type": "string",
                            "description": "Fabric Id of the container such as ARM Id."
                          }
                        },
                        "discriminator": "protectableContainerType",
                        "required": [
                          "protectableContainerType"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}": {
      "get": {
        "operationId": "ProtectionContainers_Get",
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Gets details of the specific container registered to your Recovery Services Vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionContainerResource properties",
                  "type": "object",
                  "properties": {
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly name of the container."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the container.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "registrationStatus": {
                      "type": "string",
                      "description": "Status of registration of the container with the Recovery Services Vault."
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "Status of health of the container."
                    },
                    "containerType": {
                      "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Unknown",
                        "IaasVMContainer",
                        "IaasVMServiceContainer",
                        "DPMContainer",
                        "AzureBackupServerContainer",
                        "MABContainer",
                        "Cluster",
                        "AzureSqlContainer",
                        "Windows",
                        "VCenter",
                        "VMAppContainer",
                        "SQLAGWorkLoadContainer",
                        "StorageContainer",
                        "GenericContainer",
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines",
                        "AzureWorkloadContainer"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectableContainerType",
                        "modelAsString": false
                      }
                    },
                    "protectableObjectType": {
                      "type": "string",
                      "description": "Type of the protectable object associated with this container"
                    }
                  },
                  "discriminator": "containerType",
                  "required": [
                    "containerType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ProtectionContainers_Register",
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Registers the container with Recovery Services vault.\nThis is an asynchronous operation. To track the operation status, use location header to call get latest status of\nthe operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionContainerResource properties",
                  "type": "object",
                  "properties": {
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly name of the container."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the container.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "registrationStatus": {
                      "type": "string",
                      "description": "Status of registration of the container with the Recovery Services Vault."
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "Status of health of the container."
                    },
                    "containerType": {
                      "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Unknown",
                        "IaasVMContainer",
                        "IaasVMServiceContainer",
                        "DPMContainer",
                        "AzureBackupServerContainer",
                        "MABContainer",
                        "Cluster",
                        "AzureSqlContainer",
                        "Windows",
                        "VCenter",
                        "VMAppContainer",
                        "SQLAGWorkLoadContainer",
                        "StorageContainer",
                        "GenericContainer",
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines",
                        "AzureWorkloadContainer"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectableContainerType",
                        "modelAsString": false
                      }
                    },
                    "protectableObjectType": {
                      "type": "string",
                      "description": "Type of the protectable object associated with this container"
                    }
                  },
                  "discriminator": "containerType",
                  "required": [
                    "containerType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProtectionContainerResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionContainerResource properties",
                  "type": "object",
                  "properties": {
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly name of the container."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the container.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "registrationStatus": {
                      "type": "string",
                      "description": "Status of registration of the container with the Recovery Services Vault."
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "Status of health of the container."
                    },
                    "containerType": {
                      "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Unknown",
                        "IaasVMContainer",
                        "IaasVMServiceContainer",
                        "DPMContainer",
                        "AzureBackupServerContainer",
                        "MABContainer",
                        "Cluster",
                        "AzureSqlContainer",
                        "Windows",
                        "VCenter",
                        "VMAppContainer",
                        "SQLAGWorkLoadContainer",
                        "StorageContainer",
                        "GenericContainer",
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines",
                        "AzureWorkloadContainer"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectableContainerType",
                        "modelAsString": false
                      }
                    },
                    "protectableObjectType": {
                      "type": "string",
                      "description": "Type of the protectable object associated with this container"
                    }
                  },
                  "discriminator": "containerType",
                  "required": [
                    "containerType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ProtectionContainers_Unregister",
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Unregisters the given container from your Recovery Services Vault. This is an asynchronous operation. To determine\nwhether the backend service has finished processing the request, call Get Container Operation Result API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/inquire": {
      "post": {
        "operationId": "ProtectionContainers_Inquire",
        "tags": [
          "ProtectionContainers"
        ],
        "description": "This is an async operation and the results should be tracked using location header or Azure-async-url.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/items": {
      "get": {
        "operationId": "BackupWorkloadItems_List",
        "tags": [
          "BackupWorkloadItems"
        ],
        "description": "Provides a pageable list of workload item of a specific container according to the query filter and the pagination\nparameters.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of WorkloadItem resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      },
                      "properties": {
                        "description": "WorkloadItemResource properties",
                        "type": "object",
                        "properties": {
                          "backupManagementType": {
                            "type": "string",
                            "description": "Type of backup management to backup an item."
                          },
                          "workloadType": {
                            "type": "string",
                            "description": "Type of workload for the backup management"
                          },
                          "workloadItemType": {
                            "type": "string",
                            "description": "Type of the backup item."
                          },
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the backup item."
                          },
                          "protectionState": {
                            "description": "State of the back up item.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "NotProtected",
                              "Protecting",
                              "Protected",
                              "ProtectionFailed"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "NotProtected",
                                  "value": "NotProtected"
                                },
                                {
                                  "name": "Protecting",
                                  "value": "Protecting"
                                },
                                {
                                  "name": "Protected",
                                  "value": "Protected"
                                },
                                {
                                  "name": "ProtectionFailed",
                                  "value": "ProtectionFailed"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "workloadItemType",
                        "required": [
                          "workloadItemType"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/operationResults/{operationId}": {
      "get": {
        "operationId": "ProtectionContainerOperationResults_Get",
        "tags": [
          "ProtectionContainerOperationResults"
        ],
        "description": "Fetches the result of any operation on the container.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "backupFabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the ProtectionContainerResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the ProtectionContainerResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionContainerResource properties",
                  "type": "object",
                  "properties": {
                    "friendlyName": {
                      "type": "string",
                      "description": "Friendly name of the container."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the container.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "registrationStatus": {
                      "type": "string",
                      "description": "Status of registration of the container with the Recovery Services Vault."
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "Status of health of the container."
                    },
                    "containerType": {
                      "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Unknown",
                        "IaasVMContainer",
                        "IaasVMServiceContainer",
                        "DPMContainer",
                        "AzureBackupServerContainer",
                        "MABContainer",
                        "Cluster",
                        "AzureSqlContainer",
                        "Windows",
                        "VCenter",
                        "VMAppContainer",
                        "SQLAGWorkLoadContainer",
                        "StorageContainer",
                        "GenericContainer",
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines",
                        "AzureWorkloadContainer"
                      ],
                      "x-ms-enum": {
                        "name": "ProtectableContainerType",
                        "modelAsString": false
                      }
                    },
                    "protectableObjectType": {
                      "type": "string",
                      "description": "Type of the protectable object associated with this container"
                    }
                  },
                  "discriminator": "containerType",
                  "required": [
                    "containerType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}": {
      "get": {
        "operationId": "ProtectedItems_Get",
        "tags": [
          "ProtectedItems"
        ],
        "description": "Provides the details of the backed up item. This is an asynchronous operation. To know the status of the operation,\ncall the GetItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup items.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectedItemResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemType": {
                      "type": "string",
                      "description": "backup item type."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "workloadType": {
                      "description": "Type of workload this item represents.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "VM",
                        "FileFolder",
                        "AzureSqlDb",
                        "SQLDB",
                        "Exchange",
                        "Sharepoint",
                        "VMwareVM",
                        "SystemState",
                        "Client",
                        "GenericDataSource",
                        "SQLDataBase",
                        "AzureFileShare",
                        "SAPHanaDatabase",
                        "SAPAseDatabase",
                        "SAPHanaDBInstance"
                      ],
                      "x-ms-enum": {
                        "name": "DataSourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "VM",
                            "value": "VM"
                          },
                          {
                            "name": "FileFolder",
                            "value": "FileFolder"
                          },
                          {
                            "name": "AzureSqlDb",
                            "value": "AzureSqlDb"
                          },
                          {
                            "name": "SQLDB",
                            "value": "SQLDB"
                          },
                          {
                            "name": "Exchange",
                            "value": "Exchange"
                          },
                          {
                            "name": "Sharepoint",
                            "value": "Sharepoint"
                          },
                          {
                            "name": "VMwareVM",
                            "value": "VMwareVM"
                          },
                          {
                            "name": "SystemState",
                            "value": "SystemState"
                          },
                          {
                            "name": "Client",
                            "value": "Client"
                          },
                          {
                            "name": "GenericDataSource",
                            "value": "GenericDataSource"
                          },
                          {
                            "name": "SQLDataBase",
                            "value": "SQLDataBase"
                          },
                          {
                            "name": "AzureFileShare",
                            "value": "AzureFileShare"
                          },
                          {
                            "name": "SAPHanaDatabase",
                            "value": "SAPHanaDatabase"
                          },
                          {
                            "name": "SAPAseDatabase",
                            "value": "SAPAseDatabase"
                          },
                          {
                            "name": "SAPHanaDBInstance",
                            "value": "SAPHanaDBInstance"
                          }
                        ]
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "description": "Unique name of container"
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "lastRecoveryPoint": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                    },
                    "backupSetName": {
                      "type": "string",
                      "description": "Name of the backup set the backup item belongs to"
                    },
                    "createMode": {
                      "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Default",
                        "Recover"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "Recover",
                            "value": "Recover"
                          }
                        ]
                      }
                    },
                    "deferredDeleteTimeInUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time for deferred deletion in UTC"
                    },
                    "isScheduledForDeferredDelete": {
                      "type": "boolean",
                      "description": "Flag to identify whether the DS is scheduled for deferred delete"
                    },
                    "deferredDeleteTimeRemaining": {
                      "type": "string",
                      "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                    },
                    "isDeferredDeleteScheduleUpcoming": {
                      "type": "boolean",
                      "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                    },
                    "isRehydrate": {
                      "type": "boolean",
                      "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isArchiveEnabled": {
                      "type": "boolean",
                      "description": "Flag to identify whether datasource is protected in archive"
                    },
                    "policyName": {
                      "type": "string",
                      "description": "Name of the policy used for protection"
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "vaultId": {
                      "type": "string",
                      "description": "ID of the vault which protects this item",
                      "readOnly": true
                    }
                  },
                  "discriminator": "protectedItemType",
                  "required": [
                    "protectedItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ProtectedItems_CreateOrUpdate",
        "tags": [
          "ProtectedItems"
        ],
        "description": "Enables backup of an item or to modifies the backup policy information of an already backed up item. This is an\nasynchronous operation. To know the status of the operation, call the GetItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backed up item",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for backup items.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectedItemResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemType": {
                      "type": "string",
                      "description": "backup item type."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "workloadType": {
                      "description": "Type of workload this item represents.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "VM",
                        "FileFolder",
                        "AzureSqlDb",
                        "SQLDB",
                        "Exchange",
                        "Sharepoint",
                        "VMwareVM",
                        "SystemState",
                        "Client",
                        "GenericDataSource",
                        "SQLDataBase",
                        "AzureFileShare",
                        "SAPHanaDatabase",
                        "SAPAseDatabase",
                        "SAPHanaDBInstance"
                      ],
                      "x-ms-enum": {
                        "name": "DataSourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "VM",
                            "value": "VM"
                          },
                          {
                            "name": "FileFolder",
                            "value": "FileFolder"
                          },
                          {
                            "name": "AzureSqlDb",
                            "value": "AzureSqlDb"
                          },
                          {
                            "name": "SQLDB",
                            "value": "SQLDB"
                          },
                          {
                            "name": "Exchange",
                            "value": "Exchange"
                          },
                          {
                            "name": "Sharepoint",
                            "value": "Sharepoint"
                          },
                          {
                            "name": "VMwareVM",
                            "value": "VMwareVM"
                          },
                          {
                            "name": "SystemState",
                            "value": "SystemState"
                          },
                          {
                            "name": "Client",
                            "value": "Client"
                          },
                          {
                            "name": "GenericDataSource",
                            "value": "GenericDataSource"
                          },
                          {
                            "name": "SQLDataBase",
                            "value": "SQLDataBase"
                          },
                          {
                            "name": "AzureFileShare",
                            "value": "AzureFileShare"
                          },
                          {
                            "name": "SAPHanaDatabase",
                            "value": "SAPHanaDatabase"
                          },
                          {
                            "name": "SAPAseDatabase",
                            "value": "SAPAseDatabase"
                          },
                          {
                            "name": "SAPHanaDBInstance",
                            "value": "SAPHanaDBInstance"
                          }
                        ]
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "description": "Unique name of container"
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "lastRecoveryPoint": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                    },
                    "backupSetName": {
                      "type": "string",
                      "description": "Name of the backup set the backup item belongs to"
                    },
                    "createMode": {
                      "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Default",
                        "Recover"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "Recover",
                            "value": "Recover"
                          }
                        ]
                      }
                    },
                    "deferredDeleteTimeInUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time for deferred deletion in UTC"
                    },
                    "isScheduledForDeferredDelete": {
                      "type": "boolean",
                      "description": "Flag to identify whether the DS is scheduled for deferred delete"
                    },
                    "deferredDeleteTimeRemaining": {
                      "type": "string",
                      "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                    },
                    "isDeferredDeleteScheduleUpcoming": {
                      "type": "boolean",
                      "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                    },
                    "isRehydrate": {
                      "type": "boolean",
                      "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isArchiveEnabled": {
                      "type": "boolean",
                      "description": "Flag to identify whether datasource is protected in archive"
                    },
                    "policyName": {
                      "type": "string",
                      "description": "Name of the policy used for protection"
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "vaultId": {
                      "type": "string",
                      "description": "ID of the vault which protects this item",
                      "readOnly": true
                    }
                  },
                  "discriminator": "protectedItemType",
                  "required": [
                    "protectedItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProtectedItemResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Base class for backup items.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectedItemResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemType": {
                      "type": "string",
                      "description": "backup item type."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "workloadType": {
                      "description": "Type of workload this item represents.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "VM",
                        "FileFolder",
                        "AzureSqlDb",
                        "SQLDB",
                        "Exchange",
                        "Sharepoint",
                        "VMwareVM",
                        "SystemState",
                        "Client",
                        "GenericDataSource",
                        "SQLDataBase",
                        "AzureFileShare",
                        "SAPHanaDatabase",
                        "SAPAseDatabase",
                        "SAPHanaDBInstance"
                      ],
                      "x-ms-enum": {
                        "name": "DataSourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "VM",
                            "value": "VM"
                          },
                          {
                            "name": "FileFolder",
                            "value": "FileFolder"
                          },
                          {
                            "name": "AzureSqlDb",
                            "value": "AzureSqlDb"
                          },
                          {
                            "name": "SQLDB",
                            "value": "SQLDB"
                          },
                          {
                            "name": "Exchange",
                            "value": "Exchange"
                          },
                          {
                            "name": "Sharepoint",
                            "value": "Sharepoint"
                          },
                          {
                            "name": "VMwareVM",
                            "value": "VMwareVM"
                          },
                          {
                            "name": "SystemState",
                            "value": "SystemState"
                          },
                          {
                            "name": "Client",
                            "value": "Client"
                          },
                          {
                            "name": "GenericDataSource",
                            "value": "GenericDataSource"
                          },
                          {
                            "name": "SQLDataBase",
                            "value": "SQLDataBase"
                          },
                          {
                            "name": "AzureFileShare",
                            "value": "AzureFileShare"
                          },
                          {
                            "name": "SAPHanaDatabase",
                            "value": "SAPHanaDatabase"
                          },
                          {
                            "name": "SAPAseDatabase",
                            "value": "SAPAseDatabase"
                          },
                          {
                            "name": "SAPHanaDBInstance",
                            "value": "SAPHanaDBInstance"
                          }
                        ]
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "description": "Unique name of container"
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "lastRecoveryPoint": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                    },
                    "backupSetName": {
                      "type": "string",
                      "description": "Name of the backup set the backup item belongs to"
                    },
                    "createMode": {
                      "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Default",
                        "Recover"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "Recover",
                            "value": "Recover"
                          }
                        ]
                      }
                    },
                    "deferredDeleteTimeInUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time for deferred deletion in UTC"
                    },
                    "isScheduledForDeferredDelete": {
                      "type": "boolean",
                      "description": "Flag to identify whether the DS is scheduled for deferred delete"
                    },
                    "deferredDeleteTimeRemaining": {
                      "type": "string",
                      "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                    },
                    "isDeferredDeleteScheduleUpcoming": {
                      "type": "boolean",
                      "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                    },
                    "isRehydrate": {
                      "type": "boolean",
                      "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isArchiveEnabled": {
                      "type": "boolean",
                      "description": "Flag to identify whether datasource is protected in archive"
                    },
                    "policyName": {
                      "type": "string",
                      "description": "Name of the policy used for protection"
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "vaultId": {
                      "type": "string",
                      "description": "ID of the vault which protects this item",
                      "readOnly": true
                    }
                  },
                  "discriminator": "protectedItemType",
                  "required": [
                    "protectedItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      },
      "delete": {
        "operationId": "ProtectedItems_Delete",
        "tags": [
          "ProtectedItems"
        ],
        "description": "Used to disable backup of an item within a container. This is an asynchronous operation. To know the status of the\nrequest, call the GetItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/backup": {
      "post": {
        "operationId": "Backups_Trigger",
        "tags": [
          "Backups"
        ],
        "description": "Triggers backup for specified backed up item. This is an asynchronous operation. To know the status of the\noperation, call GetProtectedItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backup request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                },
                "properties": {
                  "description": "BackupRequestResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationResults/{operationId}": {
      "get": {
        "operationId": "ProtectedItemOperationResults_Get",
        "tags": [
          "ProtectedItemOperationResults"
        ],
        "description": "Fetches the result of any operation on the backup item.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "backupFabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the ProtectionContainerResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The name of the ProtectedItemResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the ProtectedItemResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup items.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectedItemResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemType": {
                      "type": "string",
                      "description": "backup item type."
                    },
                    "backupManagementType": {
                      "description": "Type of backup management for the backed up item.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "workloadType": {
                      "description": "Type of workload this item represents.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "VM",
                        "FileFolder",
                        "AzureSqlDb",
                        "SQLDB",
                        "Exchange",
                        "Sharepoint",
                        "VMwareVM",
                        "SystemState",
                        "Client",
                        "GenericDataSource",
                        "SQLDataBase",
                        "AzureFileShare",
                        "SAPHanaDatabase",
                        "SAPAseDatabase",
                        "SAPHanaDBInstance"
                      ],
                      "x-ms-enum": {
                        "name": "DataSourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "VM",
                            "value": "VM"
                          },
                          {
                            "name": "FileFolder",
                            "value": "FileFolder"
                          },
                          {
                            "name": "AzureSqlDb",
                            "value": "AzureSqlDb"
                          },
                          {
                            "name": "SQLDB",
                            "value": "SQLDB"
                          },
                          {
                            "name": "Exchange",
                            "value": "Exchange"
                          },
                          {
                            "name": "Sharepoint",
                            "value": "Sharepoint"
                          },
                          {
                            "name": "VMwareVM",
                            "value": "VMwareVM"
                          },
                          {
                            "name": "SystemState",
                            "value": "SystemState"
                          },
                          {
                            "name": "Client",
                            "value": "Client"
                          },
                          {
                            "name": "GenericDataSource",
                            "value": "GenericDataSource"
                          },
                          {
                            "name": "SQLDataBase",
                            "value": "SQLDataBase"
                          },
                          {
                            "name": "AzureFileShare",
                            "value": "AzureFileShare"
                          },
                          {
                            "name": "SAPHanaDatabase",
                            "value": "SAPHanaDatabase"
                          },
                          {
                            "name": "SAPAseDatabase",
                            "value": "SAPAseDatabase"
                          },
                          {
                            "name": "SAPHanaDBInstance",
                            "value": "SAPHanaDBInstance"
                          }
                        ]
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "description": "Unique name of container"
                    },
                    "sourceResourceId": {
                      "type": "string",
                      "description": "ARM ID of the resource to be backed up."
                    },
                    "policyId": {
                      "type": "string",
                      "description": "ID of the backup policy with which this item is backed up."
                    },
                    "lastRecoveryPoint": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                    },
                    "backupSetName": {
                      "type": "string",
                      "description": "Name of the backup set the backup item belongs to"
                    },
                    "createMode": {
                      "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Default",
                        "Recover"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "Recover",
                            "value": "Recover"
                          }
                        ]
                      }
                    },
                    "deferredDeleteTimeInUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time for deferred deletion in UTC"
                    },
                    "isScheduledForDeferredDelete": {
                      "type": "boolean",
                      "description": "Flag to identify whether the DS is scheduled for deferred delete"
                    },
                    "deferredDeleteTimeRemaining": {
                      "type": "string",
                      "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                    },
                    "isDeferredDeleteScheduleUpcoming": {
                      "type": "boolean",
                      "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                    },
                    "isRehydrate": {
                      "type": "boolean",
                      "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isArchiveEnabled": {
                      "type": "boolean",
                      "description": "Flag to identify whether datasource is protected in archive"
                    },
                    "policyName": {
                      "type": "string",
                      "description": "Name of the policy used for protection"
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "vaultId": {
                      "type": "string",
                      "description": "ID of the vault which protects this item",
                      "readOnly": true
                    }
                  },
                  "discriminator": "protectedItemType",
                  "required": [
                    "protectedItemType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationsStatus/{operationId}": {
      "get": {
        "operationId": "ProtectedItemOperationStatuses_Get",
        "tags": [
          "ProtectedItemOperationStatuses"
        ],
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed\nor failed. You can refer to the OperationStatus enum for all the possible states of the operation. Some operations\ncreate jobs. This method returns the list of jobs associated with the operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "backupFabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the ProtectionContainerResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The name of the ProtectedItemResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the ProtectedItemResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints": {
      "get": {
        "operationId": "RecoveryPoints_List",
        "tags": [
          "RecoveryPoints"
        ],
        "description": "Lists the backup copies for the backed up item.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of RecoveryPoint resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "RecoveryPointResource properties",
                        "type": "object",
                        "properties": {
                          "objectType": {
                            "type": "string",
                            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                          }
                        },
                        "discriminator": "objectType",
                        "required": [
                          "objectType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}": {
      "get": {
        "operationId": "RecoveryPoints_Get",
        "tags": [
          "RecoveryPoints"
        ],
        "description": "Provides the information of the backed up data identified using RecoveryPointID. This is an asynchronous operation.\nTo know the status of the operation, call the GetProtectedItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "RecoveryPointResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/move": {
      "post": {
        "operationId": "MoveRecoveryPoint",
        "tags": [
          "RecoveryPoints"
        ],
        "description": "Move recovery point from one datastore to another store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Move Resource Across Tiers Request",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "Gets the class type."
                },
                "sourceTierType": {
                  "description": "Source tier from where RP needs to be moved",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InstantRP",
                    "HardenedRP",
                    "ArchivedRP"
                  ],
                  "x-ms-enum": {
                    "name": "RecoveryPointTierType",
                    "modelAsString": false
                  }
                },
                "targetTierType": {
                  "description": "Target tier where RP needs to be moved",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InstantRP",
                    "HardenedRP",
                    "ArchivedRP"
                  ],
                  "x-ms-enum": {
                    "name": "RecoveryPointTierType",
                    "modelAsString": false
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/provisionInstantItemRecovery": {
      "post": {
        "operationId": "ItemLevelRecoveryConnections_Provision",
        "tags": [
          "ItemLevelRecoveryConnections"
        ],
        "description": "Provisions a script which invokes an iSCSI connection to the backup data. Executing this script opens a file\nexplorer displaying all the recoverable files and folders. This is an asynchronous operation. To know the status of\nprovisioning, call GetProtectedItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource ILR request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters to Provision ILR API.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                },
                "properties": {
                  "description": "ILRRequestResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/restore": {
      "post": {
        "operationId": "Restores_Trigger",
        "tags": [
          "Restores"
        ],
        "description": "Restores the specified backed up data. This is an asynchronous operation. To know the status of this API call, use\nGetProtectedItemOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource restore request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                },
                "properties": {
                  "description": "RestoreRequestResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/revokeInstantItemRecovery": {
      "post": {
        "operationId": "ItemLevelRecoveryConnections_Revoke",
        "tags": [
          "ItemLevelRecoveryConnections"
        ],
        "description": "Revokes an iSCSI connection which can be used to download a script. Executing this script opens a file explorer\ndisplaying all recoverable files and folders. This is an asynchronous operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPointsRecommendedForMove": {
      "post": {
        "operationId": "RecoveryPointsRecommendedForMove_List",
        "tags": [
          "RecoveryPointsRecommendedForMove"
        ],
        "description": "Lists the recovery points recommended for move to another tier",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the BackupFabricResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container whose details need to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose details are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "List Recovery points Recommended for Move Request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "ListRecoveryPointsRecommendedForMoveRequest Request",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "Gets the class type."
                },
                "excludedRPList": {
                  "type": "array",
                  "description": "List of Recovery Points excluded from Move",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of RecoveryPoint resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "RecoveryPointResource properties",
                        "type": "object",
                        "properties": {
                          "objectType": {
                            "type": "string",
                            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                          }
                        },
                        "discriminator": "objectType",
                        "required": [
                          "objectType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers": {
      "post": {
        "operationId": "ProtectionContainers_Refresh",
        "description": "Discovers all the containers in the subscription that can be backed up to Recovery Services Vault. This is an\nasynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated the container.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs": {
      "get": {
        "operationId": "BackupJobs_List",
        "tags": [
          "BackupJobs"
        ],
        "description": "Provides a pageable list of jobs.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of Job resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Defines workload agnostic properties for a job.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "JobResource properties",
                        "type": "object",
                        "properties": {
                          "entityFriendlyName": {
                            "type": "string",
                            "description": "Friendly name of the entity on which the current job is executing."
                          },
                          "backupManagementType": {
                            "description": "Backup management type to execute the current job.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation name."
                          },
                          "status": {
                            "type": "string",
                            "description": "Job status."
                          },
                          "startTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The start time."
                          },
                          "endTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The end time."
                          },
                          "activityId": {
                            "type": "string",
                            "description": "ActivityId of job."
                          },
                          "jobType": {
                            "type": "string",
                            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                          }
                        },
                        "discriminator": "jobType",
                        "required": [
                          "jobType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}": {
      "get": {
        "operationId": "JobDetails_Get",
        "tags": [
          "JobDetails"
        ],
        "description": "Gets extended information associated with the job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the job whose details are to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Defines workload agnostic properties for a job.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "JobResource properties",
                  "type": "object",
                  "properties": {
                    "entityFriendlyName": {
                      "type": "string",
                      "description": "Friendly name of the entity on which the current job is executing."
                    },
                    "backupManagementType": {
                      "description": "Backup management type to execute the current job.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "AzureIaasVM",
                        "MAB",
                        "DPM",
                        "AzureBackupServer",
                        "AzureSql",
                        "AzureStorage",
                        "AzureWorkload",
                        "DefaultBackup"
                      ],
                      "x-ms-enum": {
                        "name": "BackupManagementType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "AzureIaasVM",
                            "value": "AzureIaasVM"
                          },
                          {
                            "name": "MAB",
                            "value": "MAB"
                          },
                          {
                            "name": "DPM",
                            "value": "DPM"
                          },
                          {
                            "name": "AzureBackupServer",
                            "value": "AzureBackupServer"
                          },
                          {
                            "name": "AzureSql",
                            "value": "AzureSql"
                          },
                          {
                            "name": "AzureStorage",
                            "value": "AzureStorage"
                          },
                          {
                            "name": "AzureWorkload",
                            "value": "AzureWorkload"
                          },
                          {
                            "name": "DefaultBackup",
                            "value": "DefaultBackup"
                          }
                        ]
                      }
                    },
                    "operation": {
                      "type": "string",
                      "description": "The operation name."
                    },
                    "status": {
                      "type": "string",
                      "description": "Job status."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time."
                    },
                    "endTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time."
                    },
                    "activityId": {
                      "type": "string",
                      "description": "ActivityId of job."
                    },
                    "jobType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "jobType",
                  "required": [
                    "jobType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/cancel": {
      "post": {
        "operationId": "JobCancellations_Trigger",
        "tags": [
          "JobCancellations"
        ],
        "description": "Cancels a job. This is an asynchronous operation. To know the status of the cancellation, call\nGetCancelOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the job whose details are to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/operationResults/{operationId}": {
      "get": {
        "operationId": "JobOperationResults_Get",
        "tags": [
          "JobOperationResults"
        ],
        "description": "Fetches the result of any operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the JobResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the JobResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/operationResults/{operationId}": {
      "get": {
        "operationId": "ExportJobsOperationResults_Get",
        "tags": [
          "ExportJobsOperationResults"
        ],
        "description": "Gets the operation result of operation triggered by Export Jobs API. If the operation is successful, then it also\ncontains URL of a Blob and a SAS key to access the same. The blob contains exported jobs in JSON serialized format.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the JobResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for operation result info.",
              "properties": {
                "statusCode": {
                  "description": "HTTP Status Code of the operation.",
                  "type": "string",
                  "enum": [
                    "Continue",
                    "SwitchingProtocols",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultipleChoices",
                    "Ambiguous",
                    "MovedPermanently",
                    "Moved",
                    "Found",
                    "Redirect",
                    "SeeOther",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "RedirectKeepVerb",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "UpgradeRequired",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported"
                  ],
                  "x-ms-enum": {
                    "name": "HttpStatusCode",
                    "modelAsString": false
                  }
                },
                "headers": {
                  "type": "object",
                  "description": "HTTP headers associated with this operation.",
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "operation": {
                  "description": "OperationResultInfoBaseResource operation",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "type": "object",
              "description": "Base class for operation result info.",
              "properties": {
                "statusCode": {
                  "description": "HTTP Status Code of the operation.",
                  "type": "string",
                  "enum": [
                    "Continue",
                    "SwitchingProtocols",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultipleChoices",
                    "Ambiguous",
                    "MovedPermanently",
                    "Moved",
                    "Found",
                    "Redirect",
                    "SeeOther",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "RedirectKeepVerb",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "UpgradeRequired",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported"
                  ],
                  "x-ms-enum": {
                    "name": "HttpStatusCode",
                    "modelAsString": false
                  }
                },
                "headers": {
                  "type": "object",
                  "description": "HTTP headers associated with this operation.",
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "operation": {
                  "description": "OperationResultInfoBaseResource operation",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobsExport": {
      "post": {
        "operationId": "Jobs_Export",
        "description": "Triggers export of jobs specified by filters and returns an OperationID to track.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperationResults/{operationId}": {
      "get": {
        "operationId": "BackupOperationResults_Get",
        "description": "Provides the status of the delete operations such as deleting backed up item. Once the operation has started, the\nstatus code in the response would be Accepted. It will continue to be in this state till it reaches completion. On\nsuccessful completion, the status code will be OK. This method expects OperationID as an argument. OperationID is\npart of the Location header of the operation response.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID which represents the operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted."
          },
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperations/{operationId}": {
      "get": {
        "operationId": "BackupOperationStatuses_Get",
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed\nor failed. You can refer to the OperationStatus enum for all the possible states of an operation. Some operations\ncreate jobs. This method returns the list of jobs when the operation is complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID which represents the operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies": {
      "get": {
        "operationId": "BackupPolicies_List",
        "tags": [
          "BackupPolicies"
        ],
        "description": "Lists of backup policies associated with Recovery Services Vault. API provides pagination parameters to fetch\nscoped results.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectionPolicy resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ProtectionPolicyResource properties",
                        "type": "object",
                        "properties": {
                          "protectedItemsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of items associated with this policy."
                          },
                          "backupManagementType": {
                            "type": "string",
                            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                          },
                          "resourceGuardOperationRequests": {
                            "type": "array",
                            "description": "ResourceGuard Operation Requests",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "discriminator": "backupManagementType",
                        "required": [
                          "backupManagementType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}": {
      "get": {
        "operationId": "ProtectionPolicies_Get",
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous\noperation. Status of the operation can be fetched using GetPolicyOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy information to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionPolicyResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of items associated with this policy."
                    },
                    "backupManagementType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "discriminator": "backupManagementType",
                  "required": [
                    "backupManagementType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ProtectionPolicies_CreateOrUpdate",
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can be fetched\nusing GetPolicyOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy information to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backup policy",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionPolicyResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of items associated with this policy."
                    },
                    "backupManagementType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "discriminator": "backupManagementType",
                  "required": [
                    "backupManagementType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProtectionPolicyResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionPolicyResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of items associated with this policy."
                    },
                    "backupManagementType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "discriminator": "backupManagementType",
                  "required": [
                    "backupManagementType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      },
      "delete": {
        "operationId": "ProtectionPolicies_Delete",
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of the\noperation can be fetched using GetProtectionPolicyOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy information to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operationResults/{operationId}": {
      "get": {
        "operationId": "ProtectionPolicyOperationResults_Get",
        "tags": [
          "ProtectionPolicyOperationResults"
        ],
        "description": "Provides the result of an operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the ProtectionPolicyResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the ProtectionPolicyResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ProtectionPolicyResource properties",
                  "type": "object",
                  "properties": {
                    "protectedItemsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of items associated with this policy."
                    },
                    "backupManagementType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "discriminator": "backupManagementType",
                  "required": [
                    "backupManagementType"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operations/{operationId}": {
      "get": {
        "operationId": "ProtectionPolicyOperationStatuses_Get",
        "tags": [
          "ProtectionPolicyOperationStatuses"
        ],
        "description": "Provides the status of the asynchronous operations like backup, restore. The status can be in progress, completed\nor failed. You can refer to the Operation Status enum for all the possible states of an operation. Some operations\ncreate jobs. This method returns the list of jobs associated with operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the ProtectionPolicyResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the ProtectionPolicyResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems": {
      "get": {
        "operationId": "BackupProtectableItems_List",
        "description": "Provides a pageable list of protectable objects within your subscription according to the query filter and the\npagination parameters.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of WorkloadProtectableItem resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      },
                      "properties": {
                        "description": "WorkloadProtectableItemResource properties",
                        "type": "object",
                        "properties": {
                          "backupManagementType": {
                            "type": "string",
                            "description": "Type of backup management to backup an item."
                          },
                          "workloadType": {
                            "type": "string",
                            "description": "Type of workload for the backup management"
                          },
                          "protectableItemType": {
                            "type": "string",
                            "description": "Type of the backup item."
                          },
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the backup item."
                          },
                          "protectionState": {
                            "description": "State of the back up item.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "NotProtected",
                              "Protecting",
                              "Protected",
                              "ProtectionFailed"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "NotProtected",
                                  "value": "NotProtected"
                                },
                                {
                                  "name": "Protecting",
                                  "value": "Protecting"
                                },
                                {
                                  "name": "Protected",
                                  "value": "Protected"
                                },
                                {
                                  "name": "ProtectionFailed",
                                  "value": "ProtectionFailed"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "protectableItemType",
                        "required": [
                          "protectableItemType"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems": {
      "get": {
        "operationId": "BackupProtectedItems_List",
        "description": "Provides a pageable list of all items that are backed up within a vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectedItem resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup items.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ProtectedItemResource properties",
                        "type": "object",
                        "properties": {
                          "protectedItemType": {
                            "type": "string",
                            "description": "backup item type."
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the backed up item.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "workloadType": {
                            "description": "Type of workload this item represents.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "VM",
                              "FileFolder",
                              "AzureSqlDb",
                              "SQLDB",
                              "Exchange",
                              "Sharepoint",
                              "VMwareVM",
                              "SystemState",
                              "Client",
                              "GenericDataSource",
                              "SQLDataBase",
                              "AzureFileShare",
                              "SAPHanaDatabase",
                              "SAPAseDatabase",
                              "SAPHanaDBInstance"
                            ],
                            "x-ms-enum": {
                              "name": "DataSourceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "VM",
                                  "value": "VM"
                                },
                                {
                                  "name": "FileFolder",
                                  "value": "FileFolder"
                                },
                                {
                                  "name": "AzureSqlDb",
                                  "value": "AzureSqlDb"
                                },
                                {
                                  "name": "SQLDB",
                                  "value": "SQLDB"
                                },
                                {
                                  "name": "Exchange",
                                  "value": "Exchange"
                                },
                                {
                                  "name": "Sharepoint",
                                  "value": "Sharepoint"
                                },
                                {
                                  "name": "VMwareVM",
                                  "value": "VMwareVM"
                                },
                                {
                                  "name": "SystemState",
                                  "value": "SystemState"
                                },
                                {
                                  "name": "Client",
                                  "value": "Client"
                                },
                                {
                                  "name": "GenericDataSource",
                                  "value": "GenericDataSource"
                                },
                                {
                                  "name": "SQLDataBase",
                                  "value": "SQLDataBase"
                                },
                                {
                                  "name": "AzureFileShare",
                                  "value": "AzureFileShare"
                                },
                                {
                                  "name": "SAPHanaDatabase",
                                  "value": "SAPHanaDatabase"
                                },
                                {
                                  "name": "SAPAseDatabase",
                                  "value": "SAPAseDatabase"
                                },
                                {
                                  "name": "SAPHanaDBInstance",
                                  "value": "SAPHanaDBInstance"
                                }
                              ]
                            }
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Unique name of container"
                          },
                          "sourceResourceId": {
                            "type": "string",
                            "description": "ARM ID of the resource to be backed up."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "ID of the backup policy with which this item is backed up."
                          },
                          "lastRecoveryPoint": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                          },
                          "backupSetName": {
                            "type": "string",
                            "description": "Name of the backup set the backup item belongs to"
                          },
                          "createMode": {
                            "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Default",
                              "Recover"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Recover",
                                  "value": "Recover"
                                }
                              ]
                            }
                          },
                          "deferredDeleteTimeInUTC": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time for deferred deletion in UTC"
                          },
                          "isScheduledForDeferredDelete": {
                            "type": "boolean",
                            "description": "Flag to identify whether the DS is scheduled for deferred delete"
                          },
                          "deferredDeleteTimeRemaining": {
                            "type": "string",
                            "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                          },
                          "isDeferredDeleteScheduleUpcoming": {
                            "type": "boolean",
                            "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                          },
                          "isRehydrate": {
                            "type": "boolean",
                            "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                          },
                          "resourceGuardOperationRequests": {
                            "type": "array",
                            "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isArchiveEnabled": {
                            "type": "boolean",
                            "description": "Flag to identify whether datasource is protected in archive"
                          },
                          "policyName": {
                            "type": "string",
                            "description": "Name of the policy used for protection"
                          },
                          "softDeleteRetentionPeriodInDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Soft delete retention period in days"
                          },
                          "vaultId": {
                            "type": "string",
                            "description": "ID of the vault which protects this item",
                            "readOnly": true
                          }
                        },
                        "discriminator": "protectedItemType",
                        "required": [
                          "protectedItemType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers": {
      "get": {
        "operationId": "BackupProtectionContainers_List",
        "description": "Lists the containers registered to Recovery Services Vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectionContainer resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ProtectionContainerResource properties",
                        "type": "object",
                        "properties": {
                          "friendlyName": {
                            "type": "string",
                            "description": "Friendly name of the container."
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the container.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "registrationStatus": {
                            "type": "string",
                            "description": "Status of registration of the container with the Recovery Services Vault."
                          },
                          "healthStatus": {
                            "type": "string",
                            "description": "Status of health of the container."
                          },
                          "containerType": {
                            "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Unknown",
                              "IaasVMContainer",
                              "IaasVMServiceContainer",
                              "DPMContainer",
                              "AzureBackupServerContainer",
                              "MABContainer",
                              "Cluster",
                              "AzureSqlContainer",
                              "Windows",
                              "VCenter",
                              "VMAppContainer",
                              "SQLAGWorkLoadContainer",
                              "StorageContainer",
                              "GenericContainer",
                              "Microsoft.ClassicCompute/virtualMachines",
                              "Microsoft.Compute/virtualMachines",
                              "AzureWorkloadContainer"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectableContainerType",
                              "modelAsString": false
                            }
                          },
                          "protectableObjectType": {
                            "type": "string",
                            "description": "Type of the protectable object associated with this container"
                          }
                        },
                        "discriminator": "containerType",
                        "required": [
                          "containerType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionIntents": {
      "get": {
        "operationId": "BackupProtectionIntent_List",
        "description": "Provides a pageable list of all intents that are present within a vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ProtectionIntent resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "Base class for backup ProtectionIntent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ProtectionIntentResource properties",
                        "type": "object",
                        "properties": {
                          "protectionIntentItemType": {
                            "description": "backup protectionIntent type.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureResourceItem",
                              "RecoveryServiceVaultItem",
                              "AzureWorkloadContainerAutoProtectionIntent",
                              "AzureWorkloadAutoProtectionIntent",
                              "AzureWorkloadSQLAutoProtectionIntent"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectionIntentItemType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureResourceItem",
                                  "value": "AzureResourceItem"
                                },
                                {
                                  "name": "RecoveryServiceVaultItem",
                                  "value": "RecoveryServiceVaultItem"
                                },
                                {
                                  "name": "AzureWorkloadContainerAutoProtectionIntent",
                                  "value": "AzureWorkloadContainerAutoProtectionIntent"
                                },
                                {
                                  "name": "AzureWorkloadAutoProtectionIntent",
                                  "value": "AzureWorkloadAutoProtectionIntent"
                                },
                                {
                                  "name": "AzureWorkloadSQLAutoProtectionIntent",
                                  "value": "AzureWorkloadSQLAutoProtectionIntent"
                                }
                              ]
                            }
                          },
                          "backupManagementType": {
                            "description": "Type of backup management for the backed up item.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "AzureIaasVM",
                              "MAB",
                              "DPM",
                              "AzureBackupServer",
                              "AzureSql",
                              "AzureStorage",
                              "AzureWorkload",
                              "DefaultBackup"
                            ],
                            "x-ms-enum": {
                              "name": "BackupManagementType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "AzureIaasVM",
                                  "value": "AzureIaasVM"
                                },
                                {
                                  "name": "MAB",
                                  "value": "MAB"
                                },
                                {
                                  "name": "DPM",
                                  "value": "DPM"
                                },
                                {
                                  "name": "AzureBackupServer",
                                  "value": "AzureBackupServer"
                                },
                                {
                                  "name": "AzureSql",
                                  "value": "AzureSql"
                                },
                                {
                                  "name": "AzureStorage",
                                  "value": "AzureStorage"
                                },
                                {
                                  "name": "AzureWorkload",
                                  "value": "AzureWorkload"
                                },
                                {
                                  "name": "DefaultBackup",
                                  "value": "DefaultBackup"
                                }
                              ]
                            }
                          },
                          "sourceResourceId": {
                            "type": "string",
                            "description": "ARM ID of the resource to be backed up."
                          },
                          "itemId": {
                            "type": "string",
                            "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
                          },
                          "policyId": {
                            "type": "string",
                            "description": "ID of the backup policy with which this item is backed up."
                          },
                          "protectionState": {
                            "description": "Backup state of this backup item.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "NotProtected",
                              "Protecting",
                              "Protected",
                              "ProtectionFailed"
                            ],
                            "x-ms-enum": {
                              "name": "ProtectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "NotProtected",
                                  "value": "NotProtected"
                                },
                                {
                                  "name": "Protecting",
                                  "value": "Protecting"
                                },
                                {
                                  "name": "Protected",
                                  "value": "Protected"
                                },
                                {
                                  "name": "ProtectionFailed",
                                  "value": "ProtectionFailed"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "protectionIntentItemType",
                        "required": [
                          "protectionIntentItemType"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupResourceGuardProxies": {
      "get": {
        "operationId": "ResourceGuardProxies_Get",
        "tags": [
          "ResourceGuardProxies"
        ],
        "description": "List the ResourceGuardProxies under vault",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of ResourceGuardProxyBase resources",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "List of resources.",
                  "items": {
                    "type": "object",
                    "description": "",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ResourceGuardProxyBaseResource properties",
                        "type": "object",
                        "properties": {
                          "resourceGuardResourceId": {
                            "type": "string"
                          },
                          "resourceGuardOperationDetails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "vaultCriticalOperation": {
                                  "type": "string"
                                },
                                "defaultResourceRequest": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "lastUpdatedTime": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "resourceGuardResourceId"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Optional ETag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}": {
      "get": {
        "operationId": "ResourceGuardProxy_Get",
        "tags": [
          "ResourceGuardProxy"
        ],
        "description": "Returns ResourceGuardProxy under vault and with the name referenced in request",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ResourceGuardProxyBaseResource properties",
                  "type": "object",
                  "properties": {
                    "resourceGuardResourceId": {
                      "type": "string"
                    },
                    "resourceGuardOperationDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "vaultCriticalOperation": {
                            "type": "string"
                          },
                          "defaultResourceRequest": {
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "lastUpdatedTime": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceGuardResourceId"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ResourceGuardProxy_Put",
        "tags": [
          "ResourceGuardProxy"
        ],
        "description": "Add or Update ResourceGuardProxy under vault\nSecures vault critical operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ResourceGuardProxyBaseResource properties",
                  "type": "object",
                  "properties": {
                    "resourceGuardResourceId": {
                      "type": "string"
                    },
                    "resourceGuardOperationDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "vaultCriticalOperation": {
                            "type": "string"
                          },
                          "defaultResourceRequest": {
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "lastUpdatedTime": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceGuardResourceId"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceGuardProxyBaseResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ResourceGuardProxyBaseResource properties",
                  "type": "object",
                  "properties": {
                    "resourceGuardResourceId": {
                      "type": "string"
                    },
                    "resourceGuardOperationDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "vaultCriticalOperation": {
                            "type": "string"
                          },
                          "defaultResourceRequest": {
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "lastUpdatedTime": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceGuardResourceId"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ResourceGuardProxy_Delete",
        "tags": [
          "ResourceGuardProxy"
        ],
        "description": "Delete ResourceGuardProxy under vault",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}/unlockDelete": {
      "post": {
        "operationId": "ResourceGuardProxy_UnlockDelete",
        "tags": [
          "ResourceGuardProxy"
        ],
        "description": "Secures delete ResourceGuardProxy operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body of unlock delete API.",
              "properties": {
                "resourceGuardOperationRequests": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resourceToBeDeleted": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response of Unlock Delete API.",
              "properties": {
                "unlockDeleteExpiryTime": {
                  "type": "string",
                  "description": "This is the time when unlock delete privileges will get expired."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupSecurityPIN": {
      "post": {
        "operationId": "SecurityPINs_Get",
        "description": "Get the security PIN.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "security pin request",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Base class for get security pin request body",
              "properties": {
                "resourceGuardOperationRequests": {
                  "type": "array",
                  "description": "ResourceGuard Operation Requests",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The token information details.",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Token value."
                },
                "expiryTimeInUtcTicks": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Expiry time of token."
                },
                "securityPIN": {
                  "type": "string",
                  "description": "Security PIN"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/fetchTieringCost": {
      "post": {
        "operationId": "FetchTieringCost_Post",
        "description": "Provides the details of the tiering related sizes and cost.\nStatus of the operation can be fetched using GetTieringCostOperationStatus API and result using GetTieringCostOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Fetch Tiering Cost Request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
              "properties": {
                "sourceTierType": {
                  "description": "Source tier for the request",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InstantRP",
                    "HardenedRP",
                    "ArchivedRP"
                  ],
                  "x-ms-enum": {
                    "name": "RecoveryPointTierType",
                    "modelAsString": false
                  }
                },
                "targetTierType": {
                  "description": "target tier for the request",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InstantRP",
                    "HardenedRP",
                    "ArchivedRP"
                  ],
                  "x-ms-enum": {
                    "name": "RecoveryPointTierType",
                    "modelAsString": false
                  }
                },
                "objectType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                }
              },
              "discriminator": "objectType",
              "required": [
                "sourceTierType",
                "targetTierType",
                "objectType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for tiering cost response",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                }
              },
              "discriminator": "objectType",
              "required": [
                "objectType"
              ]
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/operationResults/{operationId}": {
      "get": {
        "operationId": "GetTieringCostOperationResult_Get",
        "description": "Gets the result of async operation for tiering cost",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Base class for tiering cost response",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                }
              },
              "discriminator": "objectType",
              "required": [
                "objectType"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/operationsStatus/{operationId}": {
      "get": {
        "operationId": "TieringCostOperationStatus_Get",
        "description": "Gets the status of async operations of tiering cost",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTriggerValidateOperation": {
      "post": {
        "operationId": "ValidateOperation_Trigger",
        "description": "Validate operation for specified backed up item in the form of an asynchronous operation. Returns tracking headers which can be tracked using GetValidateOperationResult API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource validate operation request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for validate operation request.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Recovery point ID."
                },
                "properties": {
                  "description": "ValidateOperationRequestResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              },
              "required": [
                "id",
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries": {
      "get": {
        "operationId": "BackupUsageSummaries_List",
        "description": "Fetches the backup management usage summaries of the vault.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Backup management usage for vault.",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
                },
                "value": {
                  "type": "array",
                  "description": "The list of backup management usages for the given vault.",
                  "items": {
                    "type": "object",
                    "description": "Backup management usages of a vault.",
                    "properties": {
                      "unit": {
                        "description": "Unit of the usage.",
                        "type": "string",
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond"
                        ],
                        "x-ms-enum": {
                          "name": "UsagesUnit",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Count",
                              "value": "Count"
                            },
                            {
                              "name": "Bytes",
                              "value": "Bytes"
                            },
                            {
                              "name": "Seconds",
                              "value": "Seconds"
                            },
                            {
                              "name": "Percent",
                              "value": "Percent"
                            },
                            {
                              "name": "CountPerSecond",
                              "value": "CountPerSecond"
                            },
                            {
                              "name": "BytesPerSecond",
                              "value": "BytesPerSecond"
                            }
                          ]
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "description": "Quota period of usage."
                      },
                      "nextResetTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Next reset time of usage."
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Current value of usage."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Limit of usage."
                      },
                      "name": {
                        "description": "Name of usage.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of usage."
                          },
                          "localizedValue": {
                            "type": "string",
                            "description": "Localized value of usage."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupValidateOperation": {
      "post": {
        "operationId": "Operation_Validate",
        "description": "Validate operation for specified backed up item. This is a synchronous operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource validate operation request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Base class for validate operation request.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Recovery point ID."
                },
                "properties": {
                  "description": "ValidateOperationRequestResource properties",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              },
              "required": [
                "id",
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "validateOperationResponse": {
                  "description": "Base class for validate operation response.",
                  "type": "object",
                  "properties": {
                    "validationResults": {
                      "type": "array",
                      "description": "Gets the validation result",
                      "items": {
                        "type": "object",
                        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Error code.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Error Message related to the Code.",
                            "readOnly": true
                          },
                          "recommendations": {
                            "type": "array",
                            "description": "List of recommendation strings.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "code"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupValidateOperationResults/{operationId}": {
      "get": {
        "operationId": "ValidateOperationResults_Get",
        "description": "Fetches the result of a triggered validate operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID which represents the operation whose result needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "validateOperationResponse": {
                  "description": "Base class for validate operation response.",
                  "type": "object",
                  "properties": {
                    "validationResults": {
                      "type": "array",
                      "description": "Gets the validation result",
                      "items": {
                        "type": "object",
                        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Error code.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Error Message related to the Code.",
                            "readOnly": true
                          },
                          "recommendations": {
                            "type": "array",
                            "description": "List of recommendation strings.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "code"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupValidateOperationsStatuses/{operationId}": {
      "get": {
        "operationId": "ValidateOperationStatuses_Get",
        "description": "Fetches the status of a triggered validate operation. The status can be in progress, completed\nor failed. You can refer to the OperationStatus enum for all the possible states of the operation.\nIf operation has completed, this method returns the list of errors obtained while validating the operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the recovery services vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID represents the operation whose status needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig": {
      "get": {
        "operationId": "BackupResourceVaultConfigs_Get",
        "tags": [
          "BackupResourceVaultConfigs"
        ],
        "description": "Fetches resource vault config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Backup resource vault config details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceVaultConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "enhancedSecurityState": {
                      "description": "Enabled or Disabled.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "softDeleteFeatureState": {
                      "description": "Soft Delete feature state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteFeatureState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSoftDeleteFeatureStateEditable": {
                      "type": "boolean",
                      "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BackupResourceVaultConfigs_Put",
        "tags": [
          "BackupResourceVaultConfigs"
        ],
        "description": "Updates vault security config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource config request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Backup resource vault config details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceVaultConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "enhancedSecurityState": {
                      "description": "Enabled or Disabled.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "softDeleteFeatureState": {
                      "description": "Soft Delete feature state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteFeatureState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSoftDeleteFeatureStateEditable": {
                      "type": "boolean",
                      "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupResourceVaultConfigResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Backup resource vault config details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceVaultConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "enhancedSecurityState": {
                      "description": "Enabled or Disabled.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "softDeleteFeatureState": {
                      "description": "Soft Delete feature state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteFeatureState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSoftDeleteFeatureStateEditable": {
                      "type": "boolean",
                      "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "BackupResourceVaultConfigs_Update",
        "tags": [
          "BackupResourceVaultConfigs"
        ],
        "description": "Updates vault security config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource config request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Backup resource vault config details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceVaultConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "enhancedSecurityState": {
                      "description": "Enabled or Disabled.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "softDeleteFeatureState": {
                      "description": "Soft Delete feature state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteFeatureState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSoftDeleteFeatureStateEditable": {
                      "type": "boolean",
                      "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Backup resource vault config details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceVaultConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "enhancedSecurityState": {
                      "description": "Enabled or Disabled.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "softDeleteFeatureState": {
                      "description": "Soft Delete feature state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteFeatureState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "resourceGuardOperationRequests": {
                      "type": "array",
                      "description": "ResourceGuard Operation Requests",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSoftDeleteFeatureStateEditable": {
                      "type": "boolean",
                      "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig": {
      "get": {
        "operationId": "BackupResourceStorageConfigsNonCRR_Get",
        "tags": [
          "BackupResourceStorageConfigsNonCRR"
        ],
        "description": "Fetches resource storage config.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The resource storage details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "crossRegionRestoreFlag": {
                      "type": "boolean",
                      "description": "Opt in details of Cross Region Restore feature."
                    },
                    "dedupState": {
                      "description": "Vault Dedup state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DedupState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "xcoolState": {
                      "description": "Vault x-cool state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "XcoolState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BackupResourceStorageConfigsNonCRR_Update",
        "tags": [
          "BackupResourceStorageConfigsNonCRR"
        ],
        "description": "Updates vault storage model type.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Vault storage config request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource storage details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "crossRegionRestoreFlag": {
                      "type": "boolean",
                      "description": "Opt in details of Cross Region Restore feature."
                    },
                    "dedupState": {
                      "description": "Vault Dedup state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DedupState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "xcoolState": {
                      "description": "Vault x-cool state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "XcoolState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupResourceConfigResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The resource storage details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "crossRegionRestoreFlag": {
                      "type": "boolean",
                      "description": "Opt in details of Cross Region Restore feature."
                    },
                    "dedupState": {
                      "description": "Vault Dedup state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DedupState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "xcoolState": {
                      "description": "Vault x-cool state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "XcoolState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "BackupResourceStorageConfigsNonCRR_Patch",
        "tags": [
          "BackupResourceStorageConfigsNonCRR"
        ],
        "description": "Updates vault storage model type.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Vault storage config request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource storage details.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "BackupResourceConfigResource properties",
                  "type": "object",
                  "properties": {
                    "storageModelType": {
                      "description": "Storage type",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageType": {
                      "description": "Storage type.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "GeoRedundant",
                        "LocallyRedundant",
                        "ZoneRedundant",
                        "ReadAccessGeoZoneRedundant"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "GeoRedundant",
                            "value": "GeoRedundant"
                          },
                          {
                            "name": "LocallyRedundant",
                            "value": "LocallyRedundant"
                          },
                          {
                            "name": "ZoneRedundant",
                            "value": "ZoneRedundant"
                          },
                          {
                            "name": "ReadAccessGeoZoneRedundant",
                            "value": "ReadAccessGeoZoneRedundant"
                          }
                        ]
                      }
                    },
                    "storageTypeState": {
                      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Locked",
                        "Unlocked"
                      ],
                      "x-ms-enum": {
                        "name": "StorageTypeState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          }
                        ]
                      }
                    },
                    "crossRegionRestoreFlag": {
                      "type": "boolean",
                      "description": "Opt in details of Cross Region Restore feature."
                    },
                    "dedupState": {
                      "description": "Vault Dedup state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DedupState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "xcoolState": {
                      "description": "Vault x-cool state",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "XcoolState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/operationResults/{operationId}": {
      "get": {
        "operationId": "BMSPrepareDataMoveOperationResult_Get",
        "tags": [
          "BMSPrepareDataMoveOperationResult"
        ],
        "description": "Fetches operation status for data move operation on vault",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the BackupResourceConfigResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation result response for Vault Storage Config",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                }
              },
              "discriminator": "objectType",
              "required": [
                "objectType"
              ]
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/operationStatus/{operationId}": {
      "get": {
        "operationId": "GetOperationStatus",
        "tags": [
          "BackupResourceConfigOperationStatuses"
        ],
        "description": "Fetches Operation Result for Prepare Data Move",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the BackupResourceConfigResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/prepareDataMove": {
      "post": {
        "operationId": "BMSPrepareDataMove",
        "tags": [
          "BackupResourceStorageConfigsNonCRR"
        ],
        "description": "Prepares source vault for Data Move operation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Prepare data move request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Prepare DataMove Request",
              "properties": {
                "targetResourceId": {
                  "type": "string",
                  "description": "ARM Id of target vault"
                },
                "targetRegion": {
                  "type": "string",
                  "description": "Target Region"
                },
                "dataMoveLevel": {
                  "description": "DataMove Level",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Vault",
                    "Container"
                  ],
                  "x-ms-enum": {
                    "name": "DataMoveLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Vault",
                        "value": "Vault"
                      },
                      {
                        "name": "Container",
                        "value": "Container"
                      }
                    ]
                  }
                },
                "sourceContainerArmIds": {
                  "type": "array",
                  "description": "Source Container ArmIds\nThis needs to be populated only if DataMoveLevel is set to container",
                  "items": {
                    "type": "string"
                  }
                },
                "ignoreMoved": {
                  "type": "boolean",
                  "description": "Ignore the artifacts which are already moved."
                }
              },
              "required": [
                "targetResourceId",
                "targetRegion",
                "dataMoveLevel"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/triggerDataMove": {
      "post": {
        "operationId": "BMSTriggerDataMove",
        "tags": [
          "BackupResourceStorageConfigsNonCRR"
        ],
        "description": "Triggers Data Move Operation on target vault",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Trigger data move request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Trigger DataMove Request",
              "properties": {
                "sourceResourceId": {
                  "type": "string",
                  "description": "ARM Id of source vault"
                },
                "sourceRegion": {
                  "type": "string",
                  "description": "Source Region"
                },
                "dataMoveLevel": {
                  "description": "DataMove Level",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Vault",
                    "Container"
                  ],
                  "x-ms-enum": {
                    "name": "DataMoveLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Vault",
                        "value": "Vault"
                      },
                      {
                        "name": "Container",
                        "value": "Container"
                      }
                    ]
                  }
                },
                "correlationId": {
                  "type": "string",
                  "description": "Correlation Id"
                },
                "sourceContainerArmIds": {
                  "type": "array",
                  "description": "Source Container ArmIds",
                  "items": {
                    "type": "string"
                  }
                },
                "pauseGC": {
                  "type": "boolean",
                  "description": "Pause GC"
                }
              },
              "required": [
                "sourceResourceId",
                "sourceRegion",
                "dataMoveLevel",
                "correlationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnection_Get",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Get Private Endpoint Connection. This call is made by Backup Admin.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Private Endpoint Connection Response Properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "PrivateEndpointConnectionResource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Gets or sets provisioning state of the private endpoint connection",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending"
                          }
                        ]
                      }
                    },
                    "privateEndpoint": {
                      "description": "Gets or sets private endpoint associated with the private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Gets or sets id"
                        }
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "description": "Group Ids for the Private Endpoint",
                      "items": {
                        "type": "string",
                        "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                        "enum": [
                          "AzureBackup",
                          "AzureBackup_secondary",
                          "AzureSiteRecovery"
                        ],
                        "x-ms-enum": {
                          "name": "VaultSubResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBackup",
                              "value": "AzureBackup"
                            },
                            {
                              "name": "AzureBackup_secondary",
                              "value": "AzureBackup_secondary"
                            },
                            {
                              "name": "AzureSiteRecovery",
                              "value": "AzureSiteRecovery"
                            }
                          ]
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Gets or sets private link service connection state",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Gets or sets the status",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointConnectionStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending"
                              },
                              {
                                "name": "Approved",
                                "value": "Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected"
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Gets or sets description"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Gets or sets actions required"
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnection_Put",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Approve or Reject Private Endpoint requests. This call is made by Backup Admin.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Private Endpoint Connection Response Properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "PrivateEndpointConnectionResource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Gets or sets provisioning state of the private endpoint connection",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending"
                          }
                        ]
                      }
                    },
                    "privateEndpoint": {
                      "description": "Gets or sets private endpoint associated with the private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Gets or sets id"
                        }
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "description": "Group Ids for the Private Endpoint",
                      "items": {
                        "type": "string",
                        "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                        "enum": [
                          "AzureBackup",
                          "AzureBackup_secondary",
                          "AzureSiteRecovery"
                        ],
                        "x-ms-enum": {
                          "name": "VaultSubResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBackup",
                              "value": "AzureBackup"
                            },
                            {
                              "name": "AzureBackup_secondary",
                              "value": "AzureBackup_secondary"
                            },
                            {
                              "name": "AzureSiteRecovery",
                              "value": "AzureSiteRecovery"
                            }
                          ]
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Gets or sets private link service connection state",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Gets or sets the status",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointConnectionStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending"
                              },
                              {
                                "name": "Approved",
                                "value": "Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected"
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Gets or sets description"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Gets or sets actions required"
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Private Endpoint Connection Response Properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "PrivateEndpointConnectionResource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Gets or sets provisioning state of the private endpoint connection",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending"
                          }
                        ]
                      }
                    },
                    "privateEndpoint": {
                      "description": "Gets or sets private endpoint associated with the private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Gets or sets id"
                        }
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "description": "Group Ids for the Private Endpoint",
                      "items": {
                        "type": "string",
                        "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                        "enum": [
                          "AzureBackup",
                          "AzureBackup_secondary",
                          "AzureSiteRecovery"
                        ],
                        "x-ms-enum": {
                          "name": "VaultSubResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBackup",
                              "value": "AzureBackup"
                            },
                            {
                              "name": "AzureBackup_secondary",
                              "value": "AzureBackup_secondary"
                            },
                            {
                              "name": "AzureSiteRecovery",
                              "value": "AzureSiteRecovery"
                            }
                          ]
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Gets or sets private link service connection state",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Gets or sets the status",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointConnectionStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending"
                              },
                              {
                                "name": "Approved",
                                "value": "Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected"
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Gets or sets description"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Gets or sets actions required"
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Private Endpoint Connection Response Properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "PrivateEndpointConnectionResource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Gets or sets provisioning state of the private endpoint connection",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending"
                          }
                        ]
                      }
                    },
                    "privateEndpoint": {
                      "description": "Gets or sets private endpoint associated with the private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Gets or sets id"
                        }
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "description": "Group Ids for the Private Endpoint",
                      "items": {
                        "type": "string",
                        "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                        "enum": [
                          "AzureBackup",
                          "AzureBackup_secondary",
                          "AzureSiteRecovery"
                        ],
                        "x-ms-enum": {
                          "name": "VaultSubResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBackup",
                              "value": "AzureBackup"
                            },
                            {
                              "name": "AzureBackup_secondary",
                              "value": "AzureBackup_secondary"
                            },
                            {
                              "name": "AzureSiteRecovery",
                              "value": "AzureSiteRecovery"
                            }
                          ]
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Gets or sets private link service connection state",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Gets or sets the status",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointConnectionStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending"
                              },
                              {
                                "name": "Approved",
                                "value": "Approved"
                              },
                              {
                                "name": "Rejected",
                                "value": "Rejected"
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Gets or sets description"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Gets or sets actions required"
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "eTag": {
                  "type": "string",
                  "description": "Optional ETag."
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnection_Delete",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Delete Private Endpoint requests. This call is made by Backup Admin.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the VaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}/operationsStatus/{operationId}": {
      "get": {
        "operationId": "PrivateEndpoint_GetOperationStatus",
        "tags": [
          "PrivateEndpointOperationStatuses"
        ],
        "description": "Gets the operation status for a private endpoint connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "vaults",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the PrivateEndpointConnectionResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the PrivateEndpointConnectionResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Operation status.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the operation."
                },
                "status": {
                  "description": "Operation status.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusValues",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled"
                      }
                    ]
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation start time. Format: ISO-8601."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Operation end time. Format: ISO-8601."
                },
                "error": {
                  "description": "Error information related to this operation.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code of the operation failure."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message displayed if the operation failure."
                    }
                  }
                },
                "properties": {
                  "description": "Additional information associated with this operation.",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AlertsState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "AlertsState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "AssociatedIdentity": {
      "type": "object",
      "description": "Identity details to be used for an operation",
      "properties": {
        "operationIdentityType": {
          "description": "Identity type that should be used for an operation.",
          "type": "string",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssigned",
                "value": "SystemAssigned"
              },
              {
                "name": "UserAssigned",
                "value": "UserAssigned"
              }
            ]
          }
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
        }
      }
    },
    "AuthType": {
      "type": "string",
      "description": "Specifies the authentication type.",
      "enum": [
        "Invalid",
        "ACS",
        "AAD",
        "AccessControlService",
        "AzureActiveDirectory"
      ],
      "x-ms-enum": {
        "name": "AuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "ACS",
            "value": "ACS"
          },
          {
            "name": "AAD",
            "value": "AAD"
          },
          {
            "name": "AccessControlService",
            "value": "AccessControlService"
          },
          {
            "name": "AzureActiveDirectory",
            "value": "AzureActiveDirectory"
          }
        ]
      }
    },
    "AzureMonitorAlertSettings": {
      "type": "object",
      "description": "Settings for Azure Monitor based alerts",
      "properties": {
        "alertsForAllJobFailures": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlertsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "alertsForAllReplicationIssues": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlertsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "alertsForAllFailoverIssues": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlertsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "BCDRSecurityLevel": {
      "type": "string",
      "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
      "enum": [
        "Poor",
        "Fair",
        "Good",
        "Excellent"
      ],
      "x-ms-enum": {
        "name": "BCDRSecurityLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Poor",
            "value": "Poor"
          },
          {
            "name": "Fair",
            "value": "Fair"
          },
          {
            "name": "Good",
            "value": "Good"
          },
          {
            "name": "Excellent",
            "value": "Excellent"
          }
        ]
      }
    },
    "BackupStorageVersion": {
      "type": "string",
      "description": "Backup storage version",
      "enum": [
        "V1",
        "V2",
        "Unassigned"
      ],
      "x-ms-enum": {
        "name": "BackupStorageVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "V1",
            "value": "V1"
          },
          {
            "name": "V2",
            "value": "V2"
          },
          {
            "name": "Unassigned",
            "value": "Unassigned"
          }
        ]
      }
    },
    "CapabilitiesProperties": {
      "type": "object",
      "description": "Capabilities information",
      "properties": {
        "dnsZones": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "DNSZone information",
            "properties": {
              "subResource": {
                "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                "type": "string",
                "enum": [
                  "AzureBackup",
                  "AzureBackup_secondary",
                  "AzureSiteRecovery"
                ],
                "x-ms-enum": {
                  "name": "VaultSubResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AzureBackup",
                      "value": "AzureBackup"
                    },
                    {
                      "name": "AzureBackup_secondary",
                      "value": "AzureBackup_secondary"
                    },
                    {
                      "name": "AzureSiteRecovery",
                      "value": "AzureSiteRecovery"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CapabilitiesResponse": {
      "type": "object",
      "description": "Capabilities response for Microsoft.RecoveryServices",
      "properties": {
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
        },
        "properties": {
          "description": "Capabilities properties in response",
          "type": "object",
          "properties": {
            "dnsZones": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "DNSZone information for Microsoft.RecoveryServices",
                "properties": {
                  "subResource": {
                    "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                    "type": "string",
                    "enum": [
                      "AzureBackup",
                      "AzureBackup_secondary",
                      "AzureSiteRecovery"
                    ],
                    "x-ms-enum": {
                      "name": "VaultSubResourceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AzureBackup",
                          "value": "AzureBackup"
                        },
                        {
                          "name": "AzureBackup_secondary",
                          "value": "AzureBackup_secondary"
                        },
                        {
                          "name": "AzureSiteRecovery",
                          "value": "AzureSiteRecovery"
                        }
                      ]
                    }
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "The private link resource Private link DNS zone names.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "CapabilitiesResponseProperties": {
      "type": "object",
      "description": "Capabilities properties in response",
      "properties": {
        "dnsZones": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "DNSZone information for Microsoft.RecoveryServices",
            "properties": {
              "subResource": {
                "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                "type": "string",
                "enum": [
                  "AzureBackup",
                  "AzureBackup_secondary",
                  "AzureSiteRecovery"
                ],
                "x-ms-enum": {
                  "name": "VaultSubResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AzureBackup",
                      "value": "AzureBackup"
                    },
                    {
                      "name": "AzureBackup_secondary",
                      "value": "AzureBackup_secondary"
                    },
                    {
                      "name": "AzureSiteRecovery",
                      "value": "AzureSiteRecovery"
                    }
                  ]
                }
              },
              "requiredZoneNames": {
                "type": "array",
                "description": "The private link resource Private link DNS zone names.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CertificateRequest": {
      "type": "object",
      "description": "Details of the certificate to be uploaded to the vault.",
      "properties": {
        "properties": {
          "description": "Raw certificate data.",
          "type": "object",
          "properties": {
            "authType": {
              "description": "Specifies the authentication type.",
              "type": "string",
              "enum": [
                "Invalid",
                "ACS",
                "AAD",
                "AccessControlService",
                "AzureActiveDirectory"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "ACS",
                    "value": "ACS"
                  },
                  {
                    "name": "AAD",
                    "value": "AAD"
                  },
                  {
                    "name": "AccessControlService",
                    "value": "AccessControlService"
                  },
                  {
                    "name": "AzureActiveDirectory",
                    "value": "AzureActiveDirectory"
                  }
                ]
              }
            },
            "certificate": {
              "type": "string",
              "format": "byte",
              "description": "The base64 encoded certificate raw data string"
            }
          }
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Resource Name availability input parameters - Resource type and resource name",
      "properties": {
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
        },
        "name": {
          "type": "string",
          "description": "Resource name for which availability needs to be checked"
        }
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "Response for check name availability API. Resource provider will set availability as true | false.",
      "properties": {
        "nameAvailable": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ClassicAlertSettings": {
      "type": "object",
      "description": "Settings for classic alerts",
      "properties": {
        "alertsForCriticalOperations": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlertsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "emailNotificationsForSiteRecovery": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlertsState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "ClientDiscoveryDisplay": {
      "type": "object",
      "description": "Localized display information of an operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Name of the provider for display purposes"
        },
        "resource": {
          "type": "string",
          "description": "ResourceType for which this Operation can be performed."
        },
        "operation": {
          "type": "string",
          "description": "Operations Name itself."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation having details of what operation is about."
        }
      }
    },
    "ClientDiscoveryForLogSpecification": {
      "type": "object",
      "description": "Class to represent shoebox log specification in json client discovery.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for shoebox log specification."
        },
        "displayName": {
          "type": "string",
          "description": "Localized display name"
        },
        "blobDuration": {
          "type": "string",
          "description": "blob duration of shoebox log specification"
        }
      }
    },
    "ClientDiscoveryForProperties": {
      "type": "object",
      "description": "Class to represent shoebox properties in json client discovery.",
      "properties": {
        "serviceSpecification": {
          "description": "Operation properties.",
          "type": "object",
          "properties": {
            "logSpecifications": {
              "type": "array",
              "description": "List of log specifications of this operation.",
              "items": {
                "type": "object",
                "description": "Class to represent shoebox log specification in json client discovery.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name for shoebox log specification."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Localized display name"
                  },
                  "blobDuration": {
                    "type": "string",
                    "description": "blob duration of shoebox log specification"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ClientDiscoveryForServiceSpecification": {
      "type": "object",
      "description": "Class to represent shoebox service specification in json client discovery.",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "List of log specifications of this operation.",
          "items": {
            "type": "object",
            "description": "Class to represent shoebox log specification in json client discovery.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name for shoebox log specification."
              },
              "displayName": {
                "type": "string",
                "description": "Localized display name"
              },
              "blobDuration": {
                "type": "string",
                "description": "blob duration of shoebox log specification"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ClientDiscoveryResponse": {
      "type": "object",
      "description": "Operations List response which contains list of available APIs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of available operations.",
          "items": {
            "type": "object",
            "description": "Available operation details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Operation."
              },
              "display": {
                "description": "Contains the localized display information for this particular operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Name of the provider for display purposes"
                  },
                  "resource": {
                    "type": "string",
                    "description": "ResourceType for which this Operation can be performed."
                  },
                  "operation": {
                    "type": "string",
                    "description": "Operations Name itself."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the operation having details of what operation is about."
                  }
                }
              },
              "origin": {
                "type": "string",
                "description": "The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX"
              },
              "properties": {
                "description": "ShoeBox properties for the given operation.",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Operation properties.",
                    "type": "object",
                    "properties": {
                      "logSpecifications": {
                        "type": "array",
                        "description": "List of log specifications of this operation.",
                        "items": {
                          "type": "object",
                          "description": "Class to represent shoebox log specification in json client discovery.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name for shoebox log specification."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Localized display name"
                            },
                            "blobDuration": {
                              "type": "string",
                              "description": "blob duration of shoebox log specification"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next chunk of Response."
        }
      }
    },
    "ClientDiscoveryValueForSingleApi": {
      "type": "object",
      "description": "Available operation details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Operation."
        },
        "display": {
          "description": "Contains the localized display information for this particular operation",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Name of the provider for display purposes"
            },
            "resource": {
              "type": "string",
              "description": "ResourceType for which this Operation can be performed."
            },
            "operation": {
              "type": "string",
              "description": "Operations Name itself."
            },
            "description": {
              "type": "string",
              "description": "Description of the operation having details of what operation is about."
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX"
        },
        "properties": {
          "description": "ShoeBox properties for the given operation.",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Operation properties.",
              "type": "object",
              "properties": {
                "logSpecifications": {
                  "type": "array",
                  "description": "List of log specifications of this operation.",
                  "items": {
                    "type": "object",
                    "description": "Class to represent shoebox log specification in json client discovery.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name for shoebox log specification."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Localized display name"
                      },
                      "blobDuration": {
                        "type": "string",
                        "description": "blob duration of shoebox log specification"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the Container Instance service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The error object."
        }
      }
    },
    "CmkKekIdentity": {
      "type": "object",
      "description": "The details of the identity used for CMK",
      "properties": {
        "useSystemAssignedIdentity": {
          "type": "boolean",
          "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
        }
      }
    },
    "CmkKeyVaultProperties": {
      "type": "object",
      "description": "The properties of the Key Vault which hosts CMK",
      "properties": {
        "keyUri": {
          "type": "string",
          "description": "The key uri of the Customer Managed Key"
        }
      }
    },
    "CrossRegionRestore": {
      "type": "string",
      "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "CrossRegionRestore",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "CrossSubscriptionRestoreSettings": {
      "type": "object",
      "description": "Settings for Cross Subscription Restore Settings",
      "properties": {
        "crossSubscriptionRestoreState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "PermanentlyDisabled"
          ],
          "x-ms-enum": {
            "name": "CrossSubscriptionRestoreState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "PermanentlyDisabled",
                "value": "PermanentlyDisabled"
              }
            ]
          }
        }
      }
    },
    "CrossSubscriptionRestoreState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled",
        "PermanentlyDisabled"
      ],
      "x-ms-enum": {
        "name": "CrossSubscriptionRestoreState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "PermanentlyDisabled",
            "value": "PermanentlyDisabled"
          }
        ]
      }
    },
    "DNSZone": {
      "type": "object",
      "description": "DNSZone information",
      "properties": {
        "subResource": {
          "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
          "type": "string",
          "enum": [
            "AzureBackup",
            "AzureBackup_secondary",
            "AzureSiteRecovery"
          ],
          "x-ms-enum": {
            "name": "VaultSubResourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureBackup",
                "value": "AzureBackup"
              },
              {
                "name": "AzureBackup_secondary",
                "value": "AzureBackup_secondary"
              },
              {
                "name": "AzureSiteRecovery",
                "value": "AzureSiteRecovery"
              }
            ]
          }
        }
      }
    },
    "DNSZoneResponse": {
      "type": "object",
      "description": "DNSZone information for Microsoft.RecoveryServices",
      "properties": {
        "subResource": {
          "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
          "type": "string",
          "enum": [
            "AzureBackup",
            "AzureBackup_secondary",
            "AzureSiteRecovery"
          ],
          "x-ms-enum": {
            "name": "VaultSubResourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureBackup",
                "value": "AzureBackup"
              },
              {
                "name": "AzureBackup_secondary",
                "value": "AzureBackup_secondary"
              },
              {
                "name": "AzureSiteRecovery",
                "value": "AzureSiteRecovery"
              }
            ]
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone names.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeletedVault": {
      "type": "object",
      "description": "DeletedVault information as returned by the resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "vaultId": {
              "type": "string",
              "description": "ARM Id of the Vault which was deleted.",
              "readOnly": true
            },
            "vaultDeletionTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time in UTC at which the Vault was deleted.",
              "readOnly": true
            },
            "purgeAt": {
              "type": "string",
              "format": "date-time",
              "description": "Time in UTC at which the DeletedVault will be purged.",
              "readOnly": true
            }
          }
        }
      }
    },
    "DeletedVaultList": {
      "type": "object",
      "description": "The response model for a list of DeletedVaults.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeletedVault items on this page",
          "items": {
            "type": "object",
            "description": "DeletedVault information as returned by the resource provider.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "vaultId": {
                    "type": "string",
                    "description": "ARM Id of the Vault which was deleted.",
                    "readOnly": true
                  },
                  "vaultDeletionTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time in UTC at which the Vault was deleted.",
                    "readOnly": true
                  },
                  "purgeAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time in UTC at which the DeletedVault will be purged.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeletedVaultProperties": {
      "type": "object",
      "description": "Properties of the DeletedVault.",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "ARM Id of the Vault which was deleted.",
          "readOnly": true
        },
        "vaultDeletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in UTC at which the Vault was deleted.",
          "readOnly": true
        },
        "purgeAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time in UTC at which the DeletedVault will be purged.",
          "readOnly": true
        }
      }
    },
    "DeletedVaultUndeleteInput": {
      "type": "object",
      "description": "Input definition for DeletedVault undelete.",
      "properties": {
        "properties": {
          "description": "Undelete input properties.",
          "type": "object",
          "properties": {
            "recoveryResourceGroupId": {
              "type": "string",
              "description": "Recovery resource group Id."
            }
          },
          "required": [
            "recoveryResourceGroupId"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "DeletedVaultUndeleteInputProperties": {
      "type": "object",
      "description": "Input definition for DeletedVault undelete properties.",
      "properties": {
        "recoveryResourceGroupId": {
          "type": "string",
          "description": "Recovery resource group Id."
        }
      },
      "required": [
        "recoveryResourceGroupId"
      ]
    },
    "EnhancedSecurityState": {
      "type": "string",
      "description": "Enabled or Disabled.",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnhancedSecurityState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "Error": {
      "type": "object",
      "description": "The resource management error response.",
      "properties": {
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "type": "object",
            "description": "The resource management error additional info.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The additional info type.",
                "readOnly": true
              },
              "info": {
                "type": "object",
                "description": "The additional info.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        }
      }
    },
    "IdentityData": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
          "type": "string",
          "enum": [
            "SystemAssigned",
            "None",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssigned",
                "value": "SystemAssigned"
              },
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "UserAssigned",
                "value": "UserAssigned"
              },
              {
                "name": "SystemAssigned, UserAssigned",
                "value": "SystemAssigned, UserAssigned"
              }
            ]
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "type": "object",
            "description": "A resource identity that is managed by the user of the service.",
            "properties": {
              "principalId": {
                "type": "string",
                "description": "The principal ID of the user-assigned identity.",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "description": "The client ID of the user-assigned identity.",
                "readOnly": true
              }
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "IdentityType": {
      "type": "string",
      "description": "Identity type that should be used for an operation.",
      "enum": [
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "ImmutabilitySettings": {
      "type": "object",
      "description": "Immutability Settings of vault",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Disabled",
            "Unlocked",
            "Locked"
          ],
          "x-ms-enum": {
            "name": "ImmutabilityState",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "Unlocked",
                "value": "Unlocked"
              },
              {
                "name": "Locked",
                "value": "Locked"
              }
            ]
          }
        }
      }
    },
    "ImmutabilityState": {
      "type": "string",
      "enum": [
        "Disabled",
        "Unlocked",
        "Locked"
      ],
      "x-ms-enum": {
        "name": "ImmutabilityState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Unlocked",
            "value": "Unlocked"
          },
          {
            "name": "Locked",
            "value": "Locked"
          }
        ]
      }
    },
    "InfrastructureEncryptionState": {
      "type": "string",
      "enum": [
        "Invalid",
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "InfrastructureEncryptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "JobsSummary": {
      "type": "object",
      "description": "Summary of the replication job data for this vault.",
      "properties": {
        "failedJobs": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed jobs."
        },
        "suspendedJobs": {
          "type": "integer",
          "format": "int32",
          "description": "Count of suspended jobs."
        },
        "inProgressJobs": {
          "type": "integer",
          "format": "int32",
          "description": "Count of in-progress jobs."
        }
      }
    },
    "MonitoringSettings": {
      "type": "object",
      "description": "Monitoring Settings of the vault",
      "properties": {
        "azureMonitorAlertSettings": {
          "description": "Settings for Azure Monitor based alerts",
          "type": "object",
          "properties": {
            "alertsForAllJobFailures": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AlertsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "alertsForAllReplicationIssues": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AlertsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "alertsForAllFailoverIssues": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AlertsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "classicAlertSettings": {
          "description": "Settings for classic alerts",
          "type": "object",
          "properties": {
            "alertsForCriticalOperations": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AlertsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "emailNotificationsForSiteRecovery": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AlertsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "MonitoringSummary": {
      "type": "object",
      "description": "Summary of the replication monitoring data for this vault.",
      "properties": {
        "unHealthyVmCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of unhealthy VMs."
        },
        "unHealthyProviderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of unhealthy replication providers."
        },
        "eventsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of all critical warnings."
        },
        "deprecatedProviderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of all deprecated recovery service providers."
        },
        "supportedProviderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of all the supported recovery service providers."
        },
        "unsupportedProviderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of all the unsupported recovery service providers."
        }
      }
    },
    "MultiUserAuthorization": {
      "type": "string",
      "description": "MUA Settings of vault",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MultiUserAuthorization",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "NameInfo": {
      "type": "object",
      "description": "The name of usage.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of usage."
        },
        "localizedValue": {
          "type": "string",
          "description": "Localized value of usage."
        }
      }
    },
    "OperationResource": {
      "type": "object",
      "description": "Operation Resource",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation"
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines."
        },
        "id": {
          "type": "string",
          "description": "It should match what is used to GET the operation result"
        },
        "name": {
          "type": "string",
          "description": "It must match the last segment of the \"id\" field, and will typically be a GUID / system generated value"
        },
        "status": {
          "type": "string",
          "description": "The status of the operation. (InProgress/Success/Failed/Cancelled)"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the operation"
        }
      }
    },
    "PatchTrackedResource": {
      "type": "object",
      "description": "Tracked resource with location.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "PatchVault": {
      "type": "object",
      "description": "Patch Resource information, as returned by the resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "Properties of the vault.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning State.",
              "readOnly": true
            },
            "upgradeDetails": {
              "description": "Details for upgrading vault.",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "ID of the vault upgrade operation.",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation has started.",
                  "readOnly": true
                },
                "lastUpdatedTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation status was last updated.",
                  "readOnly": true
                },
                "endTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation has ended.",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the vault upgrade operation.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unknown",
                    "InProgress",
                    "Upgraded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "VaultUpgradeState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unknown",
                        "value": "Unknown"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Upgraded",
                        "value": "Upgraded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Message to the user containing information about the upgrade operation.",
                  "readOnly": true
                },
                "triggerType": {
                  "description": "The way the vault upgrade was triggered.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "UserTriggered",
                    "ForcedUpgrade"
                  ],
                  "x-ms-enum": {
                    "name": "TriggerType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UserTriggered",
                        "value": "UserTriggered"
                      },
                      {
                        "name": "ForcedUpgrade",
                        "value": "ForcedUpgrade"
                      }
                    ]
                  }
                },
                "upgradedResourceId": {
                  "type": "string",
                  "description": "Resource ID of the upgraded vault.",
                  "readOnly": true
                },
                "previousResourceId": {
                  "type": "string",
                  "description": "Resource ID of the vault before the upgrade.",
                  "readOnly": true
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connection.",
              "items": {
                "type": "object",
                "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Private Endpoint Connection Response Properties.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "provisioningState": {
                        "description": "Gets or sets provisioning state of the private endpoint connection.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Deleting",
                          "Failed",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded"
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting"
                            },
                            {
                              "name": "Failed",
                              "value": "Failed"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending"
                            }
                          ]
                        }
                      },
                      "privateEndpoint": {
                        "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets id.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Gets or sets private link service connection state.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Gets or sets the status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Pending",
                                  "value": "Pending"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected"
                                }
                              ]
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Gets or sets description.",
                            "readOnly": true
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Gets or sets actions required.",
                            "readOnly": true
                          }
                        }
                      },
                      "groupIds": {
                        "type": "array",
                        "description": "Group Ids for the Private Endpoint",
                        "items": {
                          "type": "string",
                          "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                          "enum": [
                            "AzureBackup",
                            "AzureBackup_secondary",
                            "AzureSiteRecovery"
                          ],
                          "x-ms-enum": {
                            "name": "VaultSubResourceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBackup",
                                "value": "AzureBackup"
                              },
                              {
                                "name": "AzureBackup_secondary",
                                "value": "AzureBackup_secondary"
                              },
                              {
                                "name": "AzureSiteRecovery",
                                "value": "AzureSiteRecovery"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the private Endpoint Connection",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                    "readOnly": true
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the private Endpoint connection",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "privateEndpointStateForBackup": {
              "description": "Private endpoint state for backup.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "VaultPrivateEndpointState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "privateEndpointStateForSiteRecovery": {
              "description": "Private endpoint state for site recovery.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "VaultPrivateEndpointState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "encryption": {
              "description": "Customer Managed Key details of the resource.",
              "type": "object",
              "properties": {
                "keyVaultProperties": {
                  "description": "The properties of the Key Vault which hosts CMK",
                  "type": "object",
                  "properties": {
                    "keyUri": {
                      "type": "string",
                      "description": "The key uri of the Customer Managed Key"
                    }
                  }
                },
                "kekIdentity": {
                  "description": "The details of the identity used for CMK",
                  "type": "object",
                  "properties": {
                    "useSystemAssignedIdentity": {
                      "type": "boolean",
                      "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                    }
                  }
                },
                "infrastructureEncryption": {
                  "description": "Enabling/Disabling the Double Encryption state",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "InfrastructureEncryptionState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "moveDetails": {
              "description": "The details of the latest move operation performed on the Azure Resource",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "OperationId of the Resource Move Operation",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start Time of the Resource Move Operation",
                  "readOnly": true
                },
                "completionTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End Time of the Resource Move Operation",
                  "readOnly": true
                },
                "sourceResourceId": {
                  "type": "string",
                  "description": "Source Resource of the Resource Move Operation",
                  "readOnly": true
                },
                "targetResourceId": {
                  "type": "string",
                  "description": "Target Resource of the Resource Move Operation",
                  "readOnly": true
                }
              }
            },
            "moveState": {
              "description": "The State of the Resource after the move operation",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unknown",
                "InProgress",
                "PrepareFailed",
                "CommitFailed",
                "PrepareTimedout",
                "CommitTimedout",
                "MoveSucceeded",
                "Failure",
                "CriticalFailure",
                "PartialSuccess"
              ],
              "x-ms-enum": {
                "name": "ResourceMoveState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown"
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "PrepareFailed",
                    "value": "PrepareFailed"
                  },
                  {
                    "name": "CommitFailed",
                    "value": "CommitFailed"
                  },
                  {
                    "name": "PrepareTimedout",
                    "value": "PrepareTimedout"
                  },
                  {
                    "name": "CommitTimedout",
                    "value": "CommitTimedout"
                  },
                  {
                    "name": "MoveSucceeded",
                    "value": "MoveSucceeded"
                  },
                  {
                    "name": "Failure",
                    "value": "Failure"
                  },
                  {
                    "name": "CriticalFailure",
                    "value": "CriticalFailure"
                  },
                  {
                    "name": "PartialSuccess",
                    "value": "PartialSuccess"
                  }
                ]
              }
            },
            "backupStorageVersion": {
              "description": "Backup storage version",
              "readOnly": true,
              "type": "string",
              "enum": [
                "V1",
                "V2",
                "Unassigned"
              ],
              "x-ms-enum": {
                "name": "BackupStorageVersion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "V1",
                    "value": "V1"
                  },
                  {
                    "name": "V2",
                    "value": "V2"
                  },
                  {
                    "name": "Unassigned",
                    "value": "Unassigned"
                  }
                ]
              }
            },
            "publicNetworkAccess": {
              "description": "property to enable or disable resource provider inbound network traffic from public clients",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "monitoringSettings": {
              "description": "Monitoring Settings of the vault",
              "type": "object",
              "properties": {
                "azureMonitorAlertSettings": {
                  "description": "Settings for Azure Monitor based alerts",
                  "type": "object",
                  "properties": {
                    "alertsForAllJobFailures": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "alertsForAllReplicationIssues": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "alertsForAllFailoverIssues": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "classicAlertSettings": {
                  "description": "Settings for classic alerts",
                  "type": "object",
                  "properties": {
                    "alertsForCriticalOperations": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "emailNotificationsForSiteRecovery": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "restoreSettings": {
              "description": "Restore Settings of the vault",
              "type": "object",
              "properties": {
                "crossSubscriptionRestoreSettings": {
                  "description": "Settings for CrossSubscriptionRestore",
                  "type": "object",
                  "properties": {
                    "crossSubscriptionRestoreState": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "PermanentlyDisabled"
                      ],
                      "x-ms-enum": {
                        "name": "CrossSubscriptionRestoreState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "PermanentlyDisabled",
                            "value": "PermanentlyDisabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "redundancySettings": {
              "description": "The redundancy Settings of a Vault",
              "type": "object",
              "properties": {
                "standardTierStorageRedundancy": {
                  "description": "The storage redundancy setting of a vault",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "LocallyRedundant",
                    "GeoRedundant",
                    "ZoneRedundant"
                  ],
                  "x-ms-enum": {
                    "name": "StandardTierStorageRedundancy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "LocallyRedundant",
                        "value": "LocallyRedundant"
                      },
                      {
                        "name": "GeoRedundant",
                        "value": "GeoRedundant"
                      },
                      {
                        "name": "ZoneRedundant",
                        "value": "ZoneRedundant"
                      }
                    ]
                  }
                },
                "crossRegionRestore": {
                  "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "CrossRegionRestore",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "securitySettings": {
              "description": "Security Settings of the vault",
              "type": "object",
              "properties": {
                "immutabilitySettings": {
                  "description": "Immutability Settings of a vault",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Unlocked",
                        "Locked"
                      ],
                      "x-ms-enum": {
                        "name": "ImmutabilityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          }
                        ]
                      }
                    }
                  }
                },
                "softDeleteSettings": {
                  "description": "Soft delete Settings of a vault",
                  "type": "object",
                  "properties": {
                    "softDeleteState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "enhancedSecurityState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    }
                  }
                },
                "multiUserAuthorization": {
                  "description": "MUA Settings of a vault",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "MultiUserAuthorization",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "sourceScanConfiguration": {
                  "description": "Source scan configuration of vault",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "sourceScanIdentity": {
                      "description": "Identity details to be used for an operation",
                      "type": "object",
                      "properties": {
                        "operationIdentityType": {
                          "description": "Identity type that should be used for an operation.",
                          "type": "string",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssigned",
                                "value": "SystemAssigned"
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned"
                              }
                            ]
                          }
                        },
                        "userAssignedIdentity": {
                          "type": "string",
                          "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                        }
                      }
                    }
                  }
                }
              }
            },
            "secureScore": {
              "description": "Secure Score of Recovery Services Vault",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Minimum",
                "Adequate",
                "Maximum"
              ],
              "x-ms-enum": {
                "name": "SecureScoreLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Minimum",
                    "value": "Minimum"
                  },
                  {
                    "name": "Adequate",
                    "value": "Adequate"
                  },
                  {
                    "name": "Maximum",
                    "value": "Maximum"
                  }
                ]
              }
            },
            "bcdrSecurityLevel": {
              "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Poor",
                "Fair",
                "Good",
                "Excellent"
              ],
              "x-ms-enum": {
                "name": "BCDRSecurityLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Poor",
                    "value": "Poor"
                  },
                  {
                    "name": "Fair",
                    "value": "Fair"
                  },
                  {
                    "name": "Good",
                    "value": "Good"
                  },
                  {
                    "name": "Excellent",
                    "value": "Excellent"
                  }
                ]
              }
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "sku": {
          "description": "Identifies the unique system identifier for each Azure resource.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
              "type": "string",
              "enum": [
                "Standard",
                "RS0"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "RS0",
                    "value": "RS0"
                  }
                ]
              }
            },
            "tier": {
              "type": "string",
              "description": "The Sku tier."
            },
            "family": {
              "type": "string",
              "description": "The sku family"
            },
            "size": {
              "type": "string",
              "description": "The sku size"
            },
            "capacity": {
              "type": "string",
              "description": "The sku capacity"
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "Identity for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID of resource identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant ID of resource.",
              "readOnly": true
            },
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssigned",
                    "value": "SystemAssigned"
                  },
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  },
                  {
                    "name": "SystemAssigned, UserAssigned",
                    "value": "SystemAssigned, UserAssigned"
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "additionalProperties": {
                "type": "object",
                "description": "A resource identity that is managed by the user of the service.",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "The principal ID of the user-assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The client ID of the user-assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets id"
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Private Endpoint Connection Response Properties",
      "properties": {
        "provisioningState": {
          "description": "Gets or sets provisioning state of the private endpoint connection",
          "type": "string",
          "enum": [
            "Succeeded",
            "Deleting",
            "Failed",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Deleting",
                "value": "Deleting"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Pending",
                "value": "Pending"
              }
            ]
          }
        },
        "privateEndpoint": {
          "description": "Gets or sets private endpoint associated with the private endpoint connection",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Gets or sets id"
            }
          }
        },
        "groupIds": {
          "type": "array",
          "description": "Group Ids for the Private Endpoint",
          "items": {
            "type": "string",
            "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
            "enum": [
              "AzureBackup",
              "AzureBackup_secondary",
              "AzureSiteRecovery"
            ],
            "x-ms-enum": {
              "name": "VaultSubResourceType",
              "modelAsString": true,
              "values": [
                {
                  "name": "AzureBackup",
                  "value": "AzureBackup"
                },
                {
                  "name": "AzureBackup_secondary",
                  "value": "AzureBackup_secondary"
                },
                {
                  "name": "AzureSiteRecovery",
                  "value": "AzureSiteRecovery"
                }
              ]
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Gets or sets private link service connection state",
          "type": "object",
          "properties": {
            "status": {
              "description": "Gets or sets the status",
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "PrivateEndpointConnectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending"
                  },
                  {
                    "name": "Approved",
                    "value": "Approved"
                  },
                  {
                    "name": "Rejected",
                    "value": "Rejected"
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected"
                  }
                ]
              }
            },
            "description": {
              "type": "string",
              "description": "Gets or sets description"
            },
            "actionsRequired": {
              "type": "string",
              "description": "Gets or sets actions required"
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionStatus": {
      "type": "string",
      "description": "Gets or sets the status",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          }
        ]
      }
    },
    "PrivateEndpointConnectionVaultProperties": {
      "type": "object",
      "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
          "readOnly": true
        },
        "properties": {
          "description": "Private Endpoint Connection Response Properties.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Gets or sets provisioning state of the private endpoint connection.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Deleting",
                "Failed",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending"
                  }
                ]
              }
            },
            "privateEndpoint": {
              "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Gets or sets id.",
                  "readOnly": true
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Gets or sets private link service connection state.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "status": {
                  "description": "Gets or sets the status.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateEndpointConnectionStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pending",
                        "value": "Pending"
                      },
                      {
                        "name": "Approved",
                        "value": "Approved"
                      },
                      {
                        "name": "Rejected",
                        "value": "Rejected"
                      },
                      {
                        "name": "Disconnected",
                        "value": "Disconnected"
                      }
                    ]
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Gets or sets description.",
                  "readOnly": true
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "Gets or sets actions required.",
                  "readOnly": true
                }
              }
            },
            "groupIds": {
              "type": "array",
              "description": "Group Ids for the Private Endpoint",
              "items": {
                "type": "string",
                "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                "enum": [
                  "AzureBackup",
                  "AzureBackup_secondary",
                  "AzureSiteRecovery"
                ],
                "x-ms-enum": {
                  "name": "VaultSubResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AzureBackup",
                      "value": "AzureBackup"
                    },
                    {
                      "name": "AzureBackup_secondary",
                      "value": "AzureBackup_secondary"
                    },
                    {
                      "name": "AzureSiteRecovery",
                      "value": "AzureSiteRecovery"
                    }
                  ]
                }
              }
            }
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the private Endpoint Connection",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the private Endpoint connection",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Information of the private link resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Resource properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string",
              "description": "e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)",
              "readOnly": true
            },
            "requiredMembers": {
              "type": "array",
              "description": "[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "type": "array",
              "description": "The private link resource Private link DNS zone name.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of the private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkResources": {
      "type": "object",
      "description": "Class which represent the stamps associated with the vault.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "type": "object",
            "description": "Information of the private link resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "description": "e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "type": "array",
                    "description": "[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "The private link resource Private link DNS zone name.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "Private Link Service Connection State",
      "properties": {
        "status": {
          "description": "Gets or sets the status",
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "PrivateEndpointConnectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending"
              },
              {
                "name": "Approved",
                "value": "Approved"
              },
              {
                "name": "Rejected",
                "value": "Rejected"
              },
              {
                "name": "Disconnected",
                "value": "Disconnected"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Gets or sets description"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Gets or sets actions required"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Gets or sets provisioning state of the private endpoint connection",
      "enum": [
        "Succeeded",
        "Deleting",
        "Failed",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Pending",
            "value": "Pending"
          }
        ]
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "property to enable or disable resource provider inbound network traffic from public clients",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "RawCertificateData": {
      "type": "object",
      "description": "Raw certificate data.",
      "properties": {
        "authType": {
          "description": "Specifies the authentication type.",
          "type": "string",
          "enum": [
            "Invalid",
            "ACS",
            "AAD",
            "AccessControlService",
            "AzureActiveDirectory"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "ACS",
                "value": "ACS"
              },
              {
                "name": "AAD",
                "value": "AAD"
              },
              {
                "name": "AccessControlService",
                "value": "AccessControlService"
              },
              {
                "name": "AzureActiveDirectory",
                "value": "AzureActiveDirectory"
              }
            ]
          }
        },
        "certificate": {
          "type": "string",
          "format": "byte",
          "description": "The base64 encoded certificate raw data string"
        }
      }
    },
    "ReplicationUsage": {
      "type": "object",
      "description": "Replication usages of a vault.",
      "properties": {
        "monitoringSummary": {
          "description": "Summary of the replication monitoring data for this vault.",
          "type": "object",
          "properties": {
            "unHealthyVmCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of unhealthy VMs."
            },
            "unHealthyProviderCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of unhealthy replication providers."
            },
            "eventsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of all critical warnings."
            },
            "deprecatedProviderCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of all deprecated recovery service providers."
            },
            "supportedProviderCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of all the supported recovery service providers."
            },
            "unsupportedProviderCount": {
              "type": "integer",
              "format": "int32",
              "description": "Count of all the unsupported recovery service providers."
            }
          }
        },
        "jobsSummary": {
          "description": "Summary of the replication jobs data for this vault.",
          "type": "object",
          "properties": {
            "failedJobs": {
              "type": "integer",
              "format": "int32",
              "description": "Count of failed jobs."
            },
            "suspendedJobs": {
              "type": "integer",
              "format": "int32",
              "description": "Count of suspended jobs."
            },
            "inProgressJobs": {
              "type": "integer",
              "format": "int32",
              "description": "Count of in-progress jobs."
            }
          }
        },
        "protectedItemCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of replication protected items for this vault."
        },
        "recoveryPlanCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of replication recovery plans for this vault."
        },
        "registeredServersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of servers registered to this vault."
        },
        "recoveryServicesProviderAuthType": {
          "type": "integer",
          "format": "int32",
          "description": "The authentication type of recovery service providers in the vault."
        }
      }
    },
    "ReplicationUsageList": {
      "type": "object",
      "description": "Replication usages for vault.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of replication usages for the given vault.",
          "items": {
            "type": "object",
            "description": "Replication usages of a vault.",
            "properties": {
              "monitoringSummary": {
                "description": "Summary of the replication monitoring data for this vault.",
                "type": "object",
                "properties": {
                  "unHealthyVmCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of unhealthy VMs."
                  },
                  "unHealthyProviderCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of unhealthy replication providers."
                  },
                  "eventsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of all critical warnings."
                  },
                  "deprecatedProviderCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of all deprecated recovery service providers."
                  },
                  "supportedProviderCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of all the supported recovery service providers."
                  },
                  "unsupportedProviderCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of all the unsupported recovery service providers."
                  }
                }
              },
              "jobsSummary": {
                "description": "Summary of the replication jobs data for this vault.",
                "type": "object",
                "properties": {
                  "failedJobs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of failed jobs."
                  },
                  "suspendedJobs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of suspended jobs."
                  },
                  "inProgressJobs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of in-progress jobs."
                  }
                }
              },
              "protectedItemCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of replication protected items for this vault."
              },
              "recoveryPlanCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of replication recovery plans for this vault."
              },
              "registeredServersCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of servers registered to this vault."
              },
              "recoveryServicesProviderAuthType": {
                "type": "integer",
                "format": "int32",
                "description": "The authentication type of recovery service providers in the vault."
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceCapabilities": {
      "type": "object",
      "description": "Input to get capabilities information for Microsoft.RecoveryServices",
      "properties": {
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
        },
        "properties": {
          "description": "Capabilities information",
          "type": "object",
          "properties": {
            "dnsZones": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "DNSZone information",
                "properties": {
                  "subResource": {
                    "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                    "type": "string",
                    "enum": [
                      "AzureBackup",
                      "AzureBackup_secondary",
                      "AzureSiteRecovery"
                    ],
                    "x-ms-enum": {
                      "name": "VaultSubResourceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AzureBackup",
                          "value": "AzureBackup"
                        },
                        {
                          "name": "AzureBackup_secondary",
                          "value": "AzureBackup_secondary"
                        },
                        {
                          "name": "AzureSiteRecovery",
                          "value": "AzureSiteRecovery"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ResourceCapabilitiesBase": {
      "type": "object",
      "description": "Base class for request and response capabilities information for Microsoft.RecoveryServices",
      "properties": {
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.RecoveryServices/Vaults"
        }
      },
      "required": [
        "type"
      ]
    },
    "ResourceCertificateAndAadDetails": {
      "type": "object",
      "description": "Certificate details representing the Vault credentials for AAD.",
      "properties": {
        "aadAuthority": {
          "type": "string",
          "description": "AAD tenant authority."
        },
        "aadTenantId": {
          "type": "string",
          "description": "AAD tenant Id."
        },
        "servicePrincipalClientId": {
          "type": "string",
          "description": "AAD service principal clientId."
        },
        "servicePrincipalObjectId": {
          "type": "string",
          "description": "AAD service principal ObjectId."
        },
        "azureManagementEndpointAudience": {
          "type": "string",
          "description": "Azure Management Endpoint Audience."
        },
        "serviceResourceId": {
          "type": "string",
          "description": "Service Resource Id."
        },
        "aadAudience": {
          "type": "string",
          "description": "AAD audience for the resource"
        }
      },
      "required": [
        "aadAuthority",
        "aadTenantId",
        "servicePrincipalClientId",
        "servicePrincipalObjectId",
        "azureManagementEndpointAudience"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Certificate details representing the Vault credentials.",
          "properties": {
            "authType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "certificate": {
              "type": "string",
              "format": "byte",
              "description": "The base64 encoded certificate raw data string."
            },
            "friendlyName": {
              "type": "string",
              "description": "Certificate friendly name."
            },
            "issuer": {
              "type": "string",
              "description": "Certificate issuer."
            },
            "resourceId": {
              "type": "integer",
              "format": "int64",
              "description": "Resource ID of the vault."
            },
            "subject": {
              "type": "string",
              "description": "Certificate Subject Name."
            },
            "thumbprint": {
              "type": "string",
              "description": "Certificate thumbprint."
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity start Date time."
            },
            "validTo": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity End Date time."
            }
          },
          "discriminator": "authType",
          "required": [
            "authType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureActiveDirectory"
    },
    "ResourceCertificateAndAcsDetails": {
      "type": "object",
      "description": "Certificate details representing the Vault credentials for ACS.",
      "properties": {
        "globalAcsNamespace": {
          "type": "string",
          "description": "ACS namespace name - tenant for our service."
        },
        "globalAcsHostName": {
          "type": "string",
          "description": "Acs mgmt host name to connect to."
        },
        "globalAcsRPRealm": {
          "type": "string",
          "description": "Global ACS namespace RP realm."
        }
      },
      "required": [
        "globalAcsNamespace",
        "globalAcsHostName",
        "globalAcsRPRealm"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Certificate details representing the Vault credentials.",
          "properties": {
            "authType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "certificate": {
              "type": "string",
              "format": "byte",
              "description": "The base64 encoded certificate raw data string."
            },
            "friendlyName": {
              "type": "string",
              "description": "Certificate friendly name."
            },
            "issuer": {
              "type": "string",
              "description": "Certificate issuer."
            },
            "resourceId": {
              "type": "integer",
              "format": "int64",
              "description": "Resource ID of the vault."
            },
            "subject": {
              "type": "string",
              "description": "Certificate Subject Name."
            },
            "thumbprint": {
              "type": "string",
              "description": "Certificate thumbprint."
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity start Date time."
            },
            "validTo": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity End Date time."
            }
          },
          "discriminator": "authType",
          "required": [
            "authType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AccessControlService"
    },
    "ResourceCertificateDetails": {
      "type": "object",
      "description": "Certificate details representing the Vault credentials.",
      "properties": {
        "authType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "certificate": {
          "type": "string",
          "format": "byte",
          "description": "The base64 encoded certificate raw data string."
        },
        "friendlyName": {
          "type": "string",
          "description": "Certificate friendly name."
        },
        "issuer": {
          "type": "string",
          "description": "Certificate issuer."
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "description": "Resource ID of the vault."
        },
        "subject": {
          "type": "string",
          "description": "Certificate Subject Name."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate Validity start Date time."
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate Validity End Date time."
        }
      },
      "discriminator": "authType",
      "required": [
        "authType"
      ]
    },
    "ResourceIdentityType": {
      "type": "string",
      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
      "enum": [
        "SystemAssigned",
        "None",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned, UserAssigned",
            "value": "SystemAssigned, UserAssigned"
          }
        ]
      }
    },
    "ResourceMoveState": {
      "type": "string",
      "description": "The State of the Resource after the move operation",
      "enum": [
        "Unknown",
        "InProgress",
        "PrepareFailed",
        "CommitFailed",
        "PrepareTimedout",
        "CommitTimedout",
        "MoveSucceeded",
        "Failure",
        "CriticalFailure",
        "PartialSuccess"
      ],
      "x-ms-enum": {
        "name": "ResourceMoveState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "PrepareFailed",
            "value": "PrepareFailed"
          },
          {
            "name": "CommitFailed",
            "value": "CommitFailed"
          },
          {
            "name": "PrepareTimedout",
            "value": "PrepareTimedout"
          },
          {
            "name": "CommitTimedout",
            "value": "CommitTimedout"
          },
          {
            "name": "MoveSucceeded",
            "value": "MoveSucceeded"
          },
          {
            "name": "Failure",
            "value": "Failure"
          },
          {
            "name": "CriticalFailure",
            "value": "CriticalFailure"
          },
          {
            "name": "PartialSuccess",
            "value": "PartialSuccess"
          }
        ]
      }
    },
    "RestoreSettings": {
      "type": "object",
      "description": "Restore Settings  of the vault",
      "properties": {
        "crossSubscriptionRestoreSettings": {
          "description": "Settings for CrossSubscriptionRestore",
          "type": "object",
          "properties": {
            "crossSubscriptionRestoreState": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled",
                "PermanentlyDisabled"
              ],
              "x-ms-enum": {
                "name": "CrossSubscriptionRestoreState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "PermanentlyDisabled",
                    "value": "PermanentlyDisabled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "SecureScoreLevel": {
      "type": "string",
      "description": "Secure Score of Recovery Services Vault",
      "enum": [
        "None",
        "Minimum",
        "Adequate",
        "Maximum"
      ],
      "x-ms-enum": {
        "name": "SecureScoreLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Minimum",
            "value": "Minimum"
          },
          {
            "name": "Adequate",
            "value": "Adequate"
          },
          {
            "name": "Maximum",
            "value": "Maximum"
          }
        ]
      }
    },
    "SecuritySettings": {
      "type": "object",
      "description": "Security Settings of the vault",
      "properties": {
        "immutabilitySettings": {
          "description": "Immutability Settings of a vault",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "enum": [
                "Disabled",
                "Unlocked",
                "Locked"
              ],
              "x-ms-enum": {
                "name": "ImmutabilityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Unlocked",
                    "value": "Unlocked"
                  },
                  {
                    "name": "Locked",
                    "value": "Locked"
                  }
                ]
              }
            }
          }
        },
        "softDeleteSettings": {
          "description": "Soft delete Settings of a vault",
          "type": "object",
          "properties": {
            "softDeleteState": {
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled",
                "AlwaysON"
              ],
              "x-ms-enum": {
                "name": "SoftDeleteState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "AlwaysON",
                    "value": "AlwaysON"
                  }
                ]
              }
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "enhancedSecurityState": {
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled",
                "AlwaysON"
              ],
              "x-ms-enum": {
                "name": "EnhancedSecurityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "AlwaysON",
                    "value": "AlwaysON"
                  }
                ]
              }
            }
          }
        },
        "multiUserAuthorization": {
          "description": "MUA Settings of a vault",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MultiUserAuthorization",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "sourceScanConfiguration": {
          "description": "Source scan configuration of vault",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "State",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "sourceScanIdentity": {
              "description": "Identity details to be used for an operation",
              "type": "object",
              "properties": {
                "operationIdentityType": {
                  "description": "Identity type that should be used for an operation.",
                  "type": "string",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "IdentityType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssigned",
                        "value": "SystemAssigned"
                      },
                      {
                        "name": "UserAssigned",
                        "value": "UserAssigned"
                      }
                    ]
                  }
                },
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                }
              }
            }
          }
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "Identifies the unique system identifier for each Azure resource.",
      "properties": {
        "name": {
          "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
          "type": "string",
          "enum": [
            "Standard",
            "RS0"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "RS0",
                "value": "RS0"
              }
            ]
          }
        },
        "tier": {
          "type": "string",
          "description": "The Sku tier."
        },
        "family": {
          "type": "string",
          "description": "The sku family"
        },
        "size": {
          "type": "string",
          "description": "The sku size"
        },
        "capacity": {
          "type": "string",
          "description": "The sku capacity"
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
      "enum": [
        "Standard",
        "RS0"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "RS0",
            "value": "RS0"
          }
        ]
      }
    },
    "SoftDeleteSettings": {
      "type": "object",
      "description": "Soft delete Settings of vault",
      "properties": {
        "softDeleteState": {
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled",
            "AlwaysON"
          ],
          "x-ms-enum": {
            "name": "SoftDeleteState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "AlwaysON",
                "value": "AlwaysON"
              }
            ]
          }
        },
        "softDeleteRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Soft delete retention period in days"
        },
        "enhancedSecurityState": {
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled",
            "AlwaysON"
          ],
          "x-ms-enum": {
            "name": "EnhancedSecurityState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "AlwaysON",
                "value": "AlwaysON"
              }
            ]
          }
        }
      }
    },
    "SoftDeleteState": {
      "type": "string",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled",
        "AlwaysON"
      ],
      "x-ms-enum": {
        "name": "SoftDeleteState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "AlwaysON",
            "value": "AlwaysON"
          }
        ]
      }
    },
    "SourceScanConfiguration": {
      "type": "object",
      "description": "Source scan configuration of vault",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "sourceScanIdentity": {
          "description": "Identity details to be used for an operation",
          "type": "object",
          "properties": {
            "operationIdentityType": {
              "description": "Identity type that should be used for an operation.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssigned",
                    "value": "SystemAssigned"
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  }
                ]
              }
            },
            "userAssignedIdentity": {
              "type": "string",
              "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
            }
          }
        }
      }
    },
    "StandardTierStorageRedundancy": {
      "type": "string",
      "description": "The storage redundancy setting of a vault",
      "enum": [
        "Invalid",
        "LocallyRedundant",
        "GeoRedundant",
        "ZoneRedundant"
      ],
      "x-ms-enum": {
        "name": "StandardTierStorageRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "LocallyRedundant",
            "value": "LocallyRedundant"
          },
          {
            "name": "GeoRedundant",
            "value": "GeoRedundant"
          },
          {
            "name": "ZoneRedundant",
            "value": "ZoneRedundant"
          }
        ]
      }
    },
    "State": {
      "type": "string",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "TriggerType": {
      "type": "string",
      "description": "The way the vault upgrade was triggered.",
      "enum": [
        "UserTriggered",
        "ForcedUpgrade"
      ],
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true,
        "values": [
          {
            "name": "UserTriggered",
            "value": "UserTriggered"
          },
          {
            "name": "ForcedUpgrade",
            "value": "ForcedUpgrade"
          }
        ]
      }
    },
    "UpgradeDetails": {
      "type": "object",
      "description": "Details for upgrading vault.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "ID of the vault upgrade operation.",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which the upgrade operation has started.",
          "readOnly": true
        },
        "lastUpdatedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which the upgrade operation status was last updated.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which the upgrade operation has ended.",
          "readOnly": true
        },
        "status": {
          "description": "Status of the vault upgrade operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "InProgress",
            "Upgraded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "VaultUpgradeState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Upgraded",
                "value": "Upgraded"
              },
              {
                "name": "Failed",
                "value": "Failed"
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Message to the user containing information about the upgrade operation.",
          "readOnly": true
        },
        "triggerType": {
          "description": "The way the vault upgrade was triggered.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "UserTriggered",
            "ForcedUpgrade"
          ],
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true,
            "values": [
              {
                "name": "UserTriggered",
                "value": "UserTriggered"
              },
              {
                "name": "ForcedUpgrade",
                "value": "ForcedUpgrade"
              }
            ]
          }
        },
        "upgradedResourceId": {
          "type": "string",
          "description": "Resource ID of the upgraded vault.",
          "readOnly": true
        },
        "previousResourceId": {
          "type": "string",
          "description": "Resource ID of the vault before the upgrade.",
          "readOnly": true
        }
      }
    },
    "UsagesUnit": {
      "type": "string",
      "description": "Unit of the usage.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountPerSecond",
        "BytesPerSecond"
      ],
      "x-ms-enum": {
        "name": "UsagesUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Count",
            "value": "Count"
          },
          {
            "name": "Bytes",
            "value": "Bytes"
          },
          {
            "name": "Seconds",
            "value": "Seconds"
          },
          {
            "name": "Percent",
            "value": "Percent"
          },
          {
            "name": "CountPerSecond",
            "value": "CountPerSecond"
          },
          {
            "name": "BytesPerSecond",
            "value": "BytesPerSecond"
          }
        ]
      }
    },
    "UserIdentity": {
      "type": "object",
      "description": "A resource identity that is managed by the user of the service.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of the user-assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client ID of the user-assigned identity.",
          "readOnly": true
        }
      }
    },
    "Vault": {
      "type": "object",
      "description": "Resource information, as returned by the resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Properties of the vault.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning State.",
              "readOnly": true
            },
            "upgradeDetails": {
              "description": "Details for upgrading vault.",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "ID of the vault upgrade operation.",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation has started.",
                  "readOnly": true
                },
                "lastUpdatedTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation status was last updated.",
                  "readOnly": true
                },
                "endTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which the upgrade operation has ended.",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the vault upgrade operation.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Unknown",
                    "InProgress",
                    "Upgraded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "VaultUpgradeState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unknown",
                        "value": "Unknown"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Upgraded",
                        "value": "Upgraded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Message to the user containing information about the upgrade operation.",
                  "readOnly": true
                },
                "triggerType": {
                  "description": "The way the vault upgrade was triggered.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "UserTriggered",
                    "ForcedUpgrade"
                  ],
                  "x-ms-enum": {
                    "name": "TriggerType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UserTriggered",
                        "value": "UserTriggered"
                      },
                      {
                        "name": "ForcedUpgrade",
                        "value": "ForcedUpgrade"
                      }
                    ]
                  }
                },
                "upgradedResourceId": {
                  "type": "string",
                  "description": "Resource ID of the upgraded vault.",
                  "readOnly": true
                },
                "previousResourceId": {
                  "type": "string",
                  "description": "Resource ID of the vault before the upgrade.",
                  "readOnly": true
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connection.",
              "items": {
                "type": "object",
                "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Private Endpoint Connection Response Properties.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "provisioningState": {
                        "description": "Gets or sets provisioning state of the private endpoint connection.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Deleting",
                          "Failed",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded"
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting"
                            },
                            {
                              "name": "Failed",
                              "value": "Failed"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending"
                            }
                          ]
                        }
                      },
                      "privateEndpoint": {
                        "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets id.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Gets or sets private link service connection state.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Gets or sets the status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Pending",
                                  "value": "Pending"
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved"
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected"
                                }
                              ]
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Gets or sets description.",
                            "readOnly": true
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Gets or sets actions required.",
                            "readOnly": true
                          }
                        }
                      },
                      "groupIds": {
                        "type": "array",
                        "description": "Group Ids for the Private Endpoint",
                        "items": {
                          "type": "string",
                          "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                          "enum": [
                            "AzureBackup",
                            "AzureBackup_secondary",
                            "AzureSiteRecovery"
                          ],
                          "x-ms-enum": {
                            "name": "VaultSubResourceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBackup",
                                "value": "AzureBackup"
                              },
                              {
                                "name": "AzureBackup_secondary",
                                "value": "AzureBackup_secondary"
                              },
                              {
                                "name": "AzureSiteRecovery",
                                "value": "AzureSiteRecovery"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the private Endpoint Connection",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                    "readOnly": true
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the private Endpoint connection",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "privateEndpointStateForBackup": {
              "description": "Private endpoint state for backup.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "VaultPrivateEndpointState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "privateEndpointStateForSiteRecovery": {
              "description": "Private endpoint state for site recovery.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "VaultPrivateEndpointState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "encryption": {
              "description": "Customer Managed Key details of the resource.",
              "type": "object",
              "properties": {
                "keyVaultProperties": {
                  "description": "The properties of the Key Vault which hosts CMK",
                  "type": "object",
                  "properties": {
                    "keyUri": {
                      "type": "string",
                      "description": "The key uri of the Customer Managed Key"
                    }
                  }
                },
                "kekIdentity": {
                  "description": "The details of the identity used for CMK",
                  "type": "object",
                  "properties": {
                    "useSystemAssignedIdentity": {
                      "type": "boolean",
                      "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                    }
                  }
                },
                "infrastructureEncryption": {
                  "description": "Enabling/Disabling the Double Encryption state",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "InfrastructureEncryptionState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "moveDetails": {
              "description": "The details of the latest move operation performed on the Azure Resource",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "OperationId of the Resource Move Operation",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start Time of the Resource Move Operation",
                  "readOnly": true
                },
                "completionTimeUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End Time of the Resource Move Operation",
                  "readOnly": true
                },
                "sourceResourceId": {
                  "type": "string",
                  "description": "Source Resource of the Resource Move Operation",
                  "readOnly": true
                },
                "targetResourceId": {
                  "type": "string",
                  "description": "Target Resource of the Resource Move Operation",
                  "readOnly": true
                }
              }
            },
            "moveState": {
              "description": "The State of the Resource after the move operation",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unknown",
                "InProgress",
                "PrepareFailed",
                "CommitFailed",
                "PrepareTimedout",
                "CommitTimedout",
                "MoveSucceeded",
                "Failure",
                "CriticalFailure",
                "PartialSuccess"
              ],
              "x-ms-enum": {
                "name": "ResourceMoveState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown"
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "PrepareFailed",
                    "value": "PrepareFailed"
                  },
                  {
                    "name": "CommitFailed",
                    "value": "CommitFailed"
                  },
                  {
                    "name": "PrepareTimedout",
                    "value": "PrepareTimedout"
                  },
                  {
                    "name": "CommitTimedout",
                    "value": "CommitTimedout"
                  },
                  {
                    "name": "MoveSucceeded",
                    "value": "MoveSucceeded"
                  },
                  {
                    "name": "Failure",
                    "value": "Failure"
                  },
                  {
                    "name": "CriticalFailure",
                    "value": "CriticalFailure"
                  },
                  {
                    "name": "PartialSuccess",
                    "value": "PartialSuccess"
                  }
                ]
              }
            },
            "backupStorageVersion": {
              "description": "Backup storage version",
              "readOnly": true,
              "type": "string",
              "enum": [
                "V1",
                "V2",
                "Unassigned"
              ],
              "x-ms-enum": {
                "name": "BackupStorageVersion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "V1",
                    "value": "V1"
                  },
                  {
                    "name": "V2",
                    "value": "V2"
                  },
                  {
                    "name": "Unassigned",
                    "value": "Unassigned"
                  }
                ]
              }
            },
            "publicNetworkAccess": {
              "description": "property to enable or disable resource provider inbound network traffic from public clients",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "monitoringSettings": {
              "description": "Monitoring Settings of the vault",
              "type": "object",
              "properties": {
                "azureMonitorAlertSettings": {
                  "description": "Settings for Azure Monitor based alerts",
                  "type": "object",
                  "properties": {
                    "alertsForAllJobFailures": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "alertsForAllReplicationIssues": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "alertsForAllFailoverIssues": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "classicAlertSettings": {
                  "description": "Settings for classic alerts",
                  "type": "object",
                  "properties": {
                    "alertsForCriticalOperations": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "emailNotificationsForSiteRecovery": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AlertsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "restoreSettings": {
              "description": "Restore Settings of the vault",
              "type": "object",
              "properties": {
                "crossSubscriptionRestoreSettings": {
                  "description": "Settings for CrossSubscriptionRestore",
                  "type": "object",
                  "properties": {
                    "crossSubscriptionRestoreState": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "PermanentlyDisabled"
                      ],
                      "x-ms-enum": {
                        "name": "CrossSubscriptionRestoreState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "PermanentlyDisabled",
                            "value": "PermanentlyDisabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "redundancySettings": {
              "description": "The redundancy Settings of a Vault",
              "type": "object",
              "properties": {
                "standardTierStorageRedundancy": {
                  "description": "The storage redundancy setting of a vault",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "LocallyRedundant",
                    "GeoRedundant",
                    "ZoneRedundant"
                  ],
                  "x-ms-enum": {
                    "name": "StandardTierStorageRedundancy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "LocallyRedundant",
                        "value": "LocallyRedundant"
                      },
                      {
                        "name": "GeoRedundant",
                        "value": "GeoRedundant"
                      },
                      {
                        "name": "ZoneRedundant",
                        "value": "ZoneRedundant"
                      }
                    ]
                  }
                },
                "crossRegionRestore": {
                  "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "CrossRegionRestore",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "securitySettings": {
              "description": "Security Settings of the vault",
              "type": "object",
              "properties": {
                "immutabilitySettings": {
                  "description": "Immutability Settings of a vault",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Unlocked",
                        "Locked"
                      ],
                      "x-ms-enum": {
                        "name": "ImmutabilityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Unlocked",
                            "value": "Unlocked"
                          },
                          {
                            "name": "Locked",
                            "value": "Locked"
                          }
                        ]
                      }
                    }
                  }
                },
                "softDeleteSettings": {
                  "description": "Soft delete Settings of a vault",
                  "type": "object",
                  "properties": {
                    "softDeleteState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "SoftDeleteState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    },
                    "softDeleteRetentionPeriodInDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Soft delete retention period in days"
                    },
                    "enhancedSecurityState": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled",
                        "AlwaysON"
                      ],
                      "x-ms-enum": {
                        "name": "EnhancedSecurityState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "AlwaysON",
                            "value": "AlwaysON"
                          }
                        ]
                      }
                    }
                  }
                },
                "multiUserAuthorization": {
                  "description": "MUA Settings of a vault",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "MultiUserAuthorization",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "sourceScanConfiguration": {
                  "description": "Source scan configuration of vault",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "sourceScanIdentity": {
                      "description": "Identity details to be used for an operation",
                      "type": "object",
                      "properties": {
                        "operationIdentityType": {
                          "description": "Identity type that should be used for an operation.",
                          "type": "string",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssigned",
                                "value": "SystemAssigned"
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned"
                              }
                            ]
                          }
                        },
                        "userAssignedIdentity": {
                          "type": "string",
                          "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                        }
                      }
                    }
                  }
                }
              }
            },
            "secureScore": {
              "description": "Secure Score of Recovery Services Vault",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Minimum",
                "Adequate",
                "Maximum"
              ],
              "x-ms-enum": {
                "name": "SecureScoreLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Minimum",
                    "value": "Minimum"
                  },
                  {
                    "name": "Adequate",
                    "value": "Adequate"
                  },
                  {
                    "name": "Maximum",
                    "value": "Maximum"
                  }
                ]
              }
            },
            "bcdrSecurityLevel": {
              "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Poor",
                "Fair",
                "Good",
                "Excellent"
              ],
              "x-ms-enum": {
                "name": "BCDRSecurityLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Poor",
                    "value": "Poor"
                  },
                  {
                    "name": "Fair",
                    "value": "Fair"
                  },
                  {
                    "name": "Good",
                    "value": "Good"
                  },
                  {
                    "name": "Excellent",
                    "value": "Excellent"
                  }
                ]
              }
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "identity": {
          "description": "Identity for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID of resource identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant ID of resource.",
              "readOnly": true
            },
            "type": {
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssigned",
                    "value": "SystemAssigned"
                  },
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  },
                  {
                    "name": "SystemAssigned, UserAssigned",
                    "value": "SystemAssigned, UserAssigned"
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "additionalProperties": {
                "type": "object",
                "description": "A resource identity that is managed by the user of the service.",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "The principal ID of the user-assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The client ID of the user-assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "sku": {
          "description": "Identifies the unique system identifier for each Azure resource.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
              "type": "string",
              "enum": [
                "Standard",
                "RS0"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "RS0",
                    "value": "RS0"
                  }
                ]
              }
            },
            "tier": {
              "type": "string",
              "description": "The Sku tier."
            },
            "family": {
              "type": "string",
              "description": "The sku family"
            },
            "size": {
              "type": "string",
              "description": "The sku size"
            },
            "capacity": {
              "type": "string",
              "description": "The sku capacity"
            }
          },
          "required": [
            "name"
          ]
        },
        "etag": {
          "type": "string",
          "description": "etag for the resource."
        }
      }
    },
    "VaultCertificateResponse": {
      "type": "object",
      "description": "Certificate corresponding to a vault that can be used by clients to register themselves with the vault.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name associated with the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Certificate details representing the Vault credentials.",
          "type": "object",
          "properties": {
            "authType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "certificate": {
              "type": "string",
              "format": "byte",
              "description": "The base64 encoded certificate raw data string."
            },
            "friendlyName": {
              "type": "string",
              "description": "Certificate friendly name."
            },
            "issuer": {
              "type": "string",
              "description": "Certificate issuer."
            },
            "resourceId": {
              "type": "integer",
              "format": "int64",
              "description": "Resource ID of the vault."
            },
            "subject": {
              "type": "string",
              "description": "Certificate Subject Name."
            },
            "thumbprint": {
              "type": "string",
              "description": "Certificate thumbprint."
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity start Date time."
            },
            "validTo": {
              "type": "string",
              "format": "date-time",
              "description": "Certificate Validity End Date time."
            }
          },
          "discriminator": "authType",
          "required": [
            "authType"
          ]
        }
      }
    },
    "VaultExtendedInfo": {
      "type": "object",
      "description": "Vault extended information.",
      "properties": {
        "integrityKey": {
          "type": "string",
          "description": "Integrity key."
        },
        "encryptionKey": {
          "type": "string",
          "description": "Encryption key."
        },
        "encryptionKeyThumbprint": {
          "type": "string",
          "description": "Encryption key thumbprint."
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm for Vault ExtendedInfo"
        }
      }
    },
    "VaultExtendedInfoResource": {
      "type": "object",
      "description": "Vault extended information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Vault extended information.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "integrityKey": {
              "type": "string",
              "description": "Integrity key."
            },
            "encryptionKey": {
              "type": "string",
              "description": "Encryption key."
            },
            "encryptionKeyThumbprint": {
              "type": "string",
              "description": "Encryption key thumbprint."
            },
            "algorithm": {
              "type": "string",
              "description": "Algorithm for Vault ExtendedInfo"
            }
          }
        },
        "etag": {
          "type": "string",
          "description": "etag for the resource."
        }
      }
    },
    "VaultList": {
      "type": "object",
      "description": "The response model for a list of Vaults.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Vault items on this page",
          "items": {
            "type": "object",
            "description": "Resource information, as returned by the resource provider.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of the vault.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning State.",
                    "readOnly": true
                  },
                  "upgradeDetails": {
                    "description": "Details for upgrading vault.",
                    "type": "object",
                    "properties": {
                      "operationId": {
                        "type": "string",
                        "description": "ID of the vault upgrade operation.",
                        "readOnly": true
                      },
                      "startTimeUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC time at which the upgrade operation has started.",
                        "readOnly": true
                      },
                      "lastUpdatedTimeUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC time at which the upgrade operation status was last updated.",
                        "readOnly": true
                      },
                      "endTimeUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC time at which the upgrade operation has ended.",
                        "readOnly": true
                      },
                      "status": {
                        "description": "Status of the vault upgrade operation.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Unknown",
                          "InProgress",
                          "Upgraded",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "VaultUpgradeState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown"
                            },
                            {
                              "name": "InProgress",
                              "value": "InProgress"
                            },
                            {
                              "name": "Upgraded",
                              "value": "Upgraded"
                            },
                            {
                              "name": "Failed",
                              "value": "Failed"
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Message to the user containing information about the upgrade operation.",
                        "readOnly": true
                      },
                      "triggerType": {
                        "description": "The way the vault upgrade was triggered.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "UserTriggered",
                          "ForcedUpgrade"
                        ],
                        "x-ms-enum": {
                          "name": "TriggerType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "UserTriggered",
                              "value": "UserTriggered"
                            },
                            {
                              "name": "ForcedUpgrade",
                              "value": "ForcedUpgrade"
                            }
                          ]
                        }
                      },
                      "upgradedResourceId": {
                        "type": "string",
                        "description": "Resource ID of the upgraded vault.",
                        "readOnly": true
                      },
                      "previousResourceId": {
                        "type": "string",
                        "description": "Resource ID of the vault before the upgrade.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "description": "List of private endpoint connection.",
                    "items": {
                      "type": "object",
                      "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Private Endpoint Connection Response Properties.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "provisioningState": {
                              "description": "Gets or sets provisioning state of the private endpoint connection.",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Deleting",
                                "Failed",
                                "Pending"
                              ],
                              "x-ms-enum": {
                                "name": "ProvisioningState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Succeeded",
                                    "value": "Succeeded"
                                  },
                                  {
                                    "name": "Deleting",
                                    "value": "Deleting"
                                  },
                                  {
                                    "name": "Failed",
                                    "value": "Failed"
                                  },
                                  {
                                    "name": "Pending",
                                    "value": "Pending"
                                  }
                                ]
                              }
                            },
                            "privateEndpoint": {
                              "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Gets or sets id.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Gets or sets private link service connection state.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Gets or sets the status.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointConnectionStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Pending",
                                        "value": "Pending"
                                      },
                                      {
                                        "name": "Approved",
                                        "value": "Approved"
                                      },
                                      {
                                        "name": "Rejected",
                                        "value": "Rejected"
                                      },
                                      {
                                        "name": "Disconnected",
                                        "value": "Disconnected"
                                      }
                                    ]
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Gets or sets description.",
                                  "readOnly": true
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "Gets or sets actions required.",
                                  "readOnly": true
                                }
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "description": "Group Ids for the Private Endpoint",
                              "items": {
                                "type": "string",
                                "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                                "enum": [
                                  "AzureBackup",
                                  "AzureBackup_secondary",
                                  "AzureSiteRecovery"
                                ],
                                "x-ms-enum": {
                                  "name": "VaultSubResourceType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureBackup",
                                      "value": "AzureBackup"
                                    },
                                    {
                                      "name": "AzureBackup_secondary",
                                      "value": "AzureBackup_secondary"
                                    },
                                    {
                                      "name": "AzureSiteRecovery",
                                      "value": "AzureSiteRecovery"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the private Endpoint Connection",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the private Endpoint connection",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "privateEndpointStateForBackup": {
                    "description": "Private endpoint state for backup.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "VaultPrivateEndpointState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        }
                      ]
                    }
                  },
                  "privateEndpointStateForSiteRecovery": {
                    "description": "Private endpoint state for site recovery.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "VaultPrivateEndpointState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        }
                      ]
                    }
                  },
                  "encryption": {
                    "description": "Customer Managed Key details of the resource.",
                    "type": "object",
                    "properties": {
                      "keyVaultProperties": {
                        "description": "The properties of the Key Vault which hosts CMK",
                        "type": "object",
                        "properties": {
                          "keyUri": {
                            "type": "string",
                            "description": "The key uri of the Customer Managed Key"
                          }
                        }
                      },
                      "kekIdentity": {
                        "description": "The details of the identity used for CMK",
                        "type": "object",
                        "properties": {
                          "useSystemAssignedIdentity": {
                            "type": "boolean",
                            "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                          },
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                          }
                        }
                      },
                      "infrastructureEncryption": {
                        "description": "Enabling/Disabling the Double Encryption state",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "InfrastructureEncryptionState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "moveDetails": {
                    "description": "The details of the latest move operation performed on the Azure Resource",
                    "type": "object",
                    "properties": {
                      "operationId": {
                        "type": "string",
                        "description": "OperationId of the Resource Move Operation",
                        "readOnly": true
                      },
                      "startTimeUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start Time of the Resource Move Operation",
                        "readOnly": true
                      },
                      "completionTimeUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End Time of the Resource Move Operation",
                        "readOnly": true
                      },
                      "sourceResourceId": {
                        "type": "string",
                        "description": "Source Resource of the Resource Move Operation",
                        "readOnly": true
                      },
                      "targetResourceId": {
                        "type": "string",
                        "description": "Target Resource of the Resource Move Operation",
                        "readOnly": true
                      }
                    }
                  },
                  "moveState": {
                    "description": "The State of the Resource after the move operation",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Unknown",
                      "InProgress",
                      "PrepareFailed",
                      "CommitFailed",
                      "PrepareTimedout",
                      "CommitTimedout",
                      "MoveSucceeded",
                      "Failure",
                      "CriticalFailure",
                      "PartialSuccess"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceMoveState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown"
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress"
                        },
                        {
                          "name": "PrepareFailed",
                          "value": "PrepareFailed"
                        },
                        {
                          "name": "CommitFailed",
                          "value": "CommitFailed"
                        },
                        {
                          "name": "PrepareTimedout",
                          "value": "PrepareTimedout"
                        },
                        {
                          "name": "CommitTimedout",
                          "value": "CommitTimedout"
                        },
                        {
                          "name": "MoveSucceeded",
                          "value": "MoveSucceeded"
                        },
                        {
                          "name": "Failure",
                          "value": "Failure"
                        },
                        {
                          "name": "CriticalFailure",
                          "value": "CriticalFailure"
                        },
                        {
                          "name": "PartialSuccess",
                          "value": "PartialSuccess"
                        }
                      ]
                    }
                  },
                  "backupStorageVersion": {
                    "description": "Backup storage version",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2",
                      "Unassigned"
                    ],
                    "x-ms-enum": {
                      "name": "BackupStorageVersion",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "V1",
                          "value": "V1"
                        },
                        {
                          "name": "V2",
                          "value": "V2"
                        },
                        {
                          "name": "Unassigned",
                          "value": "Unassigned"
                        }
                      ]
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "property to enable or disable resource provider inbound network traffic from public clients",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "monitoringSettings": {
                    "description": "Monitoring Settings of the vault",
                    "type": "object",
                    "properties": {
                      "azureMonitorAlertSettings": {
                        "description": "Settings for Azure Monitor based alerts",
                        "type": "object",
                        "properties": {
                          "alertsForAllJobFailures": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AlertsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "alertsForAllReplicationIssues": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AlertsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "alertsForAllFailoverIssues": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AlertsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "classicAlertSettings": {
                        "description": "Settings for classic alerts",
                        "type": "object",
                        "properties": {
                          "alertsForCriticalOperations": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AlertsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "emailNotificationsForSiteRecovery": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AlertsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "restoreSettings": {
                    "description": "Restore Settings of the vault",
                    "type": "object",
                    "properties": {
                      "crossSubscriptionRestoreSettings": {
                        "description": "Settings for CrossSubscriptionRestore",
                        "type": "object",
                        "properties": {
                          "crossSubscriptionRestoreState": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "PermanentlyDisabled"
                            ],
                            "x-ms-enum": {
                              "name": "CrossSubscriptionRestoreState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "PermanentlyDisabled",
                                  "value": "PermanentlyDisabled"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "redundancySettings": {
                    "description": "The redundancy Settings of a Vault",
                    "type": "object",
                    "properties": {
                      "standardTierStorageRedundancy": {
                        "description": "The storage redundancy setting of a vault",
                        "type": "string",
                        "enum": [
                          "Invalid",
                          "LocallyRedundant",
                          "GeoRedundant",
                          "ZoneRedundant"
                        ],
                        "x-ms-enum": {
                          "name": "StandardTierStorageRedundancy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Invalid",
                              "value": "Invalid"
                            },
                            {
                              "name": "LocallyRedundant",
                              "value": "LocallyRedundant"
                            },
                            {
                              "name": "GeoRedundant",
                              "value": "GeoRedundant"
                            },
                            {
                              "name": "ZoneRedundant",
                              "value": "ZoneRedundant"
                            }
                          ]
                        }
                      },
                      "crossRegionRestore": {
                        "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "CrossRegionRestore",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "securitySettings": {
                    "description": "Security Settings of the vault",
                    "type": "object",
                    "properties": {
                      "immutabilitySettings": {
                        "description": "Immutability Settings of a vault",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "enum": [
                              "Disabled",
                              "Unlocked",
                              "Locked"
                            ],
                            "x-ms-enum": {
                              "name": "ImmutabilityState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Unlocked",
                                  "value": "Unlocked"
                                },
                                {
                                  "name": "Locked",
                                  "value": "Locked"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "softDeleteSettings": {
                        "description": "Soft delete Settings of a vault",
                        "type": "object",
                        "properties": {
                          "softDeleteState": {
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Enabled",
                              "Disabled",
                              "AlwaysON"
                            ],
                            "x-ms-enum": {
                              "name": "SoftDeleteState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "AlwaysON",
                                  "value": "AlwaysON"
                                }
                              ]
                            }
                          },
                          "softDeleteRetentionPeriodInDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Soft delete retention period in days"
                          },
                          "enhancedSecurityState": {
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Enabled",
                              "Disabled",
                              "AlwaysON"
                            ],
                            "x-ms-enum": {
                              "name": "EnhancedSecurityState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "AlwaysON",
                                  "value": "AlwaysON"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "multiUserAuthorization": {
                        "description": "MUA Settings of a vault",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Invalid",
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "MultiUserAuthorization",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Invalid",
                              "value": "Invalid"
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "sourceScanConfiguration": {
                        "description": "Source scan configuration of vault",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "State",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Invalid",
                                  "value": "Invalid"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "sourceScanIdentity": {
                            "description": "Identity details to be used for an operation",
                            "type": "object",
                            "properties": {
                              "operationIdentityType": {
                                "description": "Identity type that should be used for an operation.",
                                "type": "string",
                                "enum": [
                                  "SystemAssigned",
                                  "UserAssigned"
                                ],
                                "x-ms-enum": {
                                  "name": "IdentityType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SystemAssigned",
                                      "value": "SystemAssigned"
                                    },
                                    {
                                      "name": "UserAssigned",
                                      "value": "UserAssigned"
                                    }
                                  ]
                                }
                              },
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "secureScore": {
                    "description": "Secure Score of Recovery Services Vault",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "Minimum",
                      "Adequate",
                      "Maximum"
                    ],
                    "x-ms-enum": {
                      "name": "SecureScoreLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "Minimum",
                          "value": "Minimum"
                        },
                        {
                          "name": "Adequate",
                          "value": "Adequate"
                        },
                        {
                          "name": "Maximum",
                          "value": "Maximum"
                        }
                      ]
                    }
                  },
                  "bcdrSecurityLevel": {
                    "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Poor",
                      "Fair",
                      "Good",
                      "Excellent"
                    ],
                    "x-ms-enum": {
                      "name": "BCDRSecurityLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Poor",
                          "value": "Poor"
                        },
                        {
                          "name": "Fair",
                          "value": "Fair"
                        },
                        {
                          "name": "Good",
                          "value": "Good"
                        },
                        {
                          "name": "Excellent",
                          "value": "Excellent"
                        }
                      ]
                    }
                  },
                  "resourceGuardOperationRequests": {
                    "type": "array",
                    "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "identity": {
                "description": "Identity for the resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "The principal ID of resource identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of resource.",
                    "readOnly": true
                  },
                  "type": {
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
                    "type": "string",
                    "enum": [
                      "SystemAssigned",
                      "None",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SystemAssigned",
                          "value": "SystemAssigned"
                        },
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "UserAssigned",
                          "value": "UserAssigned"
                        },
                        {
                          "name": "SystemAssigned, UserAssigned",
                          "value": "SystemAssigned, UserAssigned"
                        }
                      ]
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "A resource identity that is managed by the user of the service.",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "description": "The principal ID of the user-assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "description": "The client ID of the user-assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "sku": {
                "description": "Identifies the unique system identifier for each Azure resource.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "RS0"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "RS0",
                          "value": "RS0"
                        }
                      ]
                    }
                  },
                  "tier": {
                    "type": "string",
                    "description": "The Sku tier."
                  },
                  "family": {
                    "type": "string",
                    "description": "The sku family"
                  },
                  "size": {
                    "type": "string",
                    "description": "The sku size"
                  },
                  "capacity": {
                    "type": "string",
                    "description": "The sku capacity"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "etag": {
                "type": "string",
                "description": "etag for the resource."
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VaultPrivateEndpointState": {
      "type": "string",
      "description": "Private endpoint state for backup.",
      "enum": [
        "None",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "VaultPrivateEndpointState",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "VaultProperties": {
      "type": "object",
      "description": "Properties of the vault.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "upgradeDetails": {
          "description": "Details for upgrading vault.",
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "ID of the vault upgrade operation.",
              "readOnly": true
            },
            "startTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which the upgrade operation has started.",
              "readOnly": true
            },
            "lastUpdatedTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which the upgrade operation status was last updated.",
              "readOnly": true
            },
            "endTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which the upgrade operation has ended.",
              "readOnly": true
            },
            "status": {
              "description": "Status of the vault upgrade operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unknown",
                "InProgress",
                "Upgraded",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "VaultUpgradeState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown"
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "Upgraded",
                    "value": "Upgraded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Message to the user containing information about the upgrade operation.",
              "readOnly": true
            },
            "triggerType": {
              "description": "The way the vault upgrade was triggered.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "UserTriggered",
                "ForcedUpgrade"
              ],
              "x-ms-enum": {
                "name": "TriggerType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserTriggered",
                    "value": "UserTriggered"
                  },
                  {
                    "name": "ForcedUpgrade",
                    "value": "ForcedUpgrade"
                  }
                ]
              }
            },
            "upgradedResourceId": {
              "type": "string",
              "description": "Resource ID of the upgraded vault.",
              "readOnly": true
            },
            "previousResourceId": {
              "type": "string",
              "description": "Resource ID of the vault before the upgrade.",
              "readOnly": true
            }
          }
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection.",
          "items": {
            "type": "object",
            "description": "Information to be stored in Vault properties as an element of privateEndpointConnections List.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.",
                "readOnly": true
              },
              "properties": {
                "description": "Private Endpoint Connection Response Properties.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Gets or sets provisioning state of the private endpoint connection.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Deleting",
                      "Failed",
                      "Pending"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed"
                        },
                        {
                          "name": "Pending",
                          "value": "Pending"
                        }
                      ]
                    }
                  },
                  "privateEndpoint": {
                    "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Gets or sets id.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Gets or sets private link service connection state.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Gets or sets the status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Pending",
                              "value": "Pending"
                            },
                            {
                              "name": "Approved",
                              "value": "Approved"
                            },
                            {
                              "name": "Rejected",
                              "value": "Rejected"
                            },
                            {
                              "name": "Disconnected",
                              "value": "Disconnected"
                            }
                          ]
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Gets or sets description.",
                        "readOnly": true
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Gets or sets actions required.",
                        "readOnly": true
                      }
                    }
                  },
                  "groupIds": {
                    "type": "array",
                    "description": "Group Ids for the Private Endpoint",
                    "items": {
                      "type": "string",
                      "description": "Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                      "enum": [
                        "AzureBackup",
                        "AzureBackup_secondary",
                        "AzureSiteRecovery"
                      ],
                      "x-ms-enum": {
                        "name": "VaultSubResourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureBackup",
                            "value": "AzureBackup"
                          },
                          {
                            "name": "AzureBackup_secondary",
                            "value": "AzureBackup_secondary"
                          },
                          {
                            "name": "AzureSiteRecovery",
                            "value": "AzureSiteRecovery"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of the private Endpoint Connection",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the private Endpoint connection",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "privateEndpointStateForBackup": {
          "description": "Private endpoint state for backup.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "VaultPrivateEndpointState",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              }
            ]
          }
        },
        "privateEndpointStateForSiteRecovery": {
          "description": "Private endpoint state for site recovery.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "VaultPrivateEndpointState",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              }
            ]
          }
        },
        "encryption": {
          "description": "Customer Managed Key details of the resource.",
          "type": "object",
          "properties": {
            "keyVaultProperties": {
              "description": "The properties of the Key Vault which hosts CMK",
              "type": "object",
              "properties": {
                "keyUri": {
                  "type": "string",
                  "description": "The key uri of the Customer Managed Key"
                }
              }
            },
            "kekIdentity": {
              "description": "The details of the identity used for CMK",
              "type": "object",
              "properties": {
                "useSystemAssignedIdentity": {
                  "type": "boolean",
                  "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
                },
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
                }
              }
            },
            "infrastructureEncryption": {
              "description": "Enabling/Disabling the Double Encryption state",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "InfrastructureEncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "moveDetails": {
          "description": "The details of the latest move operation performed on the Azure Resource",
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "OperationId of the Resource Move Operation",
              "readOnly": true
            },
            "startTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Start Time of the Resource Move Operation",
              "readOnly": true
            },
            "completionTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "End Time of the Resource Move Operation",
              "readOnly": true
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Source Resource of the Resource Move Operation",
              "readOnly": true
            },
            "targetResourceId": {
              "type": "string",
              "description": "Target Resource of the Resource Move Operation",
              "readOnly": true
            }
          }
        },
        "moveState": {
          "description": "The State of the Resource after the move operation",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "InProgress",
            "PrepareFailed",
            "CommitFailed",
            "PrepareTimedout",
            "CommitTimedout",
            "MoveSucceeded",
            "Failure",
            "CriticalFailure",
            "PartialSuccess"
          ],
          "x-ms-enum": {
            "name": "ResourceMoveState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "PrepareFailed",
                "value": "PrepareFailed"
              },
              {
                "name": "CommitFailed",
                "value": "CommitFailed"
              },
              {
                "name": "PrepareTimedout",
                "value": "PrepareTimedout"
              },
              {
                "name": "CommitTimedout",
                "value": "CommitTimedout"
              },
              {
                "name": "MoveSucceeded",
                "value": "MoveSucceeded"
              },
              {
                "name": "Failure",
                "value": "Failure"
              },
              {
                "name": "CriticalFailure",
                "value": "CriticalFailure"
              },
              {
                "name": "PartialSuccess",
                "value": "PartialSuccess"
              }
            ]
          }
        },
        "backupStorageVersion": {
          "description": "Backup storage version",
          "readOnly": true,
          "type": "string",
          "enum": [
            "V1",
            "V2",
            "Unassigned"
          ],
          "x-ms-enum": {
            "name": "BackupStorageVersion",
            "modelAsString": true,
            "values": [
              {
                "name": "V1",
                "value": "V1"
              },
              {
                "name": "V2",
                "value": "V2"
              },
              {
                "name": "Unassigned",
                "value": "Unassigned"
              }
            ]
          }
        },
        "publicNetworkAccess": {
          "description": "property to enable or disable resource provider inbound network traffic from public clients",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "monitoringSettings": {
          "description": "Monitoring Settings of the vault",
          "type": "object",
          "properties": {
            "azureMonitorAlertSettings": {
              "description": "Settings for Azure Monitor based alerts",
              "type": "object",
              "properties": {
                "alertsForAllJobFailures": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AlertsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "alertsForAllReplicationIssues": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AlertsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "alertsForAllFailoverIssues": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AlertsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "classicAlertSettings": {
              "description": "Settings for classic alerts",
              "type": "object",
              "properties": {
                "alertsForCriticalOperations": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AlertsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "emailNotificationsForSiteRecovery": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "AlertsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "restoreSettings": {
          "description": "Restore Settings of the vault",
          "type": "object",
          "properties": {
            "crossSubscriptionRestoreSettings": {
              "description": "Settings for CrossSubscriptionRestore",
              "type": "object",
              "properties": {
                "crossSubscriptionRestoreState": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled",
                    "PermanentlyDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "CrossSubscriptionRestoreState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "PermanentlyDisabled",
                        "value": "PermanentlyDisabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "redundancySettings": {
          "description": "The redundancy Settings of a Vault",
          "type": "object",
          "properties": {
            "standardTierStorageRedundancy": {
              "description": "The storage redundancy setting of a vault",
              "type": "string",
              "enum": [
                "Invalid",
                "LocallyRedundant",
                "GeoRedundant",
                "ZoneRedundant"
              ],
              "x-ms-enum": {
                "name": "StandardTierStorageRedundancy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "LocallyRedundant",
                    "value": "LocallyRedundant"
                  },
                  {
                    "name": "GeoRedundant",
                    "value": "GeoRedundant"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  }
                ]
              }
            },
            "crossRegionRestore": {
              "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "CrossRegionRestore",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "securitySettings": {
          "description": "Security Settings of the vault",
          "type": "object",
          "properties": {
            "immutabilitySettings": {
              "description": "Immutability Settings of a vault",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Unlocked",
                    "Locked"
                  ],
                  "x-ms-enum": {
                    "name": "ImmutabilityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "Unlocked",
                        "value": "Unlocked"
                      },
                      {
                        "name": "Locked",
                        "value": "Locked"
                      }
                    ]
                  }
                }
              }
            },
            "softDeleteSettings": {
              "description": "Soft delete Settings of a vault",
              "type": "object",
              "properties": {
                "softDeleteState": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Enabled",
                    "Disabled",
                    "AlwaysON"
                  ],
                  "x-ms-enum": {
                    "name": "SoftDeleteState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "AlwaysON",
                        "value": "AlwaysON"
                      }
                    ]
                  }
                },
                "softDeleteRetentionPeriodInDays": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Soft delete retention period in days"
                },
                "enhancedSecurityState": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Enabled",
                    "Disabled",
                    "AlwaysON"
                  ],
                  "x-ms-enum": {
                    "name": "EnhancedSecurityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "AlwaysON",
                        "value": "AlwaysON"
                      }
                    ]
                  }
                }
              }
            },
            "multiUserAuthorization": {
              "description": "MUA Settings of a vault",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "MultiUserAuthorization",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "sourceScanConfiguration": {
              "description": "Source scan configuration of vault",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "State",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "sourceScanIdentity": {
                  "description": "Identity details to be used for an operation",
                  "type": "object",
                  "properties": {
                    "operationIdentityType": {
                      "description": "Identity type that should be used for an operation.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "User assigned identity to be used for an operation if operationIdentityType is UserAssigned."
                    }
                  }
                }
              }
            }
          }
        },
        "secureScore": {
          "description": "Secure Score of Recovery Services Vault",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Minimum",
            "Adequate",
            "Maximum"
          ],
          "x-ms-enum": {
            "name": "SecureScoreLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Minimum",
                "value": "Minimum"
              },
              {
                "name": "Adequate",
                "value": "Adequate"
              },
              {
                "name": "Maximum",
                "value": "Maximum"
              }
            ]
          }
        },
        "bcdrSecurityLevel": {
          "description": "Security levels of Recovery Services Vault for business continuity and disaster recovery",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Poor",
            "Fair",
            "Good",
            "Excellent"
          ],
          "x-ms-enum": {
            "name": "BCDRSecurityLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Poor",
                "value": "Poor"
              },
              {
                "name": "Fair",
                "value": "Fair"
              },
              {
                "name": "Good",
                "value": "Good"
              },
              {
                "name": "Excellent",
                "value": "Excellent"
              }
            ]
          }
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VaultPropertiesEncryption": {
      "type": "object",
      "description": "Customer Managed Key details of the resource.",
      "properties": {
        "keyVaultProperties": {
          "description": "The properties of the Key Vault which hosts CMK",
          "type": "object",
          "properties": {
            "keyUri": {
              "type": "string",
              "description": "The key uri of the Customer Managed Key"
            }
          }
        },
        "kekIdentity": {
          "description": "The details of the identity used for CMK",
          "type": "object",
          "properties": {
            "useSystemAssignedIdentity": {
              "type": "boolean",
              "description": "Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field"
            },
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned"
            }
          }
        },
        "infrastructureEncryption": {
          "description": "Enabling/Disabling the Double Encryption state",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InfrastructureEncryptionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "VaultPropertiesMoveDetails": {
      "type": "object",
      "description": "The details of the latest move operation performed on the Azure Resource",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "OperationId of the Resource Move Operation",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Start Time of the Resource Move Operation",
          "readOnly": true
        },
        "completionTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "End Time of the Resource Move Operation",
          "readOnly": true
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Source Resource of the Resource Move Operation",
          "readOnly": true
        },
        "targetResourceId": {
          "type": "string",
          "description": "Target Resource of the Resource Move Operation",
          "readOnly": true
        }
      }
    },
    "VaultPropertiesRedundancySettings": {
      "type": "object",
      "description": "The redundancy Settings of a Vault",
      "properties": {
        "standardTierStorageRedundancy": {
          "description": "The storage redundancy setting of a vault",
          "type": "string",
          "enum": [
            "Invalid",
            "LocallyRedundant",
            "GeoRedundant",
            "ZoneRedundant"
          ],
          "x-ms-enum": {
            "name": "StandardTierStorageRedundancy",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "LocallyRedundant",
                "value": "LocallyRedundant"
              },
              {
                "name": "GeoRedundant",
                "value": "GeoRedundant"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              }
            ]
          }
        },
        "crossRegionRestore": {
          "description": "Flag to show if Cross Region Restore is enabled on the Vault or not",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "CrossRegionRestore",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "VaultSubResourceType": {
      "type": "string",
      "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
      "enum": [
        "AzureBackup",
        "AzureBackup_secondary",
        "AzureSiteRecovery"
      ],
      "x-ms-enum": {
        "name": "VaultSubResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureBackup",
            "value": "AzureBackup"
          },
          {
            "name": "AzureBackup_secondary",
            "value": "AzureBackup_secondary"
          },
          {
            "name": "AzureSiteRecovery",
            "value": "AzureSiteRecovery"
          }
        ]
      }
    },
    "VaultUpgradeState": {
      "type": "string",
      "description": "Status of the vault upgrade operation.",
      "enum": [
        "Unknown",
        "InProgress",
        "Upgraded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "VaultUpgradeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Upgraded",
            "value": "Upgraded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "VaultUsage": {
      "type": "object",
      "description": "Usages of a vault.",
      "properties": {
        "unit": {
          "description": "Unit of the usage.",
          "type": "string",
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond"
          ],
          "x-ms-enum": {
            "name": "UsagesUnit",
            "modelAsString": true,
            "values": [
              {
                "name": "Count",
                "value": "Count"
              },
              {
                "name": "Bytes",
                "value": "Bytes"
              },
              {
                "name": "Seconds",
                "value": "Seconds"
              },
              {
                "name": "Percent",
                "value": "Percent"
              },
              {
                "name": "CountPerSecond",
                "value": "CountPerSecond"
              },
              {
                "name": "BytesPerSecond",
                "value": "BytesPerSecond"
              }
            ]
          }
        },
        "quotaPeriod": {
          "type": "string",
          "description": "Quota period of usage."
        },
        "nextResetTime": {
          "type": "string",
          "format": "date-time",
          "description": "Next reset time of usage."
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Current value of usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Limit of usage."
        },
        "name": {
          "description": "Name of usage.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of usage."
            },
            "localizedValue": {
              "type": "string",
              "description": "Localized value of usage."
            }
          }
        }
      }
    },
    "VaultUsageList": {
      "type": "object",
      "description": "Usage for vault.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of usages for the given vault.",
          "items": {
            "type": "object",
            "description": "Usages of a vault.",
            "properties": {
              "unit": {
                "description": "Unit of the usage.",
                "type": "string",
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond"
                ],
                "x-ms-enum": {
                  "name": "UsagesUnit",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Count",
                      "value": "Count"
                    },
                    {
                      "name": "Bytes",
                      "value": "Bytes"
                    },
                    {
                      "name": "Seconds",
                      "value": "Seconds"
                    },
                    {
                      "name": "Percent",
                      "value": "Percent"
                    },
                    {
                      "name": "CountPerSecond",
                      "value": "CountPerSecond"
                    },
                    {
                      "name": "BytesPerSecond",
                      "value": "BytesPerSecond"
                    }
                  ]
                }
              },
              "quotaPeriod": {
                "type": "string",
                "description": "Quota period of usage."
              },
              "nextResetTime": {
                "type": "string",
                "format": "date-time",
                "description": "Next reset time of usage."
              },
              "currentValue": {
                "type": "integer",
                "format": "int64",
                "description": "Current value of usage."
              },
              "limit": {
                "type": "integer",
                "format": "int64",
                "description": "Limit of usage."
              },
              "name": {
                "description": "Name of usage.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of usage."
                  },
                  "localizedValue": {
                    "type": "string",
                    "description": "Localized value of usage."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "AcquireStorageAccountLock": {
      "type": "string",
      "description": "Whether storage account lock is to be acquired for this container or not.",
      "enum": [
        "Acquire",
        "NotAcquire"
      ],
      "x-ms-enum": {
        "name": "AcquireStorageAccountLock",
        "modelAsString": true,
        "values": [
          {
            "name": "Acquire",
            "value": "Acquire"
          },
          {
            "name": "NotAcquire",
            "value": "NotAcquire"
          }
        ]
      }
    },
    "AzureBackupGoalFeatureSupportRequest": {
      "type": "object",
      "description": "Azure backup goal feature specific request.",
      "allOf": [
        {
          "type": "object",
          "description": "Base class for feature request",
          "properties": {
            "featureType": {
              "type": "string",
              "description": "backup support feature type."
            }
          },
          "discriminator": "featureType",
          "required": [
            "featureType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureBackupGoals"
    },
    "AzureBackupServerContainer": {
      "type": "object",
      "description": "AzureBackupServer (DPMVenus) workload-specific protection container.",
      "allOf": [
        {
          "type": "object",
          "description": "DPM workload-specific protection container.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            },
            "canReRegister": {
              "type": "boolean",
              "description": "Specifies whether the container is re-registrable."
            },
            "containerId": {
              "type": "string",
              "description": "ID of container."
            },
            "protectedItemCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of protected items in the BackupEngine"
            },
            "dpmAgentVersion": {
              "type": "string",
              "description": "Backup engine Agent version"
            },
            "dpmServers": {
              "type": "array",
              "description": "List of BackupEngines protecting the container",
              "items": {
                "type": "string"
              }
            },
            "upgradeAvailable": {
              "type": "boolean",
              "description": "To check if upgrade available"
            },
            "protectionStatus": {
              "type": "string",
              "description": "Protection status of the container."
            },
            "extendedInfo": {
              "description": "Extended Info of the container.",
              "type": "object",
              "properties": {
                "lastRefreshedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last refresh time of the DPMContainer."
                }
              }
            }
          },
          "x-ms-discriminator-value": "DPMContainer"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupServerContainer"
    },
    "AzureBackupServerEngine": {
      "type": "object",
      "description": "Backup engine type when Azure Backup Server is used to manage the backups.",
      "allOf": [
        {
          "type": "object",
          "description": "The base backup engine class. All workload specific backup engines derive from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup engine."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Registration status of the backup engine with the Recovery Services Vault."
            },
            "backupEngineState": {
              "type": "string",
              "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
            },
            "healthStatus": {
              "type": "string",
              "description": "Backup status of the backup engine."
            },
            "backupEngineType": {
              "description": "Type of the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "DpmBackupEngine",
                "AzureBackupServerEngine"
              ],
              "x-ms-enum": {
                "name": "BackupEngineType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "DpmBackupEngine",
                    "value": "DpmBackupEngine"
                  },
                  {
                    "name": "AzureBackupServerEngine",
                    "value": "AzureBackupServerEngine"
                  }
                ]
              }
            },
            "canReRegister": {
              "type": "boolean",
              "description": "Flag indicating if the backup engine be registered, once already registered."
            },
            "backupEngineId": {
              "type": "string",
              "description": "ID of the backup engine."
            },
            "dpmVersion": {
              "type": "string",
              "description": "Backup engine version"
            },
            "azureBackupAgentVersion": {
              "type": "string",
              "description": "Backup agent version"
            },
            "isAzureBackupAgentUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup agent upgrade available"
            },
            "isDpmUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup engine upgrade available"
            },
            "extendedInfo": {
              "description": "Extended info of the backupengine",
              "type": "object",
              "properties": {
                "databaseName": {
                  "type": "string",
                  "description": "Database name of backup engine."
                },
                "protectedItemsCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected items in the backup engine."
                },
                "protectedServersCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected servers in the backup engine."
                },
                "diskCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of disks in the backup engine."
                },
                "usedDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space used in the backup engine."
                },
                "availableDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space currently available in the backup engine."
                },
                "refreshedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last refresh time in the backup engine."
                },
                "azureProtectedInstances": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Protected instances in the backup engine."
                }
              }
            }
          },
          "discriminator": "backupEngineType",
          "required": [
            "backupEngineType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureBackupServerEngine"
    },
    "AzureFileShareBackupRequest": {
      "type": "object",
      "description": "AzureFileShare workload-specific backup request.",
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC)."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShareBackupRequest"
    },
    "AzureFileShareProtectableItem": {
      "type": "object",
      "description": "Protectable item for Azure Fileshare workloads.",
      "properties": {
        "parentContainerFabricId": {
          "type": "string",
          "description": "Full Fabric ID of container to which this protectable item belongs. For example, ARM ID."
        },
        "parentContainerFriendlyName": {
          "type": "string",
          "description": "Friendly name of container to which this protectable item belongs."
        },
        "azureFileShareType": {
          "description": "File Share type XSync or XSMB.",
          "type": "string",
          "enum": [
            "Invalid",
            "XSMB",
            "XSync"
          ],
          "x-ms-enum": {
            "name": "AzureFileShareType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "XSMB",
                "value": "XSMB"
              },
              {
                "name": "XSync",
                "value": "XSync"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "protectableItemType",
          "required": [
            "protectableItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShare"
    },
    "AzureFileShareProtectionPolicy": {
      "type": "object",
      "description": "AzureStorage backup policy.",
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "schedulePolicy": {
          "description": "Backup schedule specified as part of backup policy.",
          "type": "object",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        },
        "retentionPolicy": {
          "description": "Retention policy with the details on backup copy retention ranges.",
          "type": "object",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        },
        "vaultRetentionPolicy": {
          "description": "Retention policy with the details on hardened backup copy retention ranges.",
          "type": "object",
          "properties": {
            "vaultRetention": {
              "description": "Base class for retention policy.",
              "type": "object",
              "properties": {
                "retentionPolicyType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                }
              },
              "discriminator": "retentionPolicyType",
              "required": [
                "retentionPolicyType"
              ]
            },
            "snapshotRetentionInDays": {
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "vaultRetention",
            "snapshotRetentionInDays"
          ]
        },
        "timeZone": {
          "type": "string",
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\"."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureStorage"
    },
    "AzureFileShareProvisionILRRequest": {
      "type": "object",
      "description": "Update snapshot Uri with the correct friendly Name of the source Azure file share.",
      "properties": {
        "recoveryPointId": {
          "type": "string",
          "description": "Recovery point ID."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Source Storage account ARM Id"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Parameters to Provision ILR API.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShareProvisionILRRequest"
    },
    "AzureFileShareRecoveryPoint": {
      "type": "object",
      "description": "Azure File Share workload specific backup copy.",
      "properties": {
        "recoveryPointType": {
          "type": "string",
          "description": "Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent."
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which this backup copy was created."
        },
        "fileShareSnapshotUri": {
          "type": "string",
          "description": "Contains Url to the snapshot of fileshare, if applicable"
        },
        "recoveryPointSizeInGB": {
          "type": "integer",
          "format": "int32",
          "description": "Contains recovery point size"
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        },
        "recoveryPointTierDetails": {
          "type": "array",
          "description": "Recovery point tier information.",
          "items": {
            "type": "object",
            "description": "Recovery point tier information.",
            "properties": {
              "type": {
                "description": "Recovery point tier type.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "InstantRP",
                  "HardenedRP",
                  "ArchivedRP"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierType",
                  "modelAsString": false
                }
              },
              "status": {
                "description": "Recovery point tier status.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Valid",
                  "Disabled",
                  "Deleted",
                  "Rehydrated"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierStatus",
                  "modelAsString": true
                }
              },
              "extendedInfo": {
                "type": "object",
                "description": "Recovery point tier status.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShareRecoveryPoint"
    },
    "AzureFileShareRestoreRequest": {
      "type": "object",
      "description": "AzureFileShare Restore Request",
      "properties": {
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Source storage account ARM Id"
        },
        "copyOptions": {
          "description": "Options to resolve copy conflicts.",
          "type": "string",
          "enum": [
            "Invalid",
            "CreateCopy",
            "Skip",
            "Overwrite",
            "FailOnConflict"
          ],
          "x-ms-enum": {
            "name": "CopyOptions",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "CreateCopy",
                "value": "CreateCopy"
              },
              {
                "name": "Skip",
                "value": "Skip"
              },
              {
                "name": "Overwrite",
                "value": "Overwrite"
              },
              {
                "name": "FailOnConflict",
                "value": "FailOnConflict"
              }
            ]
          }
        },
        "restoreRequestType": {
          "description": "Restore Type (FullShareRestore or ItemLevelRestore)",
          "type": "string",
          "enum": [
            "Invalid",
            "FullShareRestore",
            "ItemLevelRestore"
          ],
          "x-ms-enum": {
            "name": "RestoreRequestType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FullShareRestore",
                "value": "FullShareRestore"
              },
              {
                "name": "ItemLevelRestore",
                "value": "ItemLevelRestore"
              }
            ]
          }
        },
        "restoreFileSpecs": {
          "type": "array",
          "description": "List of Source Files/Folders(which need to recover) and TargetFolderPath details",
          "items": {
            "type": "object",
            "description": "Restore file specs like file path, type and target folder path info.",
            "properties": {
              "path": {
                "type": "string",
                "description": "Source File/Folder path"
              },
              "fileSpecType": {
                "type": "string",
                "description": "Indicates what the Path variable stands for"
              },
              "targetFolderPath": {
                "type": "string",
                "description": "Destination folder path in target FileShare"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "targetDetails": {
          "description": "Target File Share Details",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "File share name"
            },
            "targetResourceId": {
              "type": "string",
              "description": "Target file share resource ARM ID"
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShareRestoreRequest"
    },
    "AzureFileShareType": {
      "type": "string",
      "description": "File Share type XSync or XSMB.",
      "enum": [
        "Invalid",
        "XSMB",
        "XSync"
      ],
      "x-ms-enum": {
        "name": "AzureFileShareType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "XSMB",
            "value": "XSMB"
          },
          {
            "name": "XSync",
            "value": "XSync"
          }
        ]
      }
    },
    "AzureFileshareProtectedItem": {
      "type": "object",
      "description": "Azure File Share workload-specific backup item.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the fileshare represented by this backup item."
        },
        "protectionStatus": {
          "type": "string",
          "description": "Backup status of this backup item."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "lastBackupStatus": {
          "type": "string",
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy."
        },
        "lastBackupTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item."
        },
        "kpisHealths": {
          "type": "object",
          "description": "Health details of different KPIs",
          "additionalProperties": {
            "type": "object",
            "description": "KPI Resource Health Details",
            "properties": {
              "resourceHealthStatus": {
                "description": "Resource Health Status",
                "type": "string",
                "enum": [
                  "Healthy",
                  "TransientDegraded",
                  "PersistentDegraded",
                  "TransientUnhealthy",
                  "PersistentUnhealthy",
                  "Invalid"
                ],
                "x-ms-enum": {
                  "name": "ResourceHealthStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy"
                    },
                    {
                      "name": "TransientDegraded",
                      "value": "TransientDegraded"
                    },
                    {
                      "name": "PersistentDegraded",
                      "value": "PersistentDegraded"
                    },
                    {
                      "name": "TransientUnhealthy",
                      "value": "TransientUnhealthy"
                    },
                    {
                      "name": "PersistentUnhealthy",
                      "value": "PersistentUnhealthy"
                    },
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    }
                  ]
                }
              },
              "resourceHealthDetails": {
                "type": "array",
                "description": "Resource Health Status",
                "items": {
                  "type": "object",
                  "description": "Health Details for backup items.",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Health Code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Health Title",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Health Message",
                      "readOnly": true
                    },
                    "recommendations": {
                      "type": "array",
                      "description": "Health Recommended Actions",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "code"
                ]
              }
            }
          }
        },
        "extendedInfo": {
          "description": "Additional information with this backup item.",
          "type": "object",
          "properties": {
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this item in the service."
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of available backup copies associated with this backup item."
            },
            "policyState": {
              "type": "string",
              "description": "Indicates consistency of policy object and policy applied to this backup item."
            },
            "resourceState": {
              "type": "string",
              "description": "Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}",
              "readOnly": true
            },
            "resourceStateSyncTime": {
              "type": "string",
              "format": "date-time",
              "description": "The resource state sync time for this backup item.",
              "readOnly": true
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup items.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureFileShareProtectedItem"
    },
    "AzureFileshareProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information about Azure File Share backup item.",
      "properties": {
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this item in the service."
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of available backup copies associated with this backup item."
        },
        "policyState": {
          "type": "string",
          "description": "Indicates consistency of policy object and policy applied to this backup item."
        },
        "resourceState": {
          "type": "string",
          "description": "Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}",
          "readOnly": true
        },
        "resourceStateSyncTime": {
          "type": "string",
          "format": "date-time",
          "description": "The resource state sync time for this backup item.",
          "readOnly": true
        }
      }
    },
    "AzureIaaSClassicComputeVMContainer": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing a classic virtual machine.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific container.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container."
            },
            "virtualMachineVersion": {
              "type": "string",
              "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
            },
            "resourceGroup": {
              "type": "string",
              "description": "Resource group name of Recovery Services Vault."
            }
          },
          "x-ms-discriminator-value": "IaasVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectableItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific backup item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the virtual machine."
            },
            "virtualMachineVersion": {
              "type": "string",
              "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
            },
            "resourceGroup": {
              "type": "string",
              "description": "Resource group name of Recovery Services Vault."
            }
          },
          "x-ms-discriminator-value": "IaaSVMProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectedItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific backup item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the VM represented by this backup item.",
              "readOnly": true
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
              "readOnly": true
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "healthStatus": {
              "description": "Health status of protected item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Passed",
                "ActionRequired",
                "ActionSuggested",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "HealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Passed",
                    "value": "Passed"
                  },
                  {
                    "name": "ActionRequired",
                    "value": "ActionRequired"
                  },
                  {
                    "name": "ActionSuggested",
                    "value": "ActionSuggested"
                  },
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  }
                ]
              }
            },
            "healthDetails": {
              "type": "array",
              "description": "Health details on this backup item.",
              "items": {
                "type": "object",
                "description": "Azure IaaS VM workload-specific Health Details.",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Health Code",
                    "readOnly": true
                  },
                  "title": {
                    "type": "string",
                    "description": "Health Title",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Health Message",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "Health Recommended Actions",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "code"
              ]
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "lastBackupStatus": {
              "type": "string",
              "description": "Last backup operation status."
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item.",
              "readOnly": true
            },
            "protectedItemDataId": {
              "type": "string",
              "description": "Data ID of the protected item.",
              "readOnly": true
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyInconsistent": {
                  "type": "boolean",
                  "description": "Specifies if backup policy associated with the backup item is inconsistent."
                }
              }
            },
            "extendedProperties": {
              "description": "Extended Properties for Azure IaasVM Backup.",
              "type": "object",
              "properties": {
                "diskExclusionProperties": {
                  "description": "Extended Properties for Disk Exclusion.",
                  "type": "object",
                  "properties": {
                    "diskLunList": {
                      "type": "array",
                      "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "isInclusionList": {
                      "type": "boolean",
                      "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup."
                    }
                  }
                },
                "linuxVmApplicationName": {
                  "type": "string",
                  "description": "Linux VM name"
                }
              }
            },
            "policyType": {
              "type": "string",
              "description": "Type of the policy used for protection",
              "readOnly": true
            }
          },
          "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSComputeVMContainer": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific container.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container."
            },
            "virtualMachineVersion": {
              "type": "string",
              "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
            },
            "resourceGroup": {
              "type": "string",
              "description": "Resource group name of Recovery Services Vault."
            }
          },
          "x-ms-discriminator-value": "IaasVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectableItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific backup item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the virtual machine."
            },
            "virtualMachineVersion": {
              "type": "string",
              "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
            },
            "resourceGroup": {
              "type": "string",
              "description": "Resource group name of Recovery Services Vault."
            }
          },
          "x-ms-discriminator-value": "IaaSVMProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectedItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific backup item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the VM represented by this backup item.",
              "readOnly": true
            },
            "virtualMachineId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
              "readOnly": true
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "healthStatus": {
              "description": "Health status of protected item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Passed",
                "ActionRequired",
                "ActionSuggested",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "HealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Passed",
                    "value": "Passed"
                  },
                  {
                    "name": "ActionRequired",
                    "value": "ActionRequired"
                  },
                  {
                    "name": "ActionSuggested",
                    "value": "ActionSuggested"
                  },
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  }
                ]
              }
            },
            "healthDetails": {
              "type": "array",
              "description": "Health details on this backup item.",
              "items": {
                "type": "object",
                "description": "Azure IaaS VM workload-specific Health Details.",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Health Code",
                    "readOnly": true
                  },
                  "title": {
                    "type": "string",
                    "description": "Health Title",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Health Message",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "Health Recommended Actions",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "code"
              ]
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "lastBackupStatus": {
              "type": "string",
              "description": "Last backup operation status."
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item.",
              "readOnly": true
            },
            "protectedItemDataId": {
              "type": "string",
              "description": "Data ID of the protected item.",
              "readOnly": true
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyInconsistent": {
                  "type": "boolean",
                  "description": "Specifies if backup policy associated with the backup item is inconsistent."
                }
              }
            },
            "extendedProperties": {
              "description": "Extended Properties for Azure IaasVM Backup.",
              "type": "object",
              "properties": {
                "diskExclusionProperties": {
                  "description": "Extended Properties for Disk Exclusion.",
                  "type": "object",
                  "properties": {
                    "diskLunList": {
                      "type": "array",
                      "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "isInclusionList": {
                      "type": "boolean",
                      "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup."
                    }
                  }
                },
                "linuxVmApplicationName": {
                  "type": "string",
                  "description": "Linux VM name"
                }
              }
            },
            "policyType": {
              "type": "string",
              "description": "Type of the policy used for protection",
              "readOnly": true
            }
          },
          "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSVMErrorInfo": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific error information.",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code.",
          "readOnly": true
        },
        "errorTitle": {
          "type": "string",
          "description": "Title: Typically, the entity that the error pertains to.",
          "readOnly": true
        },
        "errorString": {
          "type": "string",
          "description": "Localized error string.",
          "readOnly": true
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "AzureIaaSVMHealthDetails": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific Health Details.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Health Code",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Health Title",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Health Message",
          "readOnly": true
        },
        "recommendations": {
          "type": "array",
          "description": "Health Recommended Actions",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "AzureIaaSVMJob": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific job object.",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed during the execution of this job."
        },
        "actionsInfo": {
          "type": "array",
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details on execution of this job.",
          "items": {
            "type": "object",
            "description": "Azure IaaS VM workload-specific error information.",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code.",
                "readOnly": true
              },
              "errorTitle": {
                "type": "string",
                "description": "Title: Typically, the entity that the error pertains to.",
                "readOnly": true
              },
              "errorString": {
                "type": "string",
                "description": "Localized error string.",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "virtualMachineVersion": {
          "type": "string",
          "description": "Specifies whether the backup item is a Classic or an Azure Resource Manager VM."
        },
        "extendedInfo": {
          "description": "Additional information for this job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks associated with this job.",
              "items": {
                "type": "object",
                "description": "Azure IaaS VM workload-specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time."
                  },
                  "instanceId": {
                    "type": "string",
                    "description": "The instanceId."
                  },
                  "duration": {
                    "type": "string",
                    "format": "duration",
                    "description": "Time elapsed for task."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  },
                  "progressPercentage": {
                    "type": "number",
                    "format": "double",
                    "description": "Progress of the task."
                  },
                  "taskExecutionDetails": {
                    "type": "string",
                    "description": "Details about execution of the task.\neg: number of bytes transferred etc"
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "Job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "internalPropertyBag": {
              "type": "object",
              "description": "Job internal properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "progressPercentage": {
              "type": "number",
              "format": "double",
              "description": "Indicates progress of the job. Null if it has not started or completed."
            },
            "estimatedRemainingDuration": {
              "type": "string",
              "description": "Time remaining for execution of this job."
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message on job execution."
            }
          }
        },
        "containerName": {
          "type": "string",
          "description": "Container name of the entity on which the current job is executing."
        },
        "isUserTriggered": {
          "type": "boolean",
          "description": "Indicated that whether the job is adhoc(true) or scheduled(false)"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureIaaSVMJob"
    },
    "AzureIaaSVMJobExtendedInfo": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific additional information for job.",
      "properties": {
        "tasksList": {
          "type": "array",
          "description": "List of tasks associated with this job.",
          "items": {
            "type": "object",
            "description": "Azure IaaS VM workload-specific job task details.",
            "properties": {
              "taskId": {
                "type": "string",
                "description": "The task display name."
              },
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "The start time."
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "The end time."
              },
              "instanceId": {
                "type": "string",
                "description": "The instanceId."
              },
              "duration": {
                "type": "string",
                "format": "duration",
                "description": "Time elapsed for task."
              },
              "status": {
                "type": "string",
                "description": "The status."
              },
              "progressPercentage": {
                "type": "number",
                "format": "double",
                "description": "Progress of the task."
              },
              "taskExecutionDetails": {
                "type": "string",
                "description": "Details about execution of the task.\neg: number of bytes transferred etc"
              }
            }
          },
          "x-ms-identifiers": [
            "taskId"
          ]
        },
        "propertyBag": {
          "type": "object",
          "description": "Job properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "internalPropertyBag": {
          "type": "object",
          "description": "Job internal properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "progressPercentage": {
          "type": "number",
          "format": "double",
          "description": "Indicates progress of the job. Null if it has not started or completed."
        },
        "estimatedRemainingDuration": {
          "type": "string",
          "description": "Time remaining for execution of this job."
        },
        "dynamicErrorMessage": {
          "type": "string",
          "description": "Non localized error message on job execution."
        }
      }
    },
    "AzureIaaSVMJobTaskDetails": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific job task details.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The task display name."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "instanceId": {
          "type": "string",
          "description": "The instanceId."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed for task."
        },
        "status": {
          "type": "string",
          "description": "The status."
        },
        "progressPercentage": {
          "type": "number",
          "format": "double",
          "description": "Progress of the task."
        },
        "taskExecutionDetails": {
          "type": "string",
          "description": "Details about execution of the task.\neg: number of bytes transferred etc"
        }
      }
    },
    "AzureIaaSVMJobV2": {
      "type": "object",
      "description": "Azure IaaS VM workload-specific job object.",
      "properties": {
        "actionsInfo": {
          "type": "array",
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "containerName": {
          "type": "string",
          "description": "Container name of the entity on which the current job is executing."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed during the execution of this job."
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details on execution of this job.",
          "items": {
            "type": "object",
            "description": "Azure IaaS VM workload-specific error information.",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code.",
                "readOnly": true
              },
              "errorTitle": {
                "type": "string",
                "description": "Title: Typically, the entity that the error pertains to.",
                "readOnly": true
              },
              "errorString": {
                "type": "string",
                "description": "Localized error string.",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "virtualMachineVersion": {
          "type": "string",
          "description": "Specifies whether the backup item is a Classic or an Azure Resource Manager VM."
        },
        "extendedInfo": {
          "description": "Additional information for this job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks associated with this job.",
              "items": {
                "type": "object",
                "description": "Azure IaaS VM workload-specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time."
                  },
                  "instanceId": {
                    "type": "string",
                    "description": "The instanceId."
                  },
                  "duration": {
                    "type": "string",
                    "format": "duration",
                    "description": "Time elapsed for task."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  },
                  "progressPercentage": {
                    "type": "number",
                    "format": "double",
                    "description": "Progress of the task."
                  },
                  "taskExecutionDetails": {
                    "type": "string",
                    "description": "Details about execution of the task.\neg: number of bytes transferred etc"
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "Job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "internalPropertyBag": {
              "type": "object",
              "description": "Job internal properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "progressPercentage": {
              "type": "number",
              "format": "double",
              "description": "Indicates progress of the job. Null if it has not started or completed."
            },
            "estimatedRemainingDuration": {
              "type": "string",
              "description": "Time remaining for execution of this job."
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message on job execution."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureIaaSVMJobV2"
    },
    "AzureIaaSVMProtectedItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item.",
      "properties": {
        "protectedItemType": {
          "type": "string",
          "description": "backup item type."
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "containerName": {
          "type": "string",
          "description": "Unique name of container"
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "lastRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the last (latest) backup copy was created for this backup item."
        },
        "backupSetName": {
          "type": "string",
          "description": "Name of the backup set the backup item belongs to"
        },
        "createMode": {
          "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
          "type": "string",
          "enum": [
            "Invalid",
            "Default",
            "Recover"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Recover",
                "value": "Recover"
              }
            ]
          }
        },
        "deferredDeleteTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Time for deferred deletion in UTC"
        },
        "isScheduledForDeferredDelete": {
          "type": "boolean",
          "description": "Flag to identify whether the DS is scheduled for deferred delete"
        },
        "deferredDeleteTimeRemaining": {
          "type": "string",
          "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
        },
        "isDeferredDeleteScheduleUpcoming": {
          "type": "boolean",
          "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
        },
        "isRehydrate": {
          "type": "boolean",
          "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "Flag to identify whether datasource is protected in archive"
        },
        "policyName": {
          "type": "string",
          "description": "Name of the policy used for protection"
        },
        "softDeleteRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Soft delete retention period in days"
        },
        "vaultId": {
          "type": "string",
          "description": "ID of the vault which protects this item",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the VM represented by this backup item.",
          "readOnly": true
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
          "readOnly": true
        },
        "protectionStatus": {
          "type": "string",
          "description": "Backup status of this backup item."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "healthStatus": {
          "description": "Health status of protected item.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "ActionRequired",
            "ActionSuggested",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "HealthStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed"
              },
              {
                "name": "ActionRequired",
                "value": "ActionRequired"
              },
              {
                "name": "ActionSuggested",
                "value": "ActionSuggested"
              },
              {
                "name": "Invalid",
                "value": "Invalid"
              }
            ]
          }
        },
        "healthDetails": {
          "type": "array",
          "description": "Health details on this backup item.",
          "items": {
            "type": "object",
            "description": "Azure IaaS VM workload-specific Health Details.",
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32",
                "description": "Health Code",
                "readOnly": true
              },
              "title": {
                "type": "string",
                "description": "Health Title",
                "readOnly": true
              },
              "message": {
                "type": "string",
                "description": "Health Message",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "Health Recommended Actions",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "kpisHealths": {
          "type": "object",
          "description": "Health details of different KPIs",
          "additionalProperties": {
            "type": "object",
            "description": "KPI Resource Health Details",
            "properties": {
              "resourceHealthStatus": {
                "description": "Resource Health Status",
                "type": "string",
                "enum": [
                  "Healthy",
                  "TransientDegraded",
                  "PersistentDegraded",
                  "TransientUnhealthy",
                  "PersistentUnhealthy",
                  "Invalid"
                ],
                "x-ms-enum": {
                  "name": "ResourceHealthStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy"
                    },
                    {
                      "name": "TransientDegraded",
                      "value": "TransientDegraded"
                    },
                    {
                      "name": "PersistentDegraded",
                      "value": "PersistentDegraded"
                    },
                    {
                      "name": "TransientUnhealthy",
                      "value": "TransientUnhealthy"
                    },
                    {
                      "name": "PersistentUnhealthy",
                      "value": "PersistentUnhealthy"
                    },
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    }
                  ]
                }
              },
              "resourceHealthDetails": {
                "type": "array",
                "description": "Resource Health Status",
                "items": {
                  "type": "object",
                  "description": "Health Details for backup items.",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Health Code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Health Title",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Health Message",
                      "readOnly": true
                    },
                    "recommendations": {
                      "type": "array",
                      "description": "Health Recommended Actions",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "code"
                ]
              }
            }
          }
        },
        "lastBackupStatus": {
          "type": "string",
          "description": "Last backup operation status."
        },
        "lastBackupTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item.",
          "readOnly": true
        },
        "protectedItemDataId": {
          "type": "string",
          "description": "Data ID of the protected item.",
          "readOnly": true
        },
        "extendedInfo": {
          "description": "Additional information for this backup item.",
          "type": "object",
          "properties": {
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item across all tiers."
            },
            "oldestRecoveryPointInVault": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item in vault tier"
            },
            "oldestRecoveryPointInArchive": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item in archive tier"
            },
            "newestRecoveryPointInArchive": {
              "type": "string",
              "format": "date-time",
              "description": "The latest backup copy available for this backup item in archive tier"
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of backup copies available for this backup item."
            },
            "policyInconsistent": {
              "type": "boolean",
              "description": "Specifies if backup policy associated with the backup item is inconsistent."
            }
          }
        },
        "extendedProperties": {
          "description": "Extended Properties for Azure IaasVM Backup.",
          "type": "object",
          "properties": {
            "diskExclusionProperties": {
              "description": "Extended Properties for Disk Exclusion.",
              "type": "object",
              "properties": {
                "diskLunList": {
                  "type": "array",
                  "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "isInclusionList": {
                  "type": "boolean",
                  "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup."
                }
              }
            },
            "linuxVmApplicationName": {
              "type": "string",
              "description": "Linux VM name"
            }
          }
        },
        "policyType": {
          "type": "string",
          "description": "Type of the policy used for protection",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
    },
    "AzureIaaSVMProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information on Azure IaaS VM specific backup item.",
      "properties": {
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item across all tiers."
        },
        "oldestRecoveryPointInVault": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item in vault tier"
        },
        "oldestRecoveryPointInArchive": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item in archive tier"
        },
        "newestRecoveryPointInArchive": {
          "type": "string",
          "format": "date-time",
          "description": "The latest backup copy available for this backup item in archive tier"
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of backup copies available for this backup item."
        },
        "policyInconsistent": {
          "type": "boolean",
          "description": "Specifies if backup policy associated with the backup item is inconsistent."
        }
      }
    },
    "AzureIaaSVMProtectionPolicy": {
      "type": "object",
      "description": "IaaS VM workload-specific backup policy.",
      "properties": {
        "instantRPDetails": {
          "type": "object",
          "properties": {
            "azureBackupRGNamePrefix": {
              "type": "string"
            },
            "azureBackupRGNameSuffix": {
              "type": "string"
            }
          }
        },
        "schedulePolicy": {
          "description": "Backup schedule specified as part of backup policy.",
          "type": "object",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        },
        "retentionPolicy": {
          "description": "Retention policy with the details on backup copy retention ranges.",
          "type": "object",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        },
        "tieringPolicy": {
          "type": "object",
          "description": "Tiering policy to automatically move RPs to another tier\nKey is Target Tier, defined in RecoveryPointTierType enum.\nTiering policy specifies the criteria to move RP to the target tier.",
          "additionalProperties": {
            "type": "object",
            "description": "Tiering Policy for a target tier.\nIf the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier",
            "properties": {
              "tieringMode": {
                "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
                "type": "string",
                "enum": [
                  "Invalid",
                  "TierRecommended",
                  "TierAfter",
                  "DoNotTier"
                ],
                "x-ms-enum": {
                  "name": "TieringMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "TierRecommended",
                      "value": "TierRecommended"
                    },
                    {
                      "name": "TierAfter",
                      "value": "TierAfter"
                    },
                    {
                      "name": "DoNotTier",
                      "value": "DoNotTier"
                    }
                  ]
                }
              },
              "duration": {
                "type": "integer",
                "format": "int32",
                "description": "Number of days/weeks/months/years to retain backups in current tier before tiering.\nUsed only if TieringMode is set to TierAfter"
              },
              "durationType": {
                "description": "Retention duration type: days/weeks/months/years\nUsed only if TieringMode is set to TierAfter",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Days",
                  "Weeks",
                  "Months",
                  "Years"
                ],
                "x-ms-enum": {
                  "name": "RetentionDurationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Days",
                      "value": "Days"
                    },
                    {
                      "name": "Weeks",
                      "value": "Weeks"
                    },
                    {
                      "name": "Months",
                      "value": "Months"
                    },
                    {
                      "name": "Years",
                      "value": "Years"
                    }
                  ]
                }
              }
            }
          }
        },
        "instantRpRetentionRangeInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Instant RP retention policy range in days"
        },
        "timeZone": {
          "type": "string",
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\"."
        },
        "policyType": {
          "type": "string",
          "enum": [
            "Invalid",
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "IAASVMPolicyType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "V1",
                "value": "V1"
              },
              {
                "name": "V2",
                "value": "V2"
              }
            ]
          }
        },
        "snapshotConsistencyType": {
          "type": "string",
          "enum": [
            "OnlyCrashConsistent"
          ],
          "x-ms-enum": {
            "name": "IaasVMSnapshotConsistencyType",
            "modelAsString": true,
            "values": [
              {
                "name": "OnlyCrashConsistent",
                "value": "OnlyCrashConsistent"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureIaasVM"
    },
    "AzureRecoveryServiceVaultProtectionIntent": {
      "type": "object",
      "description": "Azure Recovery Services Vault specific protection intent item.",
      "x-ms-discriminator-value": "RecoveryServiceVaultItem",
      "properties": {
        "protectionIntentItemType": {
          "description": "backup protectionIntent type.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureResourceItem",
            "RecoveryServiceVaultItem",
            "AzureWorkloadContainerAutoProtectionIntent",
            "AzureWorkloadAutoProtectionIntent",
            "AzureWorkloadSQLAutoProtectionIntent"
          ],
          "x-ms-enum": {
            "name": "ProtectionIntentItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureResourceItem",
                "value": "AzureResourceItem"
              },
              {
                "name": "RecoveryServiceVaultItem",
                "value": "RecoveryServiceVaultItem"
              },
              {
                "name": "AzureWorkloadContainerAutoProtectionIntent",
                "value": "AzureWorkloadContainerAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadAutoProtectionIntent",
                "value": "AzureWorkloadAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadSQLAutoProtectionIntent",
                "value": "AzureWorkloadSQLAutoProtectionIntent"
              }
            ]
          }
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "itemId": {
          "type": "string",
          "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      }
    },
    "AzureResourceProtectionIntent": {
      "type": "object",
      "description": "IaaS VM specific backup protection intent item.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the VM represented by this backup item."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup ProtectionIntent.",
          "properties": {
            "protectionIntentItemType": {
              "description": "backup protectionIntent type.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureResourceItem",
                "RecoveryServiceVaultItem",
                "AzureWorkloadContainerAutoProtectionIntent",
                "AzureWorkloadAutoProtectionIntent",
                "AzureWorkloadSQLAutoProtectionIntent"
              ],
              "x-ms-enum": {
                "name": "ProtectionIntentItemType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureResourceItem",
                    "value": "AzureResourceItem"
                  },
                  {
                    "name": "RecoveryServiceVaultItem",
                    "value": "RecoveryServiceVaultItem"
                  },
                  {
                    "name": "AzureWorkloadContainerAutoProtectionIntent",
                    "value": "AzureWorkloadContainerAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadAutoProtectionIntent",
                    "value": "AzureWorkloadAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadSQLAutoProtectionIntent",
                    "value": "AzureWorkloadSQLAutoProtectionIntent"
                  }
                ]
              }
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "itemId": {
              "type": "string",
              "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "protectionIntentItemType",
          "required": [
            "protectionIntentItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureResourceItem"
    },
    "AzureSQLAGWorkloadContainerProtectionContainer": {
      "type": "object",
      "description": "Container for SQL workloads under SQL Availability Group.",
      "allOf": [
        {
          "type": "object",
          "description": "Container for the workloads running inside Azure Compute or Classic Compute.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the virtual machine represented by this Azure Workload Container"
            },
            "lastUpdatedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time stamp when this container was updated."
            },
            "extendedInfo": {
              "description": "Additional details of a workload container.",
              "type": "object",
              "properties": {
                "hostServerName": {
                  "type": "string",
                  "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container."
                },
                "inquiryInfo": {
                  "description": "Inquiry Status for the container.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Inquiry Status for this container such as\nInProgress | Failed | Succeeded"
                    },
                    "errorDetail": {
                      "type": "object",
                      "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code.",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Error Message related to the Code.",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "List of recommendation strings.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "inquiryDetails": {
                      "type": "array",
                      "description": "Inquiry Details which will have workload specific details.\nFor e.g. - For SQL and oracle this will contain different details.",
                      "items": {
                        "type": "object",
                        "description": "Details of an inquired protectable item.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the Workload such as SQL, Oracle etc."
                          },
                          "itemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Contains the protectable item Count inside this Container."
                          },
                          "inquiryValidation": {
                            "description": "Inquiry validation such as permissions and other backup validations.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Status for the Inquiry Validation."
                              },
                              "errorDetail": {
                                "type": "object",
                                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "Error code.",
                                    "readOnly": true
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error Message related to the Code.",
                                    "readOnly": true
                                  },
                                  "recommendations": {
                                    "type": "array",
                                    "description": "List of recommendation strings.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "readOnly": true
                                  }
                                }
                              },
                              "additionalDetail": {
                                "type": "string",
                                "description": "Error Additional Detail in case the status is non-success.",
                                "readOnly": true
                              },
                              "protectableItemCount": {
                                "description": "Dictionary to store the count of ProtectableItems with key POType.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "nodesList": {
                  "type": "array",
                  "description": "List of the nodes in case of distributed container.",
                  "items": {
                    "type": "object",
                    "description": "This is used to represent the various nodes of the distributed container.",
                    "properties": {
                      "nodeName": {
                        "type": "string",
                        "description": "Name of the node under a distributed container."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of this Node.\nFailed | Succeeded"
                      },
                      "errorDetail": {
                        "type": "object",
                        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Error code.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Error Message related to the Code.",
                            "readOnly": true
                          },
                          "recommendations": {
                            "type": "array",
                            "description": "List of recommendation strings.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "sourceResourceId": {
                        "type": "string",
                        "description": "ARM resource id of the node"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "workloadType": {
              "description": "Workload type for which registration was sent.",
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "WorkloadType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "operationType": {
              "description": "Re-Do Operation",
              "type": "string",
              "enum": [
                "Invalid",
                "Register",
                "Reregister",
                "Rehydrate"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Register",
                    "value": "Register"
                  },
                  {
                    "name": "Reregister",
                    "value": "Reregister"
                  },
                  {
                    "name": "Rehydrate",
                    "value": "Rehydrate"
                  }
                ]
              }
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadContainer"
        }
      ],
      "x-ms-discriminator-value": "SQLAGWorkLoadContainer"
    },
    "AzureSqlContainer": {
      "type": "object",
      "description": "Azure Sql workload-specific container.",
      "allOf": [
        {
          "type": "object",
          "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            }
          },
          "discriminator": "containerType",
          "required": [
            "containerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureSqlContainer"
    },
    "AzureSqlProtectedItem": {
      "type": "object",
      "description": "Azure SQL workload-specific backup item.",
      "properties": {
        "protectedItemDataId": {
          "type": "string",
          "description": "Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services."
        },
        "protectionState": {
          "description": "Backup state of the backed up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectedItemState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "extendedInfo": {
          "description": "Additional information for this backup item.",
          "type": "object",
          "properties": {
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this item in the service."
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of available backup copies associated with this backup item."
            },
            "policyState": {
              "type": "string",
              "description": "State of the backup policy associated with this backup item."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup items.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
    },
    "AzureSqlProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information on Azure Sql specific protected item.",
      "properties": {
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this item in the service."
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of available backup copies associated with this backup item."
        },
        "policyState": {
          "type": "string",
          "description": "State of the backup policy associated with this backup item."
        }
      }
    },
    "AzureSqlProtectionPolicy": {
      "type": "object",
      "description": "Azure SQL workload-specific backup policy.",
      "properties": {
        "retentionPolicy": {
          "description": "Retention policy details.",
          "type": "object",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureSql"
    },
    "AzureStorageContainer": {
      "type": "object",
      "description": "Azure Storage Account workload-specific container.",
      "properties": {
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM url."
        },
        "storageAccountVersion": {
          "type": "string",
          "description": "Storage account version."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name of Recovery Services Vault."
        },
        "protectedItemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of items backed up in this container."
        },
        "acquireStorageAccountLock": {
          "description": "Whether storage account lock is to be acquired for this container or not.",
          "type": "string",
          "enum": [
            "Acquire",
            "NotAcquire"
          ],
          "x-ms-enum": {
            "name": "AcquireStorageAccountLock",
            "modelAsString": true,
            "values": [
              {
                "name": "Acquire",
                "value": "Acquire"
              },
              {
                "name": "NotAcquire",
                "value": "NotAcquire"
              }
            ]
          }
        },
        "operationType": {
          "description": "Re-Do Operation",
          "type": "string",
          "enum": [
            "Invalid",
            "Register",
            "Reregister",
            "Rehydrate"
          ],
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Register",
                "value": "Register"
              },
              {
                "name": "Reregister",
                "value": "Reregister"
              },
              {
                "name": "Rehydrate",
                "value": "Rehydrate"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            }
          },
          "discriminator": "containerType",
          "required": [
            "containerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "StorageContainer"
    },
    "AzureStorageErrorInfo": {
      "type": "object",
      "description": "Azure storage specific error information",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code."
        },
        "errorString": {
          "type": "string",
          "description": "Localized error string."
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AzureStorageJob": {
      "type": "object",
      "description": "Azure storage specific job.",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed during the execution of this job."
        },
        "actionsInfo": {
          "type": "array",
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details on execution of this job.",
          "items": {
            "type": "object",
            "description": "Azure storage specific error information",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code."
              },
              "errorString": {
                "type": "string",
                "description": "Localized error string."
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "storageAccountName": {
          "type": "string",
          "description": "Specifies friendly name of the storage account."
        },
        "storageAccountVersion": {
          "type": "string",
          "description": "Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account."
        },
        "extendedInfo": {
          "description": "Additional information about the job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks for this job",
              "items": {
                "type": "object",
                "description": "Azure storage workload specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "Job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message on job execution."
            }
          }
        },
        "isUserTriggered": {
          "type": "boolean",
          "description": "Indicated that whether the job is adhoc(true) or scheduled(false)"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureStorageJob"
    },
    "AzureStorageJobExtendedInfo": {
      "type": "object",
      "description": "Azure Storage workload-specific additional information for job.",
      "properties": {
        "tasksList": {
          "type": "array",
          "description": "List of tasks for this job",
          "items": {
            "type": "object",
            "description": "Azure storage workload specific job task details.",
            "properties": {
              "taskId": {
                "type": "string",
                "description": "The task display name."
              },
              "status": {
                "type": "string",
                "description": "The status."
              }
            }
          },
          "x-ms-identifiers": [
            "taskId"
          ]
        },
        "propertyBag": {
          "type": "object",
          "description": "Job properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "type": "string",
          "description": "Non localized error message on job execution."
        }
      }
    },
    "AzureStorageJobTaskDetails": {
      "type": "object",
      "description": "Azure storage workload specific job task details.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The task display name."
        },
        "status": {
          "type": "string",
          "description": "The status."
        }
      }
    },
    "AzureStorageProtectableContainer": {
      "type": "object",
      "description": "Azure Storage-specific protectable containers",
      "allOf": [
        {
          "type": "object",
          "description": "Protectable Container Class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "protectableContainerType": {
              "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerId": {
              "type": "string",
              "description": "Fabric Id of the container such as ARM Id."
            }
          },
          "discriminator": "protectableContainerType",
          "required": [
            "protectableContainerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "StorageContainer"
    },
    "AzureVMAppContainerProtectableContainer": {
      "type": "object",
      "description": "Azure workload-specific container",
      "allOf": [
        {
          "type": "object",
          "description": "Protectable Container Class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "protectableContainerType": {
              "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerId": {
              "type": "string",
              "description": "Fabric Id of the container such as ARM Id."
            }
          },
          "discriminator": "protectableContainerType",
          "required": [
            "protectableContainerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VMAppContainer"
    },
    "AzureVMAppContainerProtectionContainer": {
      "type": "object",
      "description": "Container for SQL workloads under Azure Virtual Machines.",
      "allOf": [
        {
          "type": "object",
          "description": "Container for the workloads running inside Azure Compute or Classic Compute.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the virtual machine represented by this Azure Workload Container"
            },
            "lastUpdatedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time stamp when this container was updated."
            },
            "extendedInfo": {
              "description": "Additional details of a workload container.",
              "type": "object",
              "properties": {
                "hostServerName": {
                  "type": "string",
                  "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container."
                },
                "inquiryInfo": {
                  "description": "Inquiry Status for the container.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Inquiry Status for this container such as\nInProgress | Failed | Succeeded"
                    },
                    "errorDetail": {
                      "type": "object",
                      "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code.",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Error Message related to the Code.",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "List of recommendation strings.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "inquiryDetails": {
                      "type": "array",
                      "description": "Inquiry Details which will have workload specific details.\nFor e.g. - For SQL and oracle this will contain different details.",
                      "items": {
                        "type": "object",
                        "description": "Details of an inquired protectable item.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the Workload such as SQL, Oracle etc."
                          },
                          "itemCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Contains the protectable item Count inside this Container."
                          },
                          "inquiryValidation": {
                            "description": "Inquiry validation such as permissions and other backup validations.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Status for the Inquiry Validation."
                              },
                              "errorDetail": {
                                "type": "object",
                                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "Error code.",
                                    "readOnly": true
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error Message related to the Code.",
                                    "readOnly": true
                                  },
                                  "recommendations": {
                                    "type": "array",
                                    "description": "List of recommendation strings.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "readOnly": true
                                  }
                                }
                              },
                              "additionalDetail": {
                                "type": "string",
                                "description": "Error Additional Detail in case the status is non-success.",
                                "readOnly": true
                              },
                              "protectableItemCount": {
                                "description": "Dictionary to store the count of ProtectableItems with key POType.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "nodesList": {
                  "type": "array",
                  "description": "List of the nodes in case of distributed container.",
                  "items": {
                    "type": "object",
                    "description": "This is used to represent the various nodes of the distributed container.",
                    "properties": {
                      "nodeName": {
                        "type": "string",
                        "description": "Name of the node under a distributed container."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of this Node.\nFailed | Succeeded"
                      },
                      "errorDetail": {
                        "type": "object",
                        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Error code.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Error Message related to the Code.",
                            "readOnly": true
                          },
                          "recommendations": {
                            "type": "array",
                            "description": "List of recommendation strings.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "sourceResourceId": {
                        "type": "string",
                        "description": "ARM resource id of the node"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "workloadType": {
              "description": "Workload type for which registration was sent.",
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "WorkloadType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "operationType": {
              "description": "Re-Do Operation",
              "type": "string",
              "enum": [
                "Invalid",
                "Register",
                "Reregister",
                "Rehydrate"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Register",
                    "value": "Register"
                  },
                  {
                    "name": "Reregister",
                    "value": "Reregister"
                  },
                  {
                    "name": "Rehydrate",
                    "value": "Rehydrate"
                  }
                ]
              }
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadContainer"
        }
      ],
      "x-ms-discriminator-value": "VMAppContainer"
    },
    "AzureVMResourceFeatureSupportRequest": {
      "type": "object",
      "description": "AzureResource(IaaS VM) Specific feature support request",
      "properties": {
        "vmSize": {
          "type": "string",
          "description": "Size of the resource: VM size(A/D series etc) in case of IaasVM"
        },
        "vmSku": {
          "type": "string",
          "description": "SKUs (Premium/Managed etc) in case of IaasVM"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for feature request",
          "properties": {
            "featureType": {
              "type": "string",
              "description": "backup support feature type."
            }
          },
          "discriminator": "featureType",
          "required": [
            "featureType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureVMResourceBackup"
    },
    "AzureVMResourceFeatureSupportResponse": {
      "type": "object",
      "description": "Response for feature support requests for Azure IaasVm",
      "properties": {
        "supportStatus": {
          "description": "Support status of feature",
          "type": "string",
          "enum": [
            "Invalid",
            "Supported",
            "DefaultOFF",
            "DefaultON",
            "NotSupported"
          ],
          "x-ms-enum": {
            "name": "SupportStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Supported",
                "value": "Supported"
              },
              {
                "name": "DefaultOFF",
                "value": "DefaultOFF"
              },
              {
                "name": "DefaultON",
                "value": "DefaultON"
              },
              {
                "name": "NotSupported",
                "value": "NotSupported"
              }
            ]
          }
        }
      }
    },
    "AzureVmWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item.",
      "properties": {
        "backupManagementType": {
          "type": "string",
          "description": "Type of backup management to backup an item."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of workload for the backup management"
        },
        "workloadItemType": {
          "type": "string",
          "description": "Type of the backup item."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup item."
        },
        "protectionState": {
          "description": "State of the back up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        },
        "parentName": {
          "type": "string",
          "description": "Name for instance or AG"
        },
        "serverName": {
          "type": "string",
          "description": "Host/Cluster Name for instance or AG"
        },
        "isAutoProtectable": {
          "type": "boolean",
          "description": "Indicates if workload item is auto-protectable"
        },
        "subinquireditemcount": {
          "type": "integer",
          "format": "int32",
          "description": "For instance or AG, indicates number of DB's present"
        },
        "subWorkloadItemCount": {
          "type": "integer",
          "format": "int32",
          "description": "For instance or AG, indicates number of DB's to be protected"
        }
      },
      "x-ms-discriminator-value": "AzureVmWorkloadItem"
    },
    "AzureVmWorkloadProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item.",
      "properties": {
        "backupManagementType": {
          "type": "string",
          "description": "Type of backup management to backup an item."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of workload for the backup management"
        },
        "protectableItemType": {
          "type": "string",
          "description": "Type of the backup item."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup item."
        },
        "protectionState": {
          "description": "State of the back up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        },
        "parentName": {
          "type": "string",
          "description": "Name for instance or AG"
        },
        "parentUniqueName": {
          "type": "string",
          "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
        },
        "serverName": {
          "type": "string",
          "description": "Host/Cluster Name for instance or AG"
        },
        "isAutoProtectable": {
          "type": "boolean",
          "description": "Indicates if protectable item is auto-protectable"
        },
        "isAutoProtected": {
          "type": "boolean",
          "description": "Indicates if protectable item is auto-protected"
        },
        "subinquireditemcount": {
          "type": "integer",
          "format": "int32",
          "description": "For instance or AG, indicates number of DB's present"
        },
        "subprotectableitemcount": {
          "type": "integer",
          "format": "int32",
          "description": "For instance or AG, indicates number of DB's to be protected"
        },
        "prebackupvalidation": {
          "description": "Pre-backup validation for protectable objects",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
              "type": "string",
              "enum": [
                "Invalid",
                "Success",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "InquiryStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Success",
                    "value": "Success"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  }
                ]
              }
            },
            "code": {
              "type": "string",
              "description": "Error code of protectable item"
            },
            "message": {
              "type": "string",
              "description": "Message corresponding to the error code for the protectable item"
            }
          }
        },
        "isProtectable": {
          "type": "boolean",
          "description": "Indicates if item is protectable"
        }
      },
      "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
    },
    "AzureVmWorkloadProtectedItem": {
      "type": "object",
      "description": "Azure VM workload-specific protected item.",
      "properties": {
        "protectedItemType": {
          "type": "string",
          "description": "backup item type."
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "containerName": {
          "type": "string",
          "description": "Unique name of container"
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "lastRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the last (latest) backup copy was created for this backup item."
        },
        "backupSetName": {
          "type": "string",
          "description": "Name of the backup set the backup item belongs to"
        },
        "createMode": {
          "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
          "type": "string",
          "enum": [
            "Invalid",
            "Default",
            "Recover"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Recover",
                "value": "Recover"
              }
            ]
          }
        },
        "deferredDeleteTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Time for deferred deletion in UTC"
        },
        "isScheduledForDeferredDelete": {
          "type": "boolean",
          "description": "Flag to identify whether the DS is scheduled for deferred delete"
        },
        "deferredDeleteTimeRemaining": {
          "type": "string",
          "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
        },
        "isDeferredDeleteScheduleUpcoming": {
          "type": "boolean",
          "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
        },
        "isRehydrate": {
          "type": "boolean",
          "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "Flag to identify whether datasource is protected in archive"
        },
        "policyName": {
          "type": "string",
          "description": "Name of the policy used for protection"
        },
        "softDeleteRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Soft delete retention period in days"
        },
        "vaultId": {
          "type": "string",
          "description": "ID of the vault which protects this item",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the DB represented by this backup item.",
          "readOnly": true
        },
        "serverName": {
          "type": "string",
          "description": "Host/Cluster Name for instance or AG"
        },
        "parentName": {
          "type": "string",
          "description": "Parent name of the DB such as Instance or Availability Group."
        },
        "parentType": {
          "type": "string",
          "description": "Parent type of protected item, example: for a DB, standalone server or distributed"
        },
        "protectionStatus": {
          "type": "string",
          "description": "Backup status of this backup item.",
          "readOnly": true
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "lastBackupStatus": {
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Healthy",
            "Unhealthy",
            "IRPending"
          ],
          "x-ms-enum": {
            "name": "LastBackupStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Unhealthy",
                "value": "Unhealthy"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              }
            ]
          }
        },
        "lastBackupTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item."
        },
        "lastBackupErrorDetail": {
          "type": "object",
          "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "Error Message related to the Code.",
              "readOnly": true
            },
            "recommendations": {
              "type": "array",
              "description": "List of recommendation strings.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        },
        "protectedItemDataSourceId": {
          "type": "string",
          "description": "Data ID of the protected item."
        },
        "protectedItemHealthStatus": {
          "description": "Health status of the backup item, evaluated based on last heartbeat received",
          "type": "string",
          "enum": [
            "Invalid",
            "Healthy",
            "Unhealthy",
            "NotReachable",
            "IRPending"
          ],
          "x-ms-enum": {
            "name": "ProtectedItemHealthStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "Unhealthy",
                "value": "Unhealthy"
              },
              {
                "name": "NotReachable",
                "value": "NotReachable"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              }
            ]
          }
        },
        "extendedInfo": {
          "description": "Additional information for this backup item.",
          "type": "object",
          "properties": {
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item across all tiers."
            },
            "oldestRecoveryPointInVault": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item in vault tier"
            },
            "oldestRecoveryPointInArchive": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available for this backup item in archive tier"
            },
            "newestRecoveryPointInArchive": {
              "type": "string",
              "format": "date-time",
              "description": "The latest backup copy available for this backup item in archive tier"
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of backup copies available for this backup item."
            },
            "policyState": {
              "type": "string",
              "description": "Indicates consistency of policy object and policy applied to this backup item."
            },
            "recoveryModel": {
              "type": "string",
              "description": "Indicates consistency of policy object and policy applied to this backup item."
            }
          }
        },
        "kpisHealths": {
          "type": "object",
          "description": "Health details of different KPIs",
          "additionalProperties": {
            "type": "object",
            "description": "KPI Resource Health Details",
            "properties": {
              "resourceHealthStatus": {
                "description": "Resource Health Status",
                "type": "string",
                "enum": [
                  "Healthy",
                  "TransientDegraded",
                  "PersistentDegraded",
                  "TransientUnhealthy",
                  "PersistentUnhealthy",
                  "Invalid"
                ],
                "x-ms-enum": {
                  "name": "ResourceHealthStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy"
                    },
                    {
                      "name": "TransientDegraded",
                      "value": "TransientDegraded"
                    },
                    {
                      "name": "PersistentDegraded",
                      "value": "PersistentDegraded"
                    },
                    {
                      "name": "TransientUnhealthy",
                      "value": "TransientUnhealthy"
                    },
                    {
                      "name": "PersistentUnhealthy",
                      "value": "PersistentUnhealthy"
                    },
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    }
                  ]
                }
              },
              "resourceHealthDetails": {
                "type": "array",
                "description": "Resource Health Status",
                "items": {
                  "type": "object",
                  "description": "Health Details for backup items.",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Health Code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Health Title",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Health Message",
                      "readOnly": true
                    },
                    "recommendations": {
                      "type": "array",
                      "description": "Health Recommended Actions",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "code"
                ]
              }
            }
          }
        },
        "nodesList": {
          "type": "array",
          "description": "List of the nodes in case of distributed container.",
          "items": {
            "type": "object",
            "description": "This is used to represent the various nodes of the distributed container.",
            "properties": {
              "nodeName": {
                "type": "string",
                "description": "Name of the node under a distributed container."
              },
              "status": {
                "type": "string",
                "description": "Status of this Node.\nFailed | Succeeded"
              },
              "errorDetail": {
                "type": "object",
                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code.",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Error Message related to the Code.",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "List of recommendation strings.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "sourceResourceId": {
                "type": "string",
                "description": "ARM resource id of the node"
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
    },
    "AzureVmWorkloadProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information on Azure Workload for SQL specific backup item.",
      "properties": {
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item across all tiers."
        },
        "oldestRecoveryPointInVault": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item in vault tier"
        },
        "oldestRecoveryPointInArchive": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item in archive tier"
        },
        "newestRecoveryPointInArchive": {
          "type": "string",
          "format": "date-time",
          "description": "The latest backup copy available for this backup item in archive tier"
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of backup copies available for this backup item."
        },
        "policyState": {
          "type": "string",
          "description": "Indicates consistency of policy object and policy applied to this backup item."
        },
        "recoveryModel": {
          "type": "string",
          "description": "Indicates consistency of policy object and policy applied to this backup item."
        }
      }
    },
    "AzureVmWorkloadProtectionPolicy": {
      "type": "object",
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "settings": {
          "description": "Common settings for the backup management",
          "type": "object",
          "properties": {
            "timeZone": {
              "type": "string",
              "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\"."
            },
            "issqlcompression": {
              "type": "boolean",
              "description": "SQL compression flag"
            },
            "isCompression": {
              "type": "boolean",
              "description": "Workload compression flag. This has been added so that 'isSqlCompression'\nwill be deprecated once clients upgrade to consider this flag."
            }
          }
        },
        "subProtectionPolicy": {
          "type": "array",
          "description": "List of sub-protection policies which includes schedule and retention",
          "items": {
            "type": "object",
            "description": "Sub-protection policy which includes schedule and retention",
            "properties": {
              "policyType": {
                "description": "Type of backup policy type",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Full",
                  "Differential",
                  "Log",
                  "CopyOnlyFull",
                  "Incremental",
                  "SnapshotFull",
                  "SnapshotCopyOnlyFull"
                ],
                "x-ms-enum": {
                  "name": "PolicyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Full",
                      "value": "Full"
                    },
                    {
                      "name": "Differential",
                      "value": "Differential"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    },
                    {
                      "name": "CopyOnlyFull",
                      "value": "CopyOnlyFull"
                    },
                    {
                      "name": "Incremental",
                      "value": "Incremental"
                    },
                    {
                      "name": "SnapshotFull",
                      "value": "SnapshotFull"
                    },
                    {
                      "name": "SnapshotCopyOnlyFull",
                      "value": "SnapshotCopyOnlyFull"
                    }
                  ]
                }
              },
              "schedulePolicy": {
                "description": "Backup schedule specified as part of backup policy.",
                "type": "object",
                "properties": {
                  "schedulePolicyType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "schedulePolicyType",
                "required": [
                  "schedulePolicyType"
                ]
              },
              "retentionPolicy": {
                "description": "Retention policy with the details on backup copy retention ranges.",
                "type": "object",
                "properties": {
                  "retentionPolicyType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "retentionPolicyType",
                "required": [
                  "retentionPolicyType"
                ]
              },
              "tieringPolicy": {
                "type": "object",
                "description": "Tiering policy to automatically move RPs to another tier.\nKey is Target Tier, defined in RecoveryPointTierType enum.\nTiering policy specifies the criteria to move RP to the target tier.",
                "additionalProperties": {
                  "type": "object",
                  "description": "Tiering Policy for a target tier.\nIf the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier",
                  "properties": {
                    "tieringMode": {
                      "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "TierRecommended",
                        "TierAfter",
                        "DoNotTier"
                      ],
                      "x-ms-enum": {
                        "name": "TieringMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "TierRecommended",
                            "value": "TierRecommended"
                          },
                          {
                            "name": "TierAfter",
                            "value": "TierAfter"
                          },
                          {
                            "name": "DoNotTier",
                            "value": "DoNotTier"
                          }
                        ]
                      }
                    },
                    "duration": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of days/weeks/months/years to retain backups in current tier before tiering.\nUsed only if TieringMode is set to TierAfter"
                    },
                    "durationType": {
                      "description": "Retention duration type: days/weeks/months/years\nUsed only if TieringMode is set to TierAfter",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Days",
                        "Weeks",
                        "Months",
                        "Years"
                      ],
                      "x-ms-enum": {
                        "name": "RetentionDurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Days",
                            "value": "Days"
                          },
                          {
                            "name": "Weeks",
                            "value": "Weeks"
                          },
                          {
                            "name": "Months",
                            "value": "Months"
                          },
                          {
                            "name": "Years",
                            "value": "Years"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "snapshotBackupAdditionalDetails": {
                "description": "Snapshot Backup related fields for WorkloadType SaPHanaSystem",
                "type": "object",
                "properties": {
                  "instantRpRetentionRangeInDays": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "instantRPDetails": {
                    "type": "string"
                  },
                  "userAssignedManagedIdentityDetails": {
                    "description": "User assigned managed identity details",
                    "type": "object",
                    "properties": {
                      "identityArmId": {
                        "type": "string",
                        "description": "The ARM id of the assigned identity."
                      },
                      "identityName": {
                        "type": "string",
                        "description": "The name of the assigned identity."
                      },
                      "userAssignedIdentityProperties": {
                        "description": "User assigned managed identity properties",
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the assigned identity."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "makePolicyConsistent": {
          "type": "boolean",
          "description": "Fix the policy inconsistency"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureWorkload"
    },
    "AzureVmWorkloadSAPAseDatabaseProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SAP ASE Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SAPAseDatabase"
    },
    "AzureVmWorkloadSAPAseDatabaseProtectedItem": {
      "type": "object",
      "description": "Azure VM workload-specific protected item representing SAP ASE Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protected item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the DB represented by this backup item.",
              "readOnly": true
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "parentName": {
              "type": "string",
              "description": "Parent name of the DB such as Instance or Availability Group."
            },
            "parentType": {
              "type": "string",
              "description": "Parent type of protected item, example: for a DB, standalone server or distributed"
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item.",
              "readOnly": true
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "lastBackupStatus": {
              "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "LastBackupStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item."
            },
            "lastBackupErrorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "protectedItemDataSourceId": {
              "type": "string",
              "description": "Data ID of the protected item."
            },
            "protectedItemHealthStatus": {
              "description": "Health status of the backup item, evaluated based on last heartbeat received",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "NotReachable",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "ProtectedItemHealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "NotReachable",
                    "value": "NotReachable"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyState": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                },
                "recoveryModel": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                }
              }
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "nodesList": {
              "type": "array",
              "description": "List of the nodes in case of distributed container.",
              "items": {
                "type": "object",
                "description": "This is used to represent the various nodes of the distributed container.",
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "Name of the node under a distributed container."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of this Node.\nFailed | Succeeded"
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM resource id of the node"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSAPAseDatabase"
    },
    "AzureVmWorkloadSAPAseDatabaseWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SAP ASE Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SAPAseDatabase"
    },
    "AzureVmWorkloadSAPAseSystemProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SAP ASE System.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SAPAseSystem"
    },
    "AzureVmWorkloadSAPAseSystemWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SAP ASE System.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SAPAseSystem"
    },
    "AzureVmWorkloadSAPHanaDBInstance": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SAP HANA Dbinstance.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SAPHanaDBInstance"
    },
    "AzureVmWorkloadSAPHanaDBInstanceProtectedItem": {
      "type": "object",
      "description": "Azure VM workload-specific protected item representing SAP HANA DBInstance.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protected item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the DB represented by this backup item.",
              "readOnly": true
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "parentName": {
              "type": "string",
              "description": "Parent name of the DB such as Instance or Availability Group."
            },
            "parentType": {
              "type": "string",
              "description": "Parent type of protected item, example: for a DB, standalone server or distributed"
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item.",
              "readOnly": true
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "lastBackupStatus": {
              "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "LastBackupStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item."
            },
            "lastBackupErrorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "protectedItemDataSourceId": {
              "type": "string",
              "description": "Data ID of the protected item."
            },
            "protectedItemHealthStatus": {
              "description": "Health status of the backup item, evaluated based on last heartbeat received",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "NotReachable",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "ProtectedItemHealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "NotReachable",
                    "value": "NotReachable"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyState": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                },
                "recoveryModel": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                }
              }
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "nodesList": {
              "type": "array",
              "description": "List of the nodes in case of distributed container.",
              "items": {
                "type": "object",
                "description": "This is used to represent the various nodes of the distributed container.",
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "Name of the node under a distributed container."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of this Node.\nFailed | Succeeded"
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM resource id of the node"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSAPHanaDBInstance"
    },
    "AzureVmWorkloadSAPHanaDatabaseProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SAP HANA Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SAPHanaDatabase"
    },
    "AzureVmWorkloadSAPHanaDatabaseProtectedItem": {
      "type": "object",
      "description": "Azure VM workload-specific protected item representing SAP HANA Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protected item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the DB represented by this backup item.",
              "readOnly": true
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "parentName": {
              "type": "string",
              "description": "Parent name of the DB such as Instance or Availability Group."
            },
            "parentType": {
              "type": "string",
              "description": "Parent type of protected item, example: for a DB, standalone server or distributed"
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item.",
              "readOnly": true
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "lastBackupStatus": {
              "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "LastBackupStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item."
            },
            "lastBackupErrorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "protectedItemDataSourceId": {
              "type": "string",
              "description": "Data ID of the protected item."
            },
            "protectedItemHealthStatus": {
              "description": "Health status of the backup item, evaluated based on last heartbeat received",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "NotReachable",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "ProtectedItemHealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "NotReachable",
                    "value": "NotReachable"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyState": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                },
                "recoveryModel": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                }
              }
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "nodesList": {
              "type": "array",
              "description": "List of the nodes in case of distributed container.",
              "items": {
                "type": "object",
                "description": "This is used to represent the various nodes of the distributed container.",
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "Name of the node under a distributed container."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of this Node.\nFailed | Succeeded"
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM resource id of the node"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSAPHanaDatabase"
    },
    "AzureVmWorkloadSAPHanaDatabaseWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SAP HANA Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SAPHanaDatabase"
    },
    "AzureVmWorkloadSAPHanaHSRProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing HANA HSR.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "HanaHSRContainer"
    },
    "AzureVmWorkloadSAPHanaSystemProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SAP HANA System.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SAPHanaSystem"
    },
    "AzureVmWorkloadSAPHanaSystemWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SAP HANA System.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SAPHanaSystem"
    },
    "AzureVmWorkloadSQLAvailabilityGroupProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SQL Availability Group.",
      "properties": {
        "nodesList": {
          "type": "array",
          "description": "List of the nodes in case of distributed container.",
          "items": {
            "type": "object",
            "description": "This is used to represent the various nodes of the distributed container.",
            "properties": {
              "nodeName": {
                "type": "string",
                "description": "Name of the node under a distributed container."
              },
              "status": {
                "type": "string",
                "description": "Status of this Node.\nFailed | Succeeded"
              },
              "errorDetail": {
                "type": "object",
                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code.",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Error Message related to the Code.",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "List of recommendation strings.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "sourceResourceId": {
                "type": "string",
                "description": "ARM resource id of the node"
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SQLAvailabilityGroupContainer"
    },
    "AzureVmWorkloadSQLDatabaseProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SQL Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SQLDataBase"
    },
    "AzureVmWorkloadSQLDatabaseProtectedItem": {
      "type": "object",
      "description": "Azure VM workload-specific protected item representing SQL Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protected item.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the DB represented by this backup item.",
              "readOnly": true
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "parentName": {
              "type": "string",
              "description": "Parent name of the DB such as Instance or Availability Group."
            },
            "parentType": {
              "type": "string",
              "description": "Parent type of protected item, example: for a DB, standalone server or distributed"
            },
            "protectionStatus": {
              "type": "string",
              "description": "Backup status of this backup item.",
              "readOnly": true
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "IRPending",
                "Protected",
                "ProtectionError",
                "ProtectionStopped",
                "ProtectionPaused",
                "BackupsSuspended"
              ],
              "x-ms-enum": {
                "name": "ProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionError",
                    "value": "ProtectionError"
                  },
                  {
                    "name": "ProtectionStopped",
                    "value": "ProtectionStopped"
                  },
                  {
                    "name": "ProtectionPaused",
                    "value": "ProtectionPaused"
                  },
                  {
                    "name": "BackupsSuspended",
                    "value": "BackupsSuspended"
                  }
                ]
              }
            },
            "lastBackupStatus": {
              "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "LastBackupStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "lastBackupTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last backup operation on this backup item."
            },
            "lastBackupErrorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "protectedItemDataSourceId": {
              "type": "string",
              "description": "Data ID of the protected item."
            },
            "protectedItemHealthStatus": {
              "description": "Health status of the backup item, evaluated based on last heartbeat received",
              "type": "string",
              "enum": [
                "Invalid",
                "Healthy",
                "Unhealthy",
                "NotReachable",
                "IRPending"
              ],
              "x-ms-enum": {
                "name": "ProtectedItemHealthStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "Unhealthy",
                    "value": "Unhealthy"
                  },
                  {
                    "name": "NotReachable",
                    "value": "NotReachable"
                  },
                  {
                    "name": "IRPending",
                    "value": "IRPending"
                  }
                ]
              }
            },
            "extendedInfo": {
              "description": "Additional information for this backup item.",
              "type": "object",
              "properties": {
                "oldestRecoveryPoint": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item across all tiers."
                },
                "oldestRecoveryPointInVault": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in vault tier"
                },
                "oldestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The oldest backup copy available for this backup item in archive tier"
                },
                "newestRecoveryPointInArchive": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The latest backup copy available for this backup item in archive tier"
                },
                "recoveryPointCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of backup copies available for this backup item."
                },
                "policyState": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                },
                "recoveryModel": {
                  "type": "string",
                  "description": "Indicates consistency of policy object and policy applied to this backup item."
                }
              }
            },
            "kpisHealths": {
              "type": "object",
              "description": "Health details of different KPIs",
              "additionalProperties": {
                "type": "object",
                "description": "KPI Resource Health Details",
                "properties": {
                  "resourceHealthStatus": {
                    "description": "Resource Health Status",
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "TransientDegraded",
                      "PersistentDegraded",
                      "TransientUnhealthy",
                      "PersistentUnhealthy",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy"
                        },
                        {
                          "name": "TransientDegraded",
                          "value": "TransientDegraded"
                        },
                        {
                          "name": "PersistentDegraded",
                          "value": "PersistentDegraded"
                        },
                        {
                          "name": "TransientUnhealthy",
                          "value": "TransientUnhealthy"
                        },
                        {
                          "name": "PersistentUnhealthy",
                          "value": "PersistentUnhealthy"
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        }
                      ]
                    }
                  },
                  "resourceHealthDetails": {
                    "type": "array",
                    "description": "Resource Health Status",
                    "items": {
                      "type": "object",
                      "description": "Health Details for backup items.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Health Code",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "description": "Health Title",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Health Message",
                          "readOnly": true
                        },
                        "recommendations": {
                          "type": "array",
                          "description": "Health Recommended Actions",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "code"
                    ]
                  }
                }
              }
            },
            "nodesList": {
              "type": "array",
              "description": "List of the nodes in case of distributed container.",
              "items": {
                "type": "object",
                "description": "This is used to represent the various nodes of the distributed container.",
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "Name of the node under a distributed container."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of this Node.\nFailed | Succeeded"
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM resource id of the node"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSQLDatabase"
    },
    "AzureVmWorkloadSQLDatabaseWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SQL Database.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SQLDataBase"
    },
    "AzureVmWorkloadSQLInstanceProtectableItem": {
      "type": "object",
      "description": "Azure VM workload-specific protectable item representing SQL Instance.",
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific protectable item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "parentUniqueName": {
              "type": "string",
              "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG."
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protectable"
            },
            "isAutoProtected": {
              "type": "boolean",
              "description": "Indicates if protectable item is auto-protected"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subprotectableitemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            },
            "prebackupvalidation": {
              "description": "Pre-backup validation for protectable objects",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Success",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InquiryStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Success",
                        "value": "Success"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      }
                    ]
                  }
                },
                "code": {
                  "type": "string",
                  "description": "Error code of protectable item"
                },
                "message": {
                  "type": "string",
                  "description": "Message corresponding to the error code for the protectable item"
                }
              }
            },
            "isProtectable": {
              "type": "boolean",
              "description": "Indicates if item is protectable"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "SQLInstance"
    },
    "AzureVmWorkloadSQLInstanceWorkloadItem": {
      "type": "object",
      "description": "Azure VM workload-specific workload item representing SQL Instance.",
      "properties": {
        "dataDirectoryPaths": {
          "type": "array",
          "description": "Data Directory Paths for default directories",
          "items": {
            "type": "object",
            "description": "SQLDataDirectory info",
            "properties": {
              "type": {
                "description": "Type of data directory mapping",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Data",
                  "Log"
                ],
                "x-ms-enum": {
                  "name": "SQLDataDirectoryType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Data",
                      "value": "Data"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    }
                  ]
                }
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "logicalName": {
                "type": "string",
                "description": "Logical name of the file"
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Azure VM workload-specific workload item.",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            },
            "parentName": {
              "type": "string",
              "description": "Name for instance or AG"
            },
            "serverName": {
              "type": "string",
              "description": "Host/Cluster Name for instance or AG"
            },
            "isAutoProtectable": {
              "type": "boolean",
              "description": "Indicates if workload item is auto-protectable"
            },
            "subinquireditemcount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's present"
            },
            "subWorkloadItemCount": {
              "type": "integer",
              "format": "int32",
              "description": "For instance or AG, indicates number of DB's to be protected"
            }
          },
          "x-ms-discriminator-value": "AzureVmWorkloadItem"
        }
      ],
      "x-ms-discriminator-value": "SQLInstance"
    },
    "AzureWorkloadAutoProtectionIntent": {
      "type": "object",
      "description": "Azure Recovery Services Vault specific protection intent item.",
      "x-ms-discriminator-value": "AzureWorkloadAutoProtectionIntent",
      "properties": {
        "protectionIntentItemType": {
          "description": "backup protectionIntent type.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureResourceItem",
            "RecoveryServiceVaultItem",
            "AzureWorkloadContainerAutoProtectionIntent",
            "AzureWorkloadAutoProtectionIntent",
            "AzureWorkloadSQLAutoProtectionIntent"
          ],
          "x-ms-enum": {
            "name": "ProtectionIntentItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureResourceItem",
                "value": "AzureResourceItem"
              },
              {
                "name": "RecoveryServiceVaultItem",
                "value": "RecoveryServiceVaultItem"
              },
              {
                "name": "AzureWorkloadContainerAutoProtectionIntent",
                "value": "AzureWorkloadContainerAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadAutoProtectionIntent",
                "value": "AzureWorkloadAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadSQLAutoProtectionIntent",
                "value": "AzureWorkloadSQLAutoProtectionIntent"
              }
            ]
          }
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "itemId": {
          "type": "string",
          "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      }
    },
    "AzureWorkloadBackupRequest": {
      "type": "object",
      "description": "AzureWorkload workload-specific backup request.",
      "properties": {
        "backupType": {
          "description": "Type of backup, viz. Full, Differential, Log or CopyOnlyFull",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Differential",
            "Log",
            "CopyOnlyFull",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "CopyOnlyFull",
                "value": "CopyOnlyFull"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "enableCompression": {
          "type": "boolean",
          "description": "Bool for Compression setting"
        },
        "recoveryPointExpiryTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC)."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadBackupRequest"
    },
    "AzureWorkloadContainer": {
      "type": "object",
      "description": "Container for the workloads running inside Azure Compute or Classic Compute.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "backupManagementType": {
          "description": "Type of backup management for the container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "registrationStatus": {
          "type": "string",
          "description": "Status of registration of the container with the Recovery Services Vault."
        },
        "healthStatus": {
          "type": "string",
          "description": "Status of health of the container."
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "Microsoft.ClassicCompute/virtualMachines",
            "Microsoft.Compute/virtualMachines",
            "AzureWorkloadContainer"
          ],
          "x-ms-enum": {
            "name": "ProtectableContainerType",
            "modelAsString": false
          }
        },
        "protectableObjectType": {
          "type": "string",
          "description": "Type of the protectable object associated with this container"
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the virtual machine represented by this Azure Workload Container"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp when this container was updated."
        },
        "extendedInfo": {
          "description": "Additional details of a workload container.",
          "type": "object",
          "properties": {
            "hostServerName": {
              "type": "string",
              "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container."
            },
            "inquiryInfo": {
              "description": "Inquiry Status for the container.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Inquiry Status for this container such as\nInProgress | Failed | Succeeded"
                },
                "errorDetail": {
                  "type": "object",
                  "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code.",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Error Message related to the Code.",
                      "readOnly": true
                    },
                    "recommendations": {
                      "type": "array",
                      "description": "List of recommendation strings.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "inquiryDetails": {
                  "type": "array",
                  "description": "Inquiry Details which will have workload specific details.\nFor e.g. - For SQL and oracle this will contain different details.",
                  "items": {
                    "type": "object",
                    "description": "Details of an inquired protectable item.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the Workload such as SQL, Oracle etc."
                      },
                      "itemCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Contains the protectable item Count inside this Container."
                      },
                      "inquiryValidation": {
                        "description": "Inquiry validation such as permissions and other backup validations.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "Status for the Inquiry Validation."
                          },
                          "errorDetail": {
                            "type": "object",
                            "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Error code.",
                                "readOnly": true
                              },
                              "message": {
                                "type": "string",
                                "description": "Error Message related to the Code.",
                                "readOnly": true
                              },
                              "recommendations": {
                                "type": "array",
                                "description": "List of recommendation strings.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "additionalDetail": {
                            "type": "string",
                            "description": "Error Additional Detail in case the status is non-success.",
                            "readOnly": true
                          },
                          "protectableItemCount": {
                            "description": "Dictionary to store the count of ProtectableItems with key POType.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "nodesList": {
              "type": "array",
              "description": "List of the nodes in case of distributed container.",
              "items": {
                "type": "object",
                "description": "This is used to represent the various nodes of the distributed container.",
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "Name of the node under a distributed container."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of this Node.\nFailed | Succeeded"
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM resource id of the node"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "workloadType": {
          "description": "Workload type for which registration was sent.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "operationType": {
          "description": "Re-Do Operation",
          "type": "string",
          "enum": [
            "Invalid",
            "Register",
            "Reregister",
            "Rehydrate"
          ],
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Register",
                "value": "Register"
              },
              {
                "name": "Reregister",
                "value": "Reregister"
              },
              {
                "name": "Rehydrate",
                "value": "Rehydrate"
              }
            ]
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadContainer"
    },
    "AzureWorkloadContainerAutoProtectionIntent": {
      "type": "object",
      "description": "Azure workload specific protection intent item.",
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup ProtectionIntent.",
          "properties": {
            "protectionIntentItemType": {
              "description": "backup protectionIntent type.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureResourceItem",
                "RecoveryServiceVaultItem",
                "AzureWorkloadContainerAutoProtectionIntent",
                "AzureWorkloadAutoProtectionIntent",
                "AzureWorkloadSQLAutoProtectionIntent"
              ],
              "x-ms-enum": {
                "name": "ProtectionIntentItemType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureResourceItem",
                    "value": "AzureResourceItem"
                  },
                  {
                    "name": "RecoveryServiceVaultItem",
                    "value": "RecoveryServiceVaultItem"
                  },
                  {
                    "name": "AzureWorkloadContainerAutoProtectionIntent",
                    "value": "AzureWorkloadContainerAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadAutoProtectionIntent",
                    "value": "AzureWorkloadAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadSQLAutoProtectionIntent",
                    "value": "AzureWorkloadSQLAutoProtectionIntent"
                  }
                ]
              }
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "itemId": {
              "type": "string",
              "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "protectionIntentItemType",
          "required": [
            "protectionIntentItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadContainerAutoProtectionIntent"
    },
    "AzureWorkloadContainerExtendedInfo": {
      "type": "object",
      "description": "Extended information of the container.",
      "properties": {
        "hostServerName": {
          "type": "string",
          "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container."
        },
        "inquiryInfo": {
          "description": "Inquiry Status for the container.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Inquiry Status for this container such as\nInProgress | Failed | Succeeded"
            },
            "errorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "inquiryDetails": {
              "type": "array",
              "description": "Inquiry Details which will have workload specific details.\nFor e.g. - For SQL and oracle this will contain different details.",
              "items": {
                "type": "object",
                "description": "Details of an inquired protectable item.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the Workload such as SQL, Oracle etc."
                  },
                  "itemCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Contains the protectable item Count inside this Container."
                  },
                  "inquiryValidation": {
                    "description": "Inquiry validation such as permissions and other backup validations.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status for the Inquiry Validation."
                      },
                      "errorDetail": {
                        "type": "object",
                        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Error code.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Error Message related to the Code.",
                            "readOnly": true
                          },
                          "recommendations": {
                            "type": "array",
                            "description": "List of recommendation strings.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "additionalDetail": {
                        "type": "string",
                        "description": "Error Additional Detail in case the status is non-success.",
                        "readOnly": true
                      },
                      "protectableItemCount": {
                        "description": "Dictionary to store the count of ProtectableItems with key POType.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "nodesList": {
          "type": "array",
          "description": "List of the nodes in case of distributed container.",
          "items": {
            "type": "object",
            "description": "This is used to represent the various nodes of the distributed container.",
            "properties": {
              "nodeName": {
                "type": "string",
                "description": "Name of the node under a distributed container."
              },
              "status": {
                "type": "string",
                "description": "Status of this Node.\nFailed | Succeeded"
              },
              "errorDetail": {
                "type": "object",
                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code.",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Error Message related to the Code.",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "List of recommendation strings.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "sourceResourceId": {
                "type": "string",
                "description": "ARM resource id of the node"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureWorkloadErrorInfo": {
      "type": "object",
      "description": "Azure storage specific error information",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code."
        },
        "errorString": {
          "type": "string",
          "description": "Localized error string."
        },
        "errorTitle": {
          "type": "string",
          "description": "Title: Typically, the entity that the error pertains to."
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          }
        },
        "additionalDetails": {
          "type": "string",
          "description": "Additional details for above error code."
        }
      }
    },
    "AzureWorkloadJob": {
      "type": "object",
      "description": "Azure storage specific job.",
      "properties": {
        "workloadType": {
          "type": "string",
          "description": "Workload type of the job"
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed during the execution of this job."
        },
        "actionsInfo": {
          "type": "array",
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details on execution of this job.",
          "items": {
            "type": "object",
            "description": "Azure storage specific error information",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code."
              },
              "errorString": {
                "type": "string",
                "description": "Localized error string."
              },
              "errorTitle": {
                "type": "string",
                "description": "Title: Typically, the entity that the error pertains to."
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                }
              },
              "additionalDetails": {
                "type": "string",
                "description": "Additional details for above error code."
              }
            }
          },
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "extendedInfo": {
          "description": "Additional information about the job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks for this job",
              "items": {
                "type": "object",
                "description": "Azure VM workload specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "Job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message on job execution."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadJob"
    },
    "AzureWorkloadJobExtendedInfo": {
      "type": "object",
      "description": "Azure VM workload-specific additional information for job.",
      "properties": {
        "tasksList": {
          "type": "array",
          "description": "List of tasks for this job",
          "items": {
            "type": "object",
            "description": "Azure VM workload specific job task details.",
            "properties": {
              "taskId": {
                "type": "string",
                "description": "The task display name."
              },
              "status": {
                "type": "string",
                "description": "The status."
              }
            }
          },
          "x-ms-identifiers": [
            "taskId"
          ]
        },
        "propertyBag": {
          "type": "object",
          "description": "Job properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "type": "string",
          "description": "Non localized error message on job execution."
        }
      }
    },
    "AzureWorkloadJobTaskDetails": {
      "type": "object",
      "description": "Azure VM workload specific job task details.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The task display name."
        },
        "status": {
          "type": "string",
          "description": "The status."
        }
      }
    },
    "AzureWorkloadPointInTimeRecoveryPoint": {
      "type": "object",
      "description": "Recovery point specific to PointInTime",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "recoveryPointTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which recovery point was created"
        },
        "type": {
          "description": "Type of restore point",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "RestorePointType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "recoveryPointTierDetails": {
          "type": "array",
          "description": "Recovery point tier information.",
          "items": {
            "type": "object",
            "description": "RecoveryPoint Tier Information V2",
            "properties": {
              "type": {
                "description": "Recovery point tier type.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "InstantRP",
                  "HardenedRP",
                  "ArchivedRP"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierType",
                  "modelAsString": false
                }
              },
              "status": {
                "description": "Recovery point tier status.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Valid",
                  "Disabled",
                  "Deleted",
                  "Rehydrated"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierStatus",
                  "modelAsString": true
                }
              },
              "extendedInfo": {
                "type": "object",
                "description": "Recovery point tier status.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "recoveryPointMoveReadinessInfo": {
          "type": "object",
          "description": "Eligibility of RP to be moved to another tier",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "isReadyForMove": {
                "type": "boolean"
              },
              "additionalInfo": {
                "type": "string"
              }
            }
          }
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        },
        "timeRanges": {
          "type": "array",
          "description": "List of log ranges",
          "items": {
            "type": "object",
            "description": "Provides details for log ranges",
            "properties": {
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "Start time of the time range for log recovery."
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "End time of the time range for log recovery."
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadPointInTimeRecoveryPoint"
    },
    "AzureWorkloadPointInTimeRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore",
      "properties": {
        "pointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "PointInTime value"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload-specific restore.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadPointInTimeRestoreRequest"
    },
    "AzureWorkloadRecoveryPoint": {
      "type": "object",
      "description": "Workload specific recovery point, specifically encapsulates full/diff recovery point",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "recoveryPointTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which recovery point was created"
        },
        "type": {
          "description": "Type of restore point",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "RestorePointType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "recoveryPointTierDetails": {
          "type": "array",
          "description": "Recovery point tier information.",
          "items": {
            "type": "object",
            "description": "RecoveryPoint Tier Information V2",
            "properties": {
              "type": {
                "description": "Recovery point tier type.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "InstantRP",
                  "HardenedRP",
                  "ArchivedRP"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierType",
                  "modelAsString": false
                }
              },
              "status": {
                "description": "Recovery point tier status.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Valid",
                  "Disabled",
                  "Deleted",
                  "Rehydrated"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierStatus",
                  "modelAsString": true
                }
              },
              "extendedInfo": {
                "type": "object",
                "description": "Recovery point tier status.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "recoveryPointMoveReadinessInfo": {
          "type": "object",
          "description": "Eligibility of RP to be moved to another tier",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "isReadyForMove": {
                "type": "boolean"
              },
              "additionalInfo": {
                "type": "string"
              }
            }
          }
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadRecoveryPoint"
    },
    "AzureWorkloadRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload-specific restore.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadRestoreRequest"
    },
    "AzureWorkloadSAPAsePointInTimeRecoveryPoint": {
      "type": "object",
      "description": "Recovery point specific to PointInTime in SAPAse",
      "allOf": [
        {
          "type": "object",
          "description": "Recovery point specific to PointInTime",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "recoveryPointTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which recovery point was created"
            },
            "type": {
              "description": "Type of restore point",
              "type": "string",
              "enum": [
                "Invalid",
                "Full",
                "Log",
                "Differential",
                "Incremental",
                "SnapshotFull",
                "SnapshotCopyOnlyFull"
              ],
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Full",
                    "value": "Full"
                  },
                  {
                    "name": "Log",
                    "value": "Log"
                  },
                  {
                    "name": "Differential",
                    "value": "Differential"
                  },
                  {
                    "name": "Incremental",
                    "value": "Incremental"
                  },
                  {
                    "name": "SnapshotFull",
                    "value": "SnapshotFull"
                  },
                  {
                    "name": "SnapshotCopyOnlyFull",
                    "value": "SnapshotCopyOnlyFull"
                  }
                ]
              }
            },
            "recoveryPointTierDetails": {
              "type": "array",
              "description": "Recovery point tier information.",
              "items": {
                "type": "object",
                "description": "RecoveryPoint Tier Information V2",
                "properties": {
                  "type": {
                    "description": "Recovery point tier type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "InstantRP",
                      "HardenedRP",
                      "ArchivedRP"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierType",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Recovery point tier status.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Valid",
                      "Disabled",
                      "Deleted",
                      "Rehydrated"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierStatus",
                      "modelAsString": true
                    }
                  },
                  "extendedInfo": {
                    "type": "object",
                    "description": "Recovery point tier status.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "recoveryPointMoveReadinessInfo": {
              "type": "object",
              "description": "Eligibility of RP to be moved to another tier",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "isReadyForMove": {
                    "type": "boolean"
                  },
                  "additionalInfo": {
                    "type": "string"
                  }
                }
              }
            },
            "recoveryPointProperties": {
              "description": "Properties of Recovery Point",
              "type": "object",
              "properties": {
                "expiryTime": {
                  "type": "string",
                  "description": "Expiry time of Recovery Point in UTC."
                },
                "ruleName": {
                  "type": "string",
                  "description": "Rule name tagged on Recovery Point that governs life cycle"
                },
                "isSoftDeleted": {
                  "type": "boolean",
                  "description": "Bool to indicate whether RP is in soft delete state or not"
                }
              }
            },
            "timeRanges": {
              "type": "array",
              "description": "List of log ranges",
              "items": {
                "type": "object",
                "description": "Provides details for log ranges",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of the time range for log recovery."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of the time range for log recovery."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadPointInTimeRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPAsePointInTimeRecoveryPoint"
    },
    "AzureWorkloadSAPAsePointInTimeRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Ase-specific restore. Specifically for PointInTime/Log restore",
      "properties": {
        "pointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "PointInTime value"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload SAP Ase-specific restore.",
          "x-ms-discriminator-value": "AzureWorkloadSAPAseRestoreRequest",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPAsePointInTimeRestoreRequest"
    },
    "AzureWorkloadSAPAseRecoveryPoint": {
      "type": "object",
      "description": "SAPAse specific recoverypoint, specifically encapsulates full/diff recoverypoints",
      "allOf": [
        {
          "type": "object",
          "description": "Workload specific recovery point, specifically encapsulates full/diff recovery point",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "recoveryPointTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which recovery point was created"
            },
            "type": {
              "description": "Type of restore point",
              "type": "string",
              "enum": [
                "Invalid",
                "Full",
                "Log",
                "Differential",
                "Incremental",
                "SnapshotFull",
                "SnapshotCopyOnlyFull"
              ],
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Full",
                    "value": "Full"
                  },
                  {
                    "name": "Log",
                    "value": "Log"
                  },
                  {
                    "name": "Differential",
                    "value": "Differential"
                  },
                  {
                    "name": "Incremental",
                    "value": "Incremental"
                  },
                  {
                    "name": "SnapshotFull",
                    "value": "SnapshotFull"
                  },
                  {
                    "name": "SnapshotCopyOnlyFull",
                    "value": "SnapshotCopyOnlyFull"
                  }
                ]
              }
            },
            "recoveryPointTierDetails": {
              "type": "array",
              "description": "Recovery point tier information.",
              "items": {
                "type": "object",
                "description": "RecoveryPoint Tier Information V2",
                "properties": {
                  "type": {
                    "description": "Recovery point tier type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "InstantRP",
                      "HardenedRP",
                      "ArchivedRP"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierType",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Recovery point tier status.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Valid",
                      "Disabled",
                      "Deleted",
                      "Rehydrated"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierStatus",
                      "modelAsString": true
                    }
                  },
                  "extendedInfo": {
                    "type": "object",
                    "description": "Recovery point tier status.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "recoveryPointMoveReadinessInfo": {
              "type": "object",
              "description": "Eligibility of RP to be moved to another tier",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "isReadyForMove": {
                    "type": "boolean"
                  },
                  "additionalInfo": {
                    "type": "string"
                  }
                }
              }
            },
            "recoveryPointProperties": {
              "description": "Properties of Recovery Point",
              "type": "object",
              "properties": {
                "expiryTime": {
                  "type": "string",
                  "description": "Expiry time of Recovery Point in UTC."
                },
                "ruleName": {
                  "type": "string",
                  "description": "Rule name tagged on Recovery Point that governs life cycle"
                },
                "isSoftDeleted": {
                  "type": "boolean",
                  "description": "Bool to indicate whether RP is in soft delete state or not"
                }
              }
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPAseRecoveryPoint"
    },
    "AzureWorkloadSAPAseRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Ase-specific restore.",
      "x-ms-discriminator-value": "AzureWorkloadSAPAseRestoreRequest",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        }
      }
    },
    "AzureWorkloadSAPHanaPointInTimeRecoveryPoint": {
      "type": "object",
      "description": "Recovery point specific to PointInTime in SAPHana",
      "allOf": [
        {
          "type": "object",
          "description": "Recovery point specific to PointInTime",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "recoveryPointTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which recovery point was created"
            },
            "type": {
              "description": "Type of restore point",
              "type": "string",
              "enum": [
                "Invalid",
                "Full",
                "Log",
                "Differential",
                "Incremental",
                "SnapshotFull",
                "SnapshotCopyOnlyFull"
              ],
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Full",
                    "value": "Full"
                  },
                  {
                    "name": "Log",
                    "value": "Log"
                  },
                  {
                    "name": "Differential",
                    "value": "Differential"
                  },
                  {
                    "name": "Incremental",
                    "value": "Incremental"
                  },
                  {
                    "name": "SnapshotFull",
                    "value": "SnapshotFull"
                  },
                  {
                    "name": "SnapshotCopyOnlyFull",
                    "value": "SnapshotCopyOnlyFull"
                  }
                ]
              }
            },
            "recoveryPointTierDetails": {
              "type": "array",
              "description": "Recovery point tier information.",
              "items": {
                "type": "object",
                "description": "RecoveryPoint Tier Information V2",
                "properties": {
                  "type": {
                    "description": "Recovery point tier type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "InstantRP",
                      "HardenedRP",
                      "ArchivedRP"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierType",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Recovery point tier status.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Valid",
                      "Disabled",
                      "Deleted",
                      "Rehydrated"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierStatus",
                      "modelAsString": true
                    }
                  },
                  "extendedInfo": {
                    "type": "object",
                    "description": "Recovery point tier status.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "recoveryPointMoveReadinessInfo": {
              "type": "object",
              "description": "Eligibility of RP to be moved to another tier",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "isReadyForMove": {
                    "type": "boolean"
                  },
                  "additionalInfo": {
                    "type": "string"
                  }
                }
              }
            },
            "recoveryPointProperties": {
              "description": "Properties of Recovery Point",
              "type": "object",
              "properties": {
                "expiryTime": {
                  "type": "string",
                  "description": "Expiry time of Recovery Point in UTC."
                },
                "ruleName": {
                  "type": "string",
                  "description": "Rule name tagged on Recovery Point that governs life cycle"
                },
                "isSoftDeleted": {
                  "type": "boolean",
                  "description": "Bool to indicate whether RP is in soft delete state or not"
                }
              }
            },
            "timeRanges": {
              "type": "array",
              "description": "List of log ranges",
              "items": {
                "type": "object",
                "description": "Provides details for log ranges",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of the time range for log recovery."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of the time range for log recovery."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadPointInTimeRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRecoveryPoint"
    },
    "AzureWorkloadSAPHanaPointInTimeRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        },
        "pointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "PointInTime value"
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRestoreRequest"
    },
    "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Hana-specific restore with integrated rehydration of recovery point.",
      "properties": {
        "recoveryPointRehydrationInfo": {
          "description": "RP Rehydration Info",
          "type": "object",
          "properties": {
            "rehydrationRetentionDuration": {
              "type": "string",
              "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
            },
            "rehydrationPriority": {
              "description": "Rehydration Priority",
              "type": "string",
              "enum": [
                "Standard",
                "High"
              ],
              "x-ms-enum": {
                "name": "RehydrationPriority",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "High",
                    "value": "High"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            },
            "pointInTime": {
              "type": "string",
              "format": "date-time",
              "description": "PointInTime value"
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest"
    },
    "AzureWorkloadSAPHanaRecoveryPoint": {
      "type": "object",
      "description": "SAPHana specific recoverypoint, specifically encapsulates full/diff recoverypoints",
      "allOf": [
        {
          "type": "object",
          "description": "Workload specific recovery point, specifically encapsulates full/diff recovery point",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "recoveryPointTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which recovery point was created"
            },
            "type": {
              "description": "Type of restore point",
              "type": "string",
              "enum": [
                "Invalid",
                "Full",
                "Log",
                "Differential",
                "Incremental",
                "SnapshotFull",
                "SnapshotCopyOnlyFull"
              ],
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Full",
                    "value": "Full"
                  },
                  {
                    "name": "Log",
                    "value": "Log"
                  },
                  {
                    "name": "Differential",
                    "value": "Differential"
                  },
                  {
                    "name": "Incremental",
                    "value": "Incremental"
                  },
                  {
                    "name": "SnapshotFull",
                    "value": "SnapshotFull"
                  },
                  {
                    "name": "SnapshotCopyOnlyFull",
                    "value": "SnapshotCopyOnlyFull"
                  }
                ]
              }
            },
            "recoveryPointTierDetails": {
              "type": "array",
              "description": "Recovery point tier information.",
              "items": {
                "type": "object",
                "description": "RecoveryPoint Tier Information V2",
                "properties": {
                  "type": {
                    "description": "Recovery point tier type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "InstantRP",
                      "HardenedRP",
                      "ArchivedRP"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierType",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Recovery point tier status.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Valid",
                      "Disabled",
                      "Deleted",
                      "Rehydrated"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierStatus",
                      "modelAsString": true
                    }
                  },
                  "extendedInfo": {
                    "type": "object",
                    "description": "Recovery point tier status.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "recoveryPointMoveReadinessInfo": {
              "type": "object",
              "description": "Eligibility of RP to be moved to another tier",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "isReadyForMove": {
                    "type": "boolean"
                  },
                  "additionalInfo": {
                    "type": "string"
                  }
                }
              }
            },
            "recoveryPointProperties": {
              "description": "Properties of Recovery Point",
              "type": "object",
              "properties": {
                "expiryTime": {
                  "type": "string",
                  "description": "Expiry time of Recovery Point in UTC."
                },
                "ruleName": {
                  "type": "string",
                  "description": "Rule name tagged on Recovery Point that governs life cycle"
                },
                "isSoftDeleted": {
                  "type": "boolean",
                  "description": "Bool to indicate whether RP is in soft delete state or not"
                }
              }
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaRecoveryPoint"
    },
    "AzureWorkloadSAPHanaRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Hana-specific restore.",
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaRestoreRequest",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        }
      }
    },
    "AzureWorkloadSAPHanaRestoreWithRehydrateRequest": {
      "type": "object",
      "description": "AzureWorkload SAP Hana-specific restore with integrated rehydration of recovery point.",
      "properties": {
        "recoveryPointRehydrationInfo": {
          "description": "RP Rehydration Info",
          "type": "object",
          "properties": {
            "rehydrationRetentionDuration": {
              "type": "string",
              "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
            },
            "rehydrationPriority": {
              "description": "Rehydration Priority",
              "type": "string",
              "enum": [
                "Standard",
                "High"
              ],
              "x-ms-enum": {
                "name": "RehydrationPriority",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "High",
                    "value": "High"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload SAP Hana-specific restore.",
          "x-ms-discriminator-value": "AzureWorkloadSAPHanaRestoreRequest",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaRestoreWithRehydrateRequest"
    },
    "AzureWorkloadSQLAutoProtectionIntent": {
      "type": "object",
      "description": "Azure Workload SQL Auto Protection intent item.",
      "properties": {
        "workloadItemType": {
          "description": "Workload item type of the item for which intent is to be set",
          "type": "string",
          "enum": [
            "Invalid",
            "SQLInstance",
            "SQLDataBase",
            "SAPHanaSystem",
            "SAPHanaDatabase",
            "SAPAseSystem",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "SQLInstance",
                "value": "SQLInstance"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "SAPHanaSystem",
                "value": "SAPHanaSystem"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseSystem",
                "value": "SAPAseSystem"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Azure Recovery Services Vault specific protection intent item.",
          "x-ms-discriminator-value": "AzureWorkloadAutoProtectionIntent",
          "properties": {
            "protectionIntentItemType": {
              "description": "backup protectionIntent type.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureResourceItem",
                "RecoveryServiceVaultItem",
                "AzureWorkloadContainerAutoProtectionIntent",
                "AzureWorkloadAutoProtectionIntent",
                "AzureWorkloadSQLAutoProtectionIntent"
              ],
              "x-ms-enum": {
                "name": "ProtectionIntentItemType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureResourceItem",
                    "value": "AzureResourceItem"
                  },
                  {
                    "name": "RecoveryServiceVaultItem",
                    "value": "RecoveryServiceVaultItem"
                  },
                  {
                    "name": "AzureWorkloadContainerAutoProtectionIntent",
                    "value": "AzureWorkloadContainerAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadAutoProtectionIntent",
                    "value": "AzureWorkloadAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadSQLAutoProtectionIntent",
                    "value": "AzureWorkloadSQLAutoProtectionIntent"
                  }
                ]
              }
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "itemId": {
              "type": "string",
              "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSQLAutoProtectionIntent"
    },
    "AzureWorkloadSQLPointInTimeRecoveryPoint": {
      "type": "object",
      "description": "Recovery point specific to PointInTime",
      "properties": {
        "timeRanges": {
          "type": "array",
          "description": "List of log ranges",
          "items": {
            "type": "object",
            "description": "Provides details for log ranges",
            "properties": {
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "Start time of the time range for log recovery."
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "End time of the time range for log recovery."
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with extended info",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "recoveryPointTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which recovery point was created"
            },
            "type": {
              "description": "Type of restore point",
              "type": "string",
              "enum": [
                "Invalid",
                "Full",
                "Log",
                "Differential",
                "Incremental",
                "SnapshotFull",
                "SnapshotCopyOnlyFull"
              ],
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Full",
                    "value": "Full"
                  },
                  {
                    "name": "Log",
                    "value": "Log"
                  },
                  {
                    "name": "Differential",
                    "value": "Differential"
                  },
                  {
                    "name": "Incremental",
                    "value": "Incremental"
                  },
                  {
                    "name": "SnapshotFull",
                    "value": "SnapshotFull"
                  },
                  {
                    "name": "SnapshotCopyOnlyFull",
                    "value": "SnapshotCopyOnlyFull"
                  }
                ]
              }
            },
            "recoveryPointTierDetails": {
              "type": "array",
              "description": "Recovery point tier information.",
              "items": {
                "type": "object",
                "description": "RecoveryPoint Tier Information V2",
                "properties": {
                  "type": {
                    "description": "Recovery point tier type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "InstantRP",
                      "HardenedRP",
                      "ArchivedRP"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierType",
                      "modelAsString": false
                    }
                  },
                  "status": {
                    "description": "Recovery point tier status.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Valid",
                      "Disabled",
                      "Deleted",
                      "Rehydrated"
                    ],
                    "x-ms-enum": {
                      "name": "RecoveryPointTierStatus",
                      "modelAsString": true
                    }
                  },
                  "extendedInfo": {
                    "type": "object",
                    "description": "Recovery point tier status.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "recoveryPointMoveReadinessInfo": {
              "type": "object",
              "description": "Eligibility of RP to be moved to another tier",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "isReadyForMove": {
                    "type": "boolean"
                  },
                  "additionalInfo": {
                    "type": "string"
                  }
                }
              }
            },
            "recoveryPointProperties": {
              "description": "Properties of Recovery Point",
              "type": "object",
              "properties": {
                "expiryTime": {
                  "type": "string",
                  "description": "Expiry time of Recovery Point in UTC."
                },
                "ruleName": {
                  "type": "string",
                  "description": "Rule name tagged on Recovery Point that governs life cycle"
                },
                "isSoftDeleted": {
                  "type": "boolean",
                  "description": "Bool to indicate whether RP is in soft delete state or not"
                }
              }
            },
            "extendedInfo": {
              "description": "Extended Info that provides data directory details. Will be populated in two cases:\nWhen a specific recovery point is accessed using GetRecoveryPoint\nOr when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter",
              "type": "object",
              "properties": {
                "dataDirectoryTimeInUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC time at which data directory info was captured"
                },
                "dataDirectoryPaths": {
                  "type": "array",
                  "description": "List of data directory paths during restore operation.",
                  "items": {
                    "type": "object",
                    "description": "SQLDataDirectory info",
                    "properties": {
                      "type": {
                        "description": "Type of data directory mapping",
                        "type": "string",
                        "enum": [
                          "Invalid",
                          "Data",
                          "Log"
                        ],
                        "x-ms-enum": {
                          "name": "SQLDataDirectoryType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Invalid",
                              "value": "Invalid"
                            },
                            {
                              "name": "Data",
                              "value": "Data"
                            },
                            {
                              "name": "Log",
                              "value": "Log"
                            }
                          ]
                        }
                      },
                      "path": {
                        "type": "string",
                        "description": "File path"
                      },
                      "logicalName": {
                        "type": "string",
                        "description": "Logical name of the file"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadSQLRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRecoveryPoint"
    },
    "AzureWorkloadSQLPointInTimeRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        },
        "shouldUseAlternateTargetLocation": {
          "type": "boolean",
          "description": "Default option set to true. If this is set to false, alternate data directory must be provided"
        },
        "isNonRecoverable": {
          "type": "boolean",
          "description": "SQL specific property where user can chose to set no-recovery when restore operation is tried"
        },
        "alternateDirectoryPaths": {
          "type": "array",
          "description": "Data directory details",
          "items": {
            "type": "object",
            "description": "Encapsulates information regarding data directory",
            "properties": {
              "mappingType": {
                "description": "Type of data directory mapping",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Data",
                  "Log"
                ],
                "x-ms-enum": {
                  "name": "SQLDataDirectoryType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Data",
                      "value": "Data"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    }
                  ]
                }
              },
              "sourceLogicalName": {
                "type": "string",
                "description": "Restore source logical name path"
              },
              "sourcePath": {
                "type": "string",
                "description": "Restore source path"
              },
              "targetPath": {
                "type": "string",
                "description": "Target path"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "pointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "PointInTime value"
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRestoreRequest"
    },
    "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest": {
      "type": "object",
      "description": "AzureWorkload SQL-specific restore with integrated rehydration of recovery point.",
      "properties": {
        "recoveryPointRehydrationInfo": {
          "description": "RP Rehydration Info",
          "type": "object",
          "properties": {
            "rehydrationRetentionDuration": {
              "type": "string",
              "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
            },
            "rehydrationPriority": {
              "description": "Rehydration Priority",
              "type": "string",
              "enum": [
                "Standard",
                "High"
              ],
              "x-ms-enum": {
                "name": "RehydrationPriority",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "High",
                    "value": "High"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            },
            "shouldUseAlternateTargetLocation": {
              "type": "boolean",
              "description": "Default option set to true. If this is set to false, alternate data directory must be provided"
            },
            "isNonRecoverable": {
              "type": "boolean",
              "description": "SQL specific property where user can chose to set no-recovery when restore operation is tried"
            },
            "alternateDirectoryPaths": {
              "type": "array",
              "description": "Data directory details",
              "items": {
                "type": "object",
                "description": "Encapsulates information regarding data directory",
                "properties": {
                  "mappingType": {
                    "description": "Type of data directory mapping",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Data",
                      "Log"
                    ],
                    "x-ms-enum": {
                      "name": "SQLDataDirectoryType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "Data",
                          "value": "Data"
                        },
                        {
                          "name": "Log",
                          "value": "Log"
                        }
                      ]
                    }
                  },
                  "sourceLogicalName": {
                    "type": "string",
                    "description": "Restore source logical name path"
                  },
                  "sourcePath": {
                    "type": "string",
                    "description": "Restore source path"
                  },
                  "targetPath": {
                    "type": "string",
                    "description": "Target path"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "pointInTime": {
              "type": "string",
              "format": "date-time",
              "description": "PointInTime value"
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest"
    },
    "AzureWorkloadSQLRecoveryPoint": {
      "type": "object",
      "description": "SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with extended info",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "recoveryPointTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which recovery point was created"
        },
        "type": {
          "description": "Type of restore point",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "RestorePointType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "recoveryPointTierDetails": {
          "type": "array",
          "description": "Recovery point tier information.",
          "items": {
            "type": "object",
            "description": "RecoveryPoint Tier Information V2",
            "properties": {
              "type": {
                "description": "Recovery point tier type.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "InstantRP",
                  "HardenedRP",
                  "ArchivedRP"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierType",
                  "modelAsString": false
                }
              },
              "status": {
                "description": "Recovery point tier status.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Valid",
                  "Disabled",
                  "Deleted",
                  "Rehydrated"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierStatus",
                  "modelAsString": true
                }
              },
              "extendedInfo": {
                "type": "object",
                "description": "Recovery point tier status.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "recoveryPointMoveReadinessInfo": {
          "type": "object",
          "description": "Eligibility of RP to be moved to another tier",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "isReadyForMove": {
                "type": "boolean"
              },
              "additionalInfo": {
                "type": "string"
              }
            }
          }
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        },
        "extendedInfo": {
          "description": "Extended Info that provides data directory details. Will be populated in two cases:\nWhen a specific recovery point is accessed using GetRecoveryPoint\nOr when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter",
          "type": "object",
          "properties": {
            "dataDirectoryTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC time at which data directory info was captured"
            },
            "dataDirectoryPaths": {
              "type": "array",
              "description": "List of data directory paths during restore operation.",
              "items": {
                "type": "object",
                "description": "SQLDataDirectory info",
                "properties": {
                  "type": {
                    "description": "Type of data directory mapping",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Data",
                      "Log"
                    ],
                    "x-ms-enum": {
                      "name": "SQLDataDirectoryType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "Data",
                          "value": "Data"
                        },
                        {
                          "name": "Log",
                          "value": "Log"
                        }
                      ]
                    }
                  },
                  "path": {
                    "type": "string",
                    "description": "File path"
                  },
                  "logicalName": {
                    "type": "string",
                    "description": "Logical name of the file"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSQLRecoveryPoint"
    },
    "AzureWorkloadSQLRecoveryPointExtendedInfo": {
      "type": "object",
      "description": "Extended info class details",
      "properties": {
        "dataDirectoryTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time at which data directory info was captured"
        },
        "dataDirectoryPaths": {
          "type": "array",
          "description": "List of data directory paths during restore operation.",
          "items": {
            "type": "object",
            "description": "SQLDataDirectory info",
            "properties": {
              "type": {
                "description": "Type of data directory mapping",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Data",
                  "Log"
                ],
                "x-ms-enum": {
                  "name": "SQLDataDirectoryType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Data",
                      "value": "Data"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    }
                  ]
                }
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "logicalName": {
                "type": "string",
                "description": "Logical name of the file"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureWorkloadSQLRestoreRequest": {
      "type": "object",
      "description": "AzureWorkload SQL -specific restore. Specifically for full/diff restore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
        },
        "propertyBag": {
          "type": "object",
          "description": "Workload specific property bag.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetInfo": {
          "description": "Details of target database",
          "type": "object",
          "properties": {
            "overwriteOption": {
              "description": "Can Overwrite if Target DataBase already exists",
              "type": "string",
              "enum": [
                "Invalid",
                "FailOnConflict",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "OverwriteOptions",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FailOnConflict",
                    "value": "FailOnConflict"
                  },
                  {
                    "name": "Overwrite",
                    "value": "Overwrite"
                  }
                ]
              }
            },
            "containerId": {
              "type": "string",
              "description": "Resource Id name of the container in which Target DataBase resides"
            },
            "databaseName": {
              "type": "string",
              "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
            },
            "targetDirectoryForFileRestore": {
              "type": "string",
              "description": "Target directory location for restore as files."
            }
          }
        },
        "recoveryMode": {
          "description": "Defines whether the current recovery mode is file restore or database restore",
          "type": "string",
          "enum": [
            "Invalid",
            "FileRecovery",
            "WorkloadRecovery",
            "SnapshotAttach",
            "RecoveryUsingSnapshot",
            "SnapshotAttachAndRecover"
          ],
          "x-ms-enum": {
            "name": "RecoveryMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FileRecovery",
                "value": "FileRecovery"
              },
              {
                "name": "WorkloadRecovery",
                "value": "WorkloadRecovery"
              },
              {
                "name": "SnapshotAttach",
                "value": "SnapshotAttach"
              },
              {
                "name": "RecoveryUsingSnapshot",
                "value": "RecoveryUsingSnapshot"
              },
              {
                "name": "SnapshotAttachAndRecover",
                "value": "SnapshotAttachAndRecover"
              }
            ]
          }
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Defines the Resource group of the Target VM"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User Assigned managed identity details\nCurrently used for snapshot.",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        },
        "snapshotRestoreParameters": {
          "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
          "type": "object",
          "properties": {
            "skipAttachAndMount": {
              "type": "boolean"
            },
            "logPointInTimeForDBRecovery": {
              "type": "string"
            }
          }
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        },
        "shouldUseAlternateTargetLocation": {
          "type": "boolean",
          "description": "Default option set to true. If this is set to false, alternate data directory must be provided"
        },
        "isNonRecoverable": {
          "type": "boolean",
          "description": "SQL specific property where user can chose to set no-recovery when restore operation is tried"
        },
        "alternateDirectoryPaths": {
          "type": "array",
          "description": "Data directory details",
          "items": {
            "type": "object",
            "description": "Encapsulates information regarding data directory",
            "properties": {
              "mappingType": {
                "description": "Type of data directory mapping",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Data",
                  "Log"
                ],
                "x-ms-enum": {
                  "name": "SQLDataDirectoryType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Data",
                      "value": "Data"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    }
                  ]
                }
              },
              "sourceLogicalName": {
                "type": "string",
                "description": "Restore source logical name path"
              },
              "sourcePath": {
                "type": "string",
                "description": "Restore source path"
              },
              "targetPath": {
                "type": "string",
                "description": "Target path"
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSQLRestoreRequest"
    },
    "AzureWorkloadSQLRestoreWithRehydrateRequest": {
      "type": "object",
      "description": "AzureWorkload SQL-specific restore with integrated rehydration of recovery point",
      "properties": {
        "recoveryPointRehydrationInfo": {
          "description": "RP Rehydration Info",
          "type": "object",
          "properties": {
            "rehydrationRetentionDuration": {
              "type": "string",
              "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
            },
            "rehydrationPriority": {
              "description": "Rehydration Priority",
              "type": "string",
              "enum": [
                "Standard",
                "High"
              ],
              "x-ms-enum": {
                "name": "RehydrationPriority",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "High",
                    "value": "High"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "AzureWorkload SQL -specific restore. Specifically for full/diff restore",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered."
            },
            "propertyBag": {
              "type": "object",
              "description": "Workload specific property bag.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "targetInfo": {
              "description": "Details of target database",
              "type": "object",
              "properties": {
                "overwriteOption": {
                  "description": "Can Overwrite if Target DataBase already exists",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "FailOnConflict",
                    "Overwrite"
                  ],
                  "x-ms-enum": {
                    "name": "OverwriteOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "FailOnConflict",
                        "value": "FailOnConflict"
                      },
                      {
                        "name": "Overwrite",
                        "value": "Overwrite"
                      }
                    ]
                  }
                },
                "containerId": {
                  "type": "string",
                  "description": "Resource Id name of the container in which Target DataBase resides"
                },
                "databaseName": {
                  "type": "string",
                  "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
                },
                "targetDirectoryForFileRestore": {
                  "type": "string",
                  "description": "Target directory location for restore as files."
                }
              }
            },
            "recoveryMode": {
              "description": "Defines whether the current recovery mode is file restore or database restore",
              "type": "string",
              "enum": [
                "Invalid",
                "FileRecovery",
                "WorkloadRecovery",
                "SnapshotAttach",
                "RecoveryUsingSnapshot",
                "SnapshotAttachAndRecover"
              ],
              "x-ms-enum": {
                "name": "RecoveryMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "FileRecovery",
                    "value": "FileRecovery"
                  },
                  {
                    "name": "WorkloadRecovery",
                    "value": "WorkloadRecovery"
                  },
                  {
                    "name": "SnapshotAttach",
                    "value": "SnapshotAttach"
                  },
                  {
                    "name": "RecoveryUsingSnapshot",
                    "value": "RecoveryUsingSnapshot"
                  },
                  {
                    "name": "SnapshotAttachAndRecover",
                    "value": "SnapshotAttachAndRecover"
                  }
                ]
              }
            },
            "targetResourceGroupName": {
              "type": "string",
              "description": "Defines the Resource group of the Target VM"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User Assigned managed identity details\nCurrently used for snapshot.",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            },
            "snapshotRestoreParameters": {
              "description": "Additional details for snapshot recovery\nCurrently used for snapshot for SAP Hana.",
              "type": "object",
              "properties": {
                "skipAttachAndMount": {
                  "type": "boolean"
                },
                "logPointInTimeForDBRecovery": {
                  "type": "string"
                }
              }
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the target VM\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            },
            "shouldUseAlternateTargetLocation": {
              "type": "boolean",
              "description": "Default option set to true. If this is set to false, alternate data directory must be provided"
            },
            "isNonRecoverable": {
              "type": "boolean",
              "description": "SQL specific property where user can chose to set no-recovery when restore operation is tried"
            },
            "alternateDirectoryPaths": {
              "type": "array",
              "description": "Data directory details",
              "items": {
                "type": "object",
                "description": "Encapsulates information regarding data directory",
                "properties": {
                  "mappingType": {
                    "description": "Type of data directory mapping",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Data",
                      "Log"
                    ],
                    "x-ms-enum": {
                      "name": "SQLDataDirectoryType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "Data",
                          "value": "Data"
                        },
                        {
                          "name": "Log",
                          "value": "Log"
                        }
                      ]
                    }
                  },
                  "sourceLogicalName": {
                    "type": "string",
                    "description": "Restore source logical name path"
                  },
                  "sourcePath": {
                    "type": "string",
                    "description": "Restore source path"
                  },
                  "targetPath": {
                    "type": "string",
                    "description": "Target path"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "x-ms-discriminator-value": "AzureWorkloadSQLRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSQLRestoreWithRehydrateRequest"
    },
    "BEKDetails": {
      "type": "object",
      "description": "BEK is bitlocker encryption key.",
      "properties": {
        "secretUrl": {
          "type": "string",
          "description": "Secret is BEK."
        },
        "secretVaultId": {
          "type": "string",
          "description": "ID of the Key Vault where this Secret is stored."
        },
        "secretData": {
          "type": "string",
          "description": "BEK data."
        }
      }
    },
    "BMSBackupEngineQueryObject": {
      "type": "object",
      "description": "Query parameters to fetch list of backup engines.",
      "properties": {
        "expand": {
          "type": "string",
          "description": "attribute to add extended info"
        }
      }
    },
    "BMSBackupEnginesQueryObject": {
      "type": "object",
      "description": "Query parameters to fetch list of backup engines.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup engine.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup engine."
        },
        "expand": {
          "type": "string",
          "description": "Attribute to add extended info."
        }
      }
    },
    "BMSBackupSummariesQueryObject": {
      "type": "object",
      "description": "Query parameters to fetch backup summaries.",
      "properties": {
        "type": {
          "description": "Backup management type for this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "BackupProtectedItemCountSummary",
            "BackupProtectionContainerCountSummary"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "BackupProtectedItemCountSummary",
                "value": "BackupProtectedItemCountSummary"
              },
              {
                "name": "BackupProtectionContainerCountSummary",
                "value": "BackupProtectionContainerCountSummary"
              }
            ]
          }
        }
      }
    },
    "BMSContainerQueryObject": {
      "type": "object",
      "description": "The query filters that can be used with the list containers API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "containerType": {
          "description": "Type of container for filter",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "HanaHSRContainer"
          ],
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Unknown",
                "value": "Unknown"
              },
              {
                "name": "IaasVMContainer",
                "value": "IaasVMContainer"
              },
              {
                "name": "IaasVMServiceContainer",
                "value": "IaasVMServiceContainer"
              },
              {
                "name": "DPMContainer",
                "value": "DPMContainer"
              },
              {
                "name": "AzureBackupServerContainer",
                "value": "AzureBackupServerContainer"
              },
              {
                "name": "MABContainer",
                "value": "MABContainer"
              },
              {
                "name": "Cluster",
                "value": "Cluster"
              },
              {
                "name": "AzureSqlContainer",
                "value": "AzureSqlContainer"
              },
              {
                "name": "Windows",
                "value": "Windows"
              },
              {
                "name": "VCenter",
                "value": "VCenter"
              },
              {
                "name": "VMAppContainer",
                "value": "VMAppContainer"
              },
              {
                "name": "SQLAGWorkLoadContainer",
                "value": "SQLAGWorkLoadContainer"
              },
              {
                "name": "StorageContainer",
                "value": "StorageContainer"
              },
              {
                "name": "GenericContainer",
                "value": "GenericContainer"
              },
              {
                "name": "HanaHSRContainer",
                "value": "HanaHSRContainer"
              }
            ]
          }
        },
        "backupEngineName": {
          "type": "string",
          "description": "Backup engine name"
        },
        "fabricName": {
          "type": "string",
          "description": "Fabric name for filter"
        },
        "status": {
          "type": "string",
          "description": "Status of registration of this container with the Recovery Services Vault."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of this container."
        }
      },
      "required": [
        "backupManagementType"
      ]
    },
    "BMSContainersInquiryQueryObject": {
      "type": "object",
      "description": "The query filters that can be used with the inquire container API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Workload type for this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        }
      }
    },
    "BMSRefreshContainersQueryObject": {
      "type": "object",
      "description": "The query filters that can be used with the refresh container API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        }
      }
    },
    "BMSWorkloadItemQueryObject": {
      "type": "object",
      "description": "Filters to list items that can be backed up.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadItemType": {
          "description": "Workload Item type",
          "type": "string",
          "enum": [
            "Invalid",
            "SQLInstance",
            "SQLDataBase",
            "SAPHanaSystem",
            "SAPHanaDatabase",
            "SAPAseSystem",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "SQLInstance",
                "value": "SQLInstance"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "SAPHanaSystem",
                "value": "SAPHanaSystem"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseSystem",
                "value": "SAPAseSystem"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Workload type",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "protectionStatus": {
          "description": "Backup status query parameter.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      }
    },
    "BackupEngineBase": {
      "type": "object",
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup engine."
        },
        "backupManagementType": {
          "description": "Type of backup management for the backup engine.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "registrationStatus": {
          "type": "string",
          "description": "Registration status of the backup engine with the Recovery Services Vault."
        },
        "backupEngineState": {
          "type": "string",
          "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
        },
        "healthStatus": {
          "type": "string",
          "description": "Backup status of the backup engine."
        },
        "backupEngineType": {
          "description": "Type of the backup engine.",
          "type": "string",
          "enum": [
            "Invalid",
            "DpmBackupEngine",
            "AzureBackupServerEngine"
          ],
          "x-ms-enum": {
            "name": "BackupEngineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "DpmBackupEngine",
                "value": "DpmBackupEngine"
              },
              {
                "name": "AzureBackupServerEngine",
                "value": "AzureBackupServerEngine"
              }
            ]
          }
        },
        "canReRegister": {
          "type": "boolean",
          "description": "Flag indicating if the backup engine be registered, once already registered."
        },
        "backupEngineId": {
          "type": "string",
          "description": "ID of the backup engine."
        },
        "dpmVersion": {
          "type": "string",
          "description": "Backup engine version"
        },
        "azureBackupAgentVersion": {
          "type": "string",
          "description": "Backup agent version"
        },
        "isAzureBackupAgentUpgradeAvailable": {
          "type": "boolean",
          "description": "To check if backup agent upgrade available"
        },
        "isDpmUpgradeAvailable": {
          "type": "boolean",
          "description": "To check if backup engine upgrade available"
        },
        "extendedInfo": {
          "description": "Extended info of the backupengine",
          "type": "object",
          "properties": {
            "databaseName": {
              "type": "string",
              "description": "Database name of backup engine."
            },
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of protected items in the backup engine."
            },
            "protectedServersCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of protected servers in the backup engine."
            },
            "diskCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of disks in the backup engine."
            },
            "usedDiskSpace": {
              "type": "number",
              "format": "double",
              "description": "Disk space used in the backup engine."
            },
            "availableDiskSpace": {
              "type": "number",
              "format": "double",
              "description": "Disk space currently available in the backup engine."
            },
            "refreshedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last refresh time in the backup engine."
            },
            "azureProtectedInstances": {
              "type": "integer",
              "format": "int32",
              "description": "Protected instances in the backup engine."
            }
          }
        }
      },
      "discriminator": "backupEngineType",
      "required": [
        "backupEngineType"
      ]
    },
    "BackupEngineBaseResource": {
      "type": "object",
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "BackupEngineBaseResource properties",
          "type": "object",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup engine."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Registration status of the backup engine with the Recovery Services Vault."
            },
            "backupEngineState": {
              "type": "string",
              "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
            },
            "healthStatus": {
              "type": "string",
              "description": "Backup status of the backup engine."
            },
            "backupEngineType": {
              "description": "Type of the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "DpmBackupEngine",
                "AzureBackupServerEngine"
              ],
              "x-ms-enum": {
                "name": "BackupEngineType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "DpmBackupEngine",
                    "value": "DpmBackupEngine"
                  },
                  {
                    "name": "AzureBackupServerEngine",
                    "value": "AzureBackupServerEngine"
                  }
                ]
              }
            },
            "canReRegister": {
              "type": "boolean",
              "description": "Flag indicating if the backup engine be registered, once already registered."
            },
            "backupEngineId": {
              "type": "string",
              "description": "ID of the backup engine."
            },
            "dpmVersion": {
              "type": "string",
              "description": "Backup engine version"
            },
            "azureBackupAgentVersion": {
              "type": "string",
              "description": "Backup agent version"
            },
            "isAzureBackupAgentUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup agent upgrade available"
            },
            "isDpmUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup engine upgrade available"
            },
            "extendedInfo": {
              "description": "Extended info of the backupengine",
              "type": "object",
              "properties": {
                "databaseName": {
                  "type": "string",
                  "description": "Database name of backup engine."
                },
                "protectedItemsCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected items in the backup engine."
                },
                "protectedServersCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected servers in the backup engine."
                },
                "diskCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of disks in the backup engine."
                },
                "usedDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space used in the backup engine."
                },
                "availableDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space currently available in the backup engine."
                },
                "refreshedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last refresh time in the backup engine."
                },
                "azureProtectedInstances": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Protected instances in the backup engine."
                }
              }
            }
          },
          "discriminator": "backupEngineType",
          "required": [
            "backupEngineType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "BackupEngineBaseResourceList": {
      "type": "object",
      "description": "List of BackupEngineBase resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "The base backup engine class. All workload specific backup engines derive from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "BackupEngineBaseResource properties",
                "type": "object",
                "properties": {
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly name of the backup engine."
                  },
                  "backupManagementType": {
                    "description": "Type of backup management for the backup engine.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "registrationStatus": {
                    "type": "string",
                    "description": "Registration status of the backup engine with the Recovery Services Vault."
                  },
                  "backupEngineState": {
                    "type": "string",
                    "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
                  },
                  "healthStatus": {
                    "type": "string",
                    "description": "Backup status of the backup engine."
                  },
                  "backupEngineType": {
                    "description": "Type of the backup engine.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "DpmBackupEngine",
                      "AzureBackupServerEngine"
                    ],
                    "x-ms-enum": {
                      "name": "BackupEngineType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "DpmBackupEngine",
                          "value": "DpmBackupEngine"
                        },
                        {
                          "name": "AzureBackupServerEngine",
                          "value": "AzureBackupServerEngine"
                        }
                      ]
                    }
                  },
                  "canReRegister": {
                    "type": "boolean",
                    "description": "Flag indicating if the backup engine be registered, once already registered."
                  },
                  "backupEngineId": {
                    "type": "string",
                    "description": "ID of the backup engine."
                  },
                  "dpmVersion": {
                    "type": "string",
                    "description": "Backup engine version"
                  },
                  "azureBackupAgentVersion": {
                    "type": "string",
                    "description": "Backup agent version"
                  },
                  "isAzureBackupAgentUpgradeAvailable": {
                    "type": "boolean",
                    "description": "To check if backup agent upgrade available"
                  },
                  "isDpmUpgradeAvailable": {
                    "type": "boolean",
                    "description": "To check if backup engine upgrade available"
                  },
                  "extendedInfo": {
                    "description": "Extended info of the backupengine",
                    "type": "object",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "Database name of backup engine."
                      },
                      "protectedItemsCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of protected items in the backup engine."
                      },
                      "protectedServersCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of protected servers in the backup engine."
                      },
                      "diskCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of disks in the backup engine."
                      },
                      "usedDiskSpace": {
                        "type": "number",
                        "format": "double",
                        "description": "Disk space used in the backup engine."
                      },
                      "availableDiskSpace": {
                        "type": "number",
                        "format": "double",
                        "description": "Disk space currently available in the backup engine."
                      },
                      "refreshedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last refresh time in the backup engine."
                      },
                      "azureProtectedInstances": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Protected instances in the backup engine."
                      }
                    }
                  }
                },
                "discriminator": "backupEngineType",
                "required": [
                  "backupEngineType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "BackupEngineExtendedInfo": {
      "type": "object",
      "description": "Additional information on backup engine.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Database name of backup engine."
        },
        "protectedItemsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of protected items in the backup engine."
        },
        "protectedServersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of protected servers in the backup engine."
        },
        "diskCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks in the backup engine."
        },
        "usedDiskSpace": {
          "type": "number",
          "format": "double",
          "description": "Disk space used in the backup engine."
        },
        "availableDiskSpace": {
          "type": "number",
          "format": "double",
          "description": "Disk space currently available in the backup engine."
        },
        "refreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last refresh time in the backup engine."
        },
        "azureProtectedInstances": {
          "type": "integer",
          "format": "int32",
          "description": "Protected instances in the backup engine."
        }
      }
    },
    "BackupEngineType": {
      "type": "string",
      "description": "Type of the backup engine.",
      "enum": [
        "Invalid",
        "DpmBackupEngine",
        "AzureBackupServerEngine"
      ],
      "x-ms-enum": {
        "name": "BackupEngineType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "DpmBackupEngine",
            "value": "DpmBackupEngine"
          },
          {
            "name": "AzureBackupServerEngine",
            "value": "AzureBackupServerEngine"
          }
        ]
      }
    },
    "BackupFabricResource": {
      "type": "object",
      "description": "Backup Fabric virtual resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the BackupFabricResource",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "BackupItemType": {
      "type": "string",
      "description": "Type of backup items associated with this container.",
      "enum": [
        "Invalid",
        "VM",
        "FileFolder",
        "AzureSqlDb",
        "SQLDB",
        "Exchange",
        "Sharepoint",
        "VMwareVM",
        "SystemState",
        "Client",
        "GenericDataSource",
        "SQLDataBase",
        "AzureFileShare",
        "SAPHanaDatabase",
        "SAPAseDatabase",
        "SAPHanaDBInstance"
      ],
      "x-ms-enum": {
        "name": "BackupItemType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "VM",
            "value": "VM"
          },
          {
            "name": "FileFolder",
            "value": "FileFolder"
          },
          {
            "name": "AzureSqlDb",
            "value": "AzureSqlDb"
          },
          {
            "name": "SQLDB",
            "value": "SQLDB"
          },
          {
            "name": "Exchange",
            "value": "Exchange"
          },
          {
            "name": "Sharepoint",
            "value": "Sharepoint"
          },
          {
            "name": "VMwareVM",
            "value": "VMwareVM"
          },
          {
            "name": "SystemState",
            "value": "SystemState"
          },
          {
            "name": "Client",
            "value": "Client"
          },
          {
            "name": "GenericDataSource",
            "value": "GenericDataSource"
          },
          {
            "name": "SQLDataBase",
            "value": "SQLDataBase"
          },
          {
            "name": "AzureFileShare",
            "value": "AzureFileShare"
          },
          {
            "name": "SAPHanaDatabase",
            "value": "SAPHanaDatabase"
          },
          {
            "name": "SAPAseDatabase",
            "value": "SAPAseDatabase"
          },
          {
            "name": "SAPHanaDBInstance",
            "value": "SAPHanaDBInstance"
          }
        ]
      }
    },
    "BackupManagementType": {
      "type": "string",
      "description": "Backup management type to execute the current job.",
      "enum": [
        "Invalid",
        "AzureIaasVM",
        "MAB",
        "DPM",
        "AzureBackupServer",
        "AzureSql",
        "AzureStorage",
        "AzureWorkload",
        "DefaultBackup"
      ],
      "x-ms-enum": {
        "name": "BackupManagementType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AzureIaasVM",
            "value": "AzureIaasVM"
          },
          {
            "name": "MAB",
            "value": "MAB"
          },
          {
            "name": "DPM",
            "value": "DPM"
          },
          {
            "name": "AzureBackupServer",
            "value": "AzureBackupServer"
          },
          {
            "name": "AzureSql",
            "value": "AzureSql"
          },
          {
            "name": "AzureStorage",
            "value": "AzureStorage"
          },
          {
            "name": "AzureWorkload",
            "value": "AzureWorkload"
          },
          {
            "name": "DefaultBackup",
            "value": "DefaultBackup"
          }
        ]
      }
    },
    "BackupManagementUsage": {
      "type": "object",
      "description": "Backup management usages of a vault.",
      "properties": {
        "unit": {
          "description": "Unit of the usage.",
          "type": "string",
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond"
          ],
          "x-ms-enum": {
            "name": "UsagesUnit",
            "modelAsString": true,
            "values": [
              {
                "name": "Count",
                "value": "Count"
              },
              {
                "name": "Bytes",
                "value": "Bytes"
              },
              {
                "name": "Seconds",
                "value": "Seconds"
              },
              {
                "name": "Percent",
                "value": "Percent"
              },
              {
                "name": "CountPerSecond",
                "value": "CountPerSecond"
              },
              {
                "name": "BytesPerSecond",
                "value": "BytesPerSecond"
              }
            ]
          }
        },
        "quotaPeriod": {
          "type": "string",
          "description": "Quota period of usage."
        },
        "nextResetTime": {
          "type": "string",
          "format": "date-time",
          "description": "Next reset time of usage."
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Current value of usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Limit of usage."
        },
        "name": {
          "description": "Name of usage.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of usage."
            },
            "localizedValue": {
              "type": "string",
              "description": "Localized value of usage."
            }
          }
        }
      }
    },
    "BackupManagementUsageList": {
      "type": "object",
      "description": "Backup management usage for vault.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "The list of backup management usages for the given vault.",
          "items": {
            "type": "object",
            "description": "Backup management usages of a vault.",
            "properties": {
              "unit": {
                "description": "Unit of the usage.",
                "type": "string",
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond"
                ],
                "x-ms-enum": {
                  "name": "UsagesUnit",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Count",
                      "value": "Count"
                    },
                    {
                      "name": "Bytes",
                      "value": "Bytes"
                    },
                    {
                      "name": "Seconds",
                      "value": "Seconds"
                    },
                    {
                      "name": "Percent",
                      "value": "Percent"
                    },
                    {
                      "name": "CountPerSecond",
                      "value": "CountPerSecond"
                    },
                    {
                      "name": "BytesPerSecond",
                      "value": "BytesPerSecond"
                    }
                  ]
                }
              },
              "quotaPeriod": {
                "type": "string",
                "description": "Quota period of usage."
              },
              "nextResetTime": {
                "type": "string",
                "format": "date-time",
                "description": "Next reset time of usage."
              },
              "currentValue": {
                "type": "integer",
                "format": "int64",
                "description": "Current value of usage."
              },
              "limit": {
                "type": "integer",
                "format": "int64",
                "description": "Limit of usage."
              },
              "name": {
                "description": "Name of usage.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of usage."
                  },
                  "localizedValue": {
                    "type": "string",
                    "description": "Localized value of usage."
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BackupRequest": {
      "type": "object",
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupRequestResource": {
      "type": "object",
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "BackupRequestResource properties",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      }
    },
    "BackupResourceConfig": {
      "type": "object",
      "description": "The resource storage details.",
      "properties": {
        "storageModelType": {
          "description": "Storage type",
          "type": "string",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant",
            "ZoneRedundant",
            "ReadAccessGeoZoneRedundant"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "GeoRedundant",
                "value": "GeoRedundant"
              },
              {
                "name": "LocallyRedundant",
                "value": "LocallyRedundant"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              },
              {
                "name": "ReadAccessGeoZoneRedundant",
                "value": "ReadAccessGeoZoneRedundant"
              }
            ]
          }
        },
        "storageType": {
          "description": "Storage type.",
          "type": "string",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant",
            "ZoneRedundant",
            "ReadAccessGeoZoneRedundant"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "GeoRedundant",
                "value": "GeoRedundant"
              },
              {
                "name": "LocallyRedundant",
                "value": "LocallyRedundant"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              },
              {
                "name": "ReadAccessGeoZoneRedundant",
                "value": "ReadAccessGeoZoneRedundant"
              }
            ]
          }
        },
        "storageTypeState": {
          "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
          "type": "string",
          "enum": [
            "Invalid",
            "Locked",
            "Unlocked"
          ],
          "x-ms-enum": {
            "name": "StorageTypeState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Locked",
                "value": "Locked"
              },
              {
                "name": "Unlocked",
                "value": "Unlocked"
              }
            ]
          }
        },
        "crossRegionRestoreFlag": {
          "type": "boolean",
          "description": "Opt in details of Cross Region Restore feature."
        },
        "dedupState": {
          "description": "Vault Dedup state",
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DedupState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "xcoolState": {
          "description": "Vault x-cool state",
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "XcoolState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "BackupResourceConfigResource": {
      "type": "object",
      "description": "The resource storage details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "BackupResourceConfigResource properties",
          "type": "object",
          "properties": {
            "storageModelType": {
              "description": "Storage type",
              "type": "string",
              "enum": [
                "Invalid",
                "GeoRedundant",
                "LocallyRedundant",
                "ZoneRedundant",
                "ReadAccessGeoZoneRedundant"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "GeoRedundant",
                    "value": "GeoRedundant"
                  },
                  {
                    "name": "LocallyRedundant",
                    "value": "LocallyRedundant"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "ReadAccessGeoZoneRedundant",
                    "value": "ReadAccessGeoZoneRedundant"
                  }
                ]
              }
            },
            "storageType": {
              "description": "Storage type.",
              "type": "string",
              "enum": [
                "Invalid",
                "GeoRedundant",
                "LocallyRedundant",
                "ZoneRedundant",
                "ReadAccessGeoZoneRedundant"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "GeoRedundant",
                    "value": "GeoRedundant"
                  },
                  {
                    "name": "LocallyRedundant",
                    "value": "LocallyRedundant"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "ReadAccessGeoZoneRedundant",
                    "value": "ReadAccessGeoZoneRedundant"
                  }
                ]
              }
            },
            "storageTypeState": {
              "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
              "type": "string",
              "enum": [
                "Invalid",
                "Locked",
                "Unlocked"
              ],
              "x-ms-enum": {
                "name": "StorageTypeState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Locked",
                    "value": "Locked"
                  },
                  {
                    "name": "Unlocked",
                    "value": "Unlocked"
                  }
                ]
              }
            },
            "crossRegionRestoreFlag": {
              "type": "boolean",
              "description": "Opt in details of Cross Region Restore feature."
            },
            "dedupState": {
              "description": "Vault Dedup state",
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "DedupState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "xcoolState": {
              "description": "Vault x-cool state",
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "XcoolState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "BackupResourceEncryptionConfig": {
      "type": "object",
      "properties": {
        "encryptionAtRestType": {
          "description": "Encryption At Rest Type",
          "type": "string",
          "enum": [
            "Invalid",
            "MicrosoftManaged",
            "CustomerManaged"
          ],
          "x-ms-enum": {
            "name": "EncryptionAtRestType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "MicrosoftManaged",
                "value": "MicrosoftManaged"
              },
              {
                "name": "CustomerManaged",
                "value": "CustomerManaged"
              }
            ]
          }
        },
        "keyUri": {
          "type": "string",
          "description": "Key Vault Key URI"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Key Vault Subscription Id"
        },
        "lastUpdateStatus": {
          "type": "string",
          "enum": [
            "Invalid",
            "NotEnabled",
            "PartiallySucceeded",
            "PartiallyFailed",
            "Failed",
            "Succeeded",
            "Initialized",
            "FirstInitialization"
          ],
          "x-ms-enum": {
            "name": "LastUpdateStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotEnabled",
                "value": "NotEnabled"
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded"
              },
              {
                "name": "PartiallyFailed",
                "value": "PartiallyFailed"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Initialized",
                "value": "Initialized"
              },
              {
                "name": "FirstInitialization",
                "value": "FirstInitialization"
              }
            ]
          }
        },
        "infrastructureEncryptionState": {
          "type": "string",
          "enum": [
            "Invalid",
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "InfrastructureEncryptionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              }
            ]
          }
        }
      }
    },
    "BackupResourceEncryptionConfigExtended": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "User Assigned Identity Id"
        },
        "useSystemAssignedIdentity": {
          "type": "boolean",
          "description": "bool to indicate whether to use system Assigned Identity or not"
        }
      },
      "allOf": [
        {
          "type": "object",
          "properties": {
            "encryptionAtRestType": {
              "description": "Encryption At Rest Type",
              "type": "string",
              "enum": [
                "Invalid",
                "MicrosoftManaged",
                "CustomerManaged"
              ],
              "x-ms-enum": {
                "name": "EncryptionAtRestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged"
                  },
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged"
                  }
                ]
              }
            },
            "keyUri": {
              "type": "string",
              "description": "Key Vault Key URI"
            },
            "subscriptionId": {
              "type": "string",
              "description": "Key Vault Subscription Id"
            },
            "lastUpdateStatus": {
              "type": "string",
              "enum": [
                "Invalid",
                "NotEnabled",
                "PartiallySucceeded",
                "PartiallyFailed",
                "Failed",
                "Succeeded",
                "Initialized",
                "FirstInitialization"
              ],
              "x-ms-enum": {
                "name": "LastUpdateStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotEnabled",
                    "value": "NotEnabled"
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded"
                  },
                  {
                    "name": "PartiallyFailed",
                    "value": "PartiallyFailed"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized"
                  },
                  {
                    "name": "FirstInitialization",
                    "value": "FirstInitialization"
                  }
                ]
              }
            },
            "infrastructureEncryptionState": {
              "type": "string",
              "enum": [
                "Invalid",
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "InfrastructureEncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "BackupResourceEncryptionConfigExtendedResource": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "BackupResourceEncryptionConfigExtendedResource properties",
          "type": "object",
          "properties": {
            "encryptionAtRestType": {
              "description": "Encryption At Rest Type",
              "type": "string",
              "enum": [
                "Invalid",
                "MicrosoftManaged",
                "CustomerManaged"
              ],
              "x-ms-enum": {
                "name": "EncryptionAtRestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged"
                  },
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged"
                  }
                ]
              }
            },
            "keyUri": {
              "type": "string",
              "description": "Key Vault Key URI"
            },
            "subscriptionId": {
              "type": "string",
              "description": "Key Vault Subscription Id"
            },
            "lastUpdateStatus": {
              "type": "string",
              "enum": [
                "Invalid",
                "NotEnabled",
                "PartiallySucceeded",
                "PartiallyFailed",
                "Failed",
                "Succeeded",
                "Initialized",
                "FirstInitialization"
              ],
              "x-ms-enum": {
                "name": "LastUpdateStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotEnabled",
                    "value": "NotEnabled"
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded"
                  },
                  {
                    "name": "PartiallyFailed",
                    "value": "PartiallyFailed"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized"
                  },
                  {
                    "name": "FirstInitialization",
                    "value": "FirstInitialization"
                  }
                ]
              }
            },
            "infrastructureEncryptionState": {
              "type": "string",
              "enum": [
                "Invalid",
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "InfrastructureEncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "userAssignedIdentity": {
              "type": "string",
              "description": "User Assigned Identity Id"
            },
            "useSystemAssignedIdentity": {
              "type": "boolean",
              "description": "bool to indicate whether to use system Assigned Identity or not"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "BackupResourceEncryptionConfigResource": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "encryptionAtRestType": {
              "description": "Encryption At Rest Type",
              "type": "string",
              "enum": [
                "Invalid",
                "MicrosoftManaged",
                "CustomerManaged"
              ],
              "x-ms-enum": {
                "name": "EncryptionAtRestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged"
                  },
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged"
                  }
                ]
              }
            },
            "keyUri": {
              "type": "string",
              "description": "Key Vault Key URI"
            },
            "subscriptionId": {
              "type": "string",
              "description": "Key Vault Subscription Id"
            },
            "lastUpdateStatus": {
              "type": "string",
              "enum": [
                "Invalid",
                "NotEnabled",
                "PartiallySucceeded",
                "PartiallyFailed",
                "Failed",
                "Succeeded",
                "Initialized",
                "FirstInitialization"
              ],
              "x-ms-enum": {
                "name": "LastUpdateStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotEnabled",
                    "value": "NotEnabled"
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded"
                  },
                  {
                    "name": "PartiallyFailed",
                    "value": "PartiallyFailed"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Initialized",
                    "value": "Initialized"
                  },
                  {
                    "name": "FirstInitialization",
                    "value": "FirstInitialization"
                  }
                ]
              }
            },
            "infrastructureEncryptionState": {
              "type": "string",
              "enum": [
                "Invalid",
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "InfrastructureEncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            }
          },
          "description": "BackupResourceEncryptionConfigResource properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "BackupResourceVaultConfig": {
      "type": "object",
      "description": "Backup resource vault config details.",
      "properties": {
        "storageModelType": {
          "description": "Storage type.",
          "type": "string",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant",
            "ZoneRedundant",
            "ReadAccessGeoZoneRedundant"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "GeoRedundant",
                "value": "GeoRedundant"
              },
              {
                "name": "LocallyRedundant",
                "value": "LocallyRedundant"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              },
              {
                "name": "ReadAccessGeoZoneRedundant",
                "value": "ReadAccessGeoZoneRedundant"
              }
            ]
          }
        },
        "storageType": {
          "description": "Storage type.",
          "type": "string",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant",
            "ZoneRedundant",
            "ReadAccessGeoZoneRedundant"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "GeoRedundant",
                "value": "GeoRedundant"
              },
              {
                "name": "LocallyRedundant",
                "value": "LocallyRedundant"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              },
              {
                "name": "ReadAccessGeoZoneRedundant",
                "value": "ReadAccessGeoZoneRedundant"
              }
            ]
          }
        },
        "storageTypeState": {
          "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
          "type": "string",
          "enum": [
            "Invalid",
            "Locked",
            "Unlocked"
          ],
          "x-ms-enum": {
            "name": "StorageTypeState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Locked",
                "value": "Locked"
              },
              {
                "name": "Unlocked",
                "value": "Unlocked"
              }
            ]
          }
        },
        "enhancedSecurityState": {
          "description": "Enabled or Disabled.",
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnhancedSecurityState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "softDeleteFeatureState": {
          "description": "Soft Delete feature state",
          "type": "string",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled",
            "AlwaysON"
          ],
          "x-ms-enum": {
            "name": "SoftDeleteFeatureState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "AlwaysON",
                "value": "AlwaysON"
              }
            ]
          }
        },
        "softDeleteRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Soft delete retention period in days"
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuard Operation Requests",
          "items": {
            "type": "string"
          }
        },
        "isSoftDeleteFeatureStateEditable": {
          "type": "boolean",
          "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
        }
      }
    },
    "BackupResourceVaultConfigResource": {
      "type": "object",
      "description": "Backup resource vault config details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "BackupResourceVaultConfigResource properties",
          "type": "object",
          "properties": {
            "storageModelType": {
              "description": "Storage type.",
              "type": "string",
              "enum": [
                "Invalid",
                "GeoRedundant",
                "LocallyRedundant",
                "ZoneRedundant",
                "ReadAccessGeoZoneRedundant"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "GeoRedundant",
                    "value": "GeoRedundant"
                  },
                  {
                    "name": "LocallyRedundant",
                    "value": "LocallyRedundant"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "ReadAccessGeoZoneRedundant",
                    "value": "ReadAccessGeoZoneRedundant"
                  }
                ]
              }
            },
            "storageType": {
              "description": "Storage type.",
              "type": "string",
              "enum": [
                "Invalid",
                "GeoRedundant",
                "LocallyRedundant",
                "ZoneRedundant",
                "ReadAccessGeoZoneRedundant"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "GeoRedundant",
                    "value": "GeoRedundant"
                  },
                  {
                    "name": "LocallyRedundant",
                    "value": "LocallyRedundant"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "ReadAccessGeoZoneRedundant",
                    "value": "ReadAccessGeoZoneRedundant"
                  }
                ]
              }
            },
            "storageTypeState": {
              "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
              "type": "string",
              "enum": [
                "Invalid",
                "Locked",
                "Unlocked"
              ],
              "x-ms-enum": {
                "name": "StorageTypeState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Locked",
                    "value": "Locked"
                  },
                  {
                    "name": "Unlocked",
                    "value": "Unlocked"
                  }
                ]
              }
            },
            "enhancedSecurityState": {
              "description": "Enabled or Disabled.",
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnhancedSecurityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "softDeleteFeatureState": {
              "description": "Soft Delete feature state",
              "type": "string",
              "enum": [
                "Invalid",
                "Enabled",
                "Disabled",
                "AlwaysON"
              ],
              "x-ms-enum": {
                "name": "SoftDeleteFeatureState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "AlwaysON",
                    "value": "AlwaysON"
                  }
                ]
              }
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            },
            "isSoftDeleteFeatureStateEditable": {
              "type": "boolean",
              "description": "This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "BackupStatusRequest": {
      "type": "object",
      "description": "BackupStatus request.",
      "properties": {
        "resourceType": {
          "description": "Container Type - VM, SQLPaaS, DPM, AzureFileShare...",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "resourceId": {
          "type": "string",
          "description": "Entire ARM resource id of the resource"
        },
        "poLogicalName": {
          "type": "string",
          "description": "Protectable Item Logical Name"
        }
      }
    },
    "BackupStatusResponse": {
      "type": "object",
      "description": "BackupStatus response.",
      "properties": {
        "protectionStatus": {
          "description": "Specifies whether the container is registered or not",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        },
        "vaultId": {
          "type": "string",
          "description": "Specifies the arm resource id of the vault"
        },
        "fabricName": {
          "description": "Specifies the fabric name - Azure or AD",
          "type": "string",
          "enum": [
            "Invalid",
            "Azure"
          ],
          "x-ms-enum": {
            "name": "FabricName",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Azure",
                "value": "Azure"
              }
            ]
          }
        },
        "containerName": {
          "type": "string",
          "description": "Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname."
        },
        "protectedItemName": {
          "type": "string",
          "description": "Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname."
        },
        "errorCode": {
          "type": "string",
          "description": "ErrorCode in case of intent failed"
        },
        "errorMessage": {
          "type": "string",
          "description": "ErrorMessage in case of intent failed."
        },
        "policyName": {
          "type": "string",
          "description": "Specifies the policy name which is used for protection"
        },
        "registrationStatus": {
          "type": "string",
          "description": "Container registration status"
        },
        "protectedItemsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of protected items"
        },
        "acquireStorageAccountLock": {
          "description": "Specifies whether the storage account lock has been acquired or not",
          "type": "string",
          "enum": [
            "Acquire",
            "NotAcquire"
          ],
          "x-ms-enum": {
            "name": "AcquireStorageAccountLock",
            "modelAsString": true,
            "values": [
              {
                "name": "Acquire",
                "value": "Acquire"
              },
              {
                "name": "NotAcquire",
                "value": "NotAcquire"
              }
            ]
          }
        }
      }
    },
    "BackupType": {
      "type": "string",
      "description": "Type of backup, viz. Full, Differential, Log or CopyOnlyFull",
      "enum": [
        "Invalid",
        "Full",
        "Differential",
        "Log",
        "CopyOnlyFull",
        "Incremental",
        "SnapshotFull",
        "SnapshotCopyOnlyFull"
      ],
      "x-ms-enum": {
        "name": "BackupType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Full",
            "value": "Full"
          },
          {
            "name": "Differential",
            "value": "Differential"
          },
          {
            "name": "Log",
            "value": "Log"
          },
          {
            "name": "CopyOnlyFull",
            "value": "CopyOnlyFull"
          },
          {
            "name": "Incremental",
            "value": "Incremental"
          },
          {
            "name": "SnapshotFull",
            "value": "SnapshotFull"
          },
          {
            "name": "SnapshotCopyOnlyFull",
            "value": "SnapshotCopyOnlyFull"
          }
        ]
      }
    },
    "BmspoQueryObject": {
      "type": "object",
      "description": "Filters to list items that can be backed up.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Workload type",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "containerName": {
          "type": "string",
          "description": "Full name of the container whose Protectable Objects should be returned."
        },
        "status": {
          "type": "string",
          "description": "Backup status query parameter."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name."
        }
      }
    },
    "BmsrpQueryObject": {
      "type": "object",
      "description": "Filters to list backup copies.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Backup copies created after this time."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Backup copies created before this time."
        },
        "restorePointQueryType": {
          "description": "RestorePoint type",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "FullAndDifferential",
            "All",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "RestorePointQueryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "FullAndDifferential",
                "value": "FullAndDifferential"
              },
              {
                "name": "All",
                "value": "All"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "extendedInfo": {
          "type": "boolean",
          "description": "In Get Recovery Point, it tells whether extended information about recovery point is asked."
        },
        "moveReadyRPOnly": {
          "type": "boolean",
          "description": "Whether the RP can be moved to another tier"
        },
        "includeSoftDeletedRP": {
          "type": "boolean",
          "description": "Flag to indicate whether Soft Deleted RPs should be included/excluded from result."
        }
      }
    },
    "ClientScriptForConnect": {
      "type": "object",
      "description": "Client script details for file / folder restore.",
      "properties": {
        "scriptContent": {
          "type": "string",
          "description": "File content of the client script for file / folder restore."
        },
        "scriptExtension": {
          "type": "string",
          "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc."
        },
        "osType": {
          "type": "string",
          "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works."
        },
        "url": {
          "type": "string",
          "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used"
        },
        "scriptNameSuffix": {
          "type": "string",
          "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\nIf its null or empty then , ignore it."
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the Container Instance service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "code"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "type": "object",
            "description": "The resource management error additional info.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The additional info type.",
                "readOnly": true
              },
              "info": {
                "type": "object",
                "description": "The additional info.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ContainerIdentityInfo": {
      "type": "object",
      "description": "Container identity information",
      "properties": {
        "uniqueName": {
          "type": "string",
          "description": "Unique name of the container"
        },
        "aadTenantId": {
          "type": "string",
          "description": "Protection container identity - AAD Tenant"
        },
        "servicePrincipalClientId": {
          "type": "string",
          "description": "Protection container identity - AAD Service Principal"
        },
        "audience": {
          "type": "string",
          "description": "Protection container identity - Audience"
        }
      }
    },
    "ContainerType": {
      "type": "string",
      "description": "Type of container for filter",
      "enum": [
        "Invalid",
        "Unknown",
        "IaasVMContainer",
        "IaasVMServiceContainer",
        "DPMContainer",
        "AzureBackupServerContainer",
        "MABContainer",
        "Cluster",
        "AzureSqlContainer",
        "Windows",
        "VCenter",
        "VMAppContainer",
        "SQLAGWorkLoadContainer",
        "StorageContainer",
        "GenericContainer",
        "HanaHSRContainer"
      ],
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "IaasVMContainer",
            "value": "IaasVMContainer"
          },
          {
            "name": "IaasVMServiceContainer",
            "value": "IaasVMServiceContainer"
          },
          {
            "name": "DPMContainer",
            "value": "DPMContainer"
          },
          {
            "name": "AzureBackupServerContainer",
            "value": "AzureBackupServerContainer"
          },
          {
            "name": "MABContainer",
            "value": "MABContainer"
          },
          {
            "name": "Cluster",
            "value": "Cluster"
          },
          {
            "name": "AzureSqlContainer",
            "value": "AzureSqlContainer"
          },
          {
            "name": "Windows",
            "value": "Windows"
          },
          {
            "name": "VCenter",
            "value": "VCenter"
          },
          {
            "name": "VMAppContainer",
            "value": "VMAppContainer"
          },
          {
            "name": "SQLAGWorkLoadContainer",
            "value": "SQLAGWorkLoadContainer"
          },
          {
            "name": "StorageContainer",
            "value": "StorageContainer"
          },
          {
            "name": "GenericContainer",
            "value": "GenericContainer"
          },
          {
            "name": "HanaHSRContainer",
            "value": "HanaHSRContainer"
          }
        ]
      }
    },
    "CopyOptions": {
      "type": "string",
      "description": "Options to resolve copy conflicts.",
      "enum": [
        "Invalid",
        "CreateCopy",
        "Skip",
        "Overwrite",
        "FailOnConflict"
      ],
      "x-ms-enum": {
        "name": "CopyOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "CreateCopy",
            "value": "CreateCopy"
          },
          {
            "name": "Skip",
            "value": "Skip"
          },
          {
            "name": "Overwrite",
            "value": "Overwrite"
          },
          {
            "name": "FailOnConflict",
            "value": "FailOnConflict"
          }
        ]
      }
    },
    "CreateMode": {
      "type": "string",
      "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
      "enum": [
        "Invalid",
        "Default",
        "Recover"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Recover",
            "value": "Recover"
          }
        ]
      }
    },
    "DPMContainerExtendedInfo": {
      "type": "object",
      "description": "Additional information of the DPMContainer.",
      "properties": {
        "lastRefreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last refresh time of the DPMContainer."
        }
      }
    },
    "DPMProtectedItem": {
      "type": "object",
      "description": "Additional information on Backup engine specific backup item.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the managed item"
        },
        "backupEngineName": {
          "type": "string",
          "description": "Backup Management server protecting this backup item"
        },
        "protectionState": {
          "description": "Protection state of the backup engine",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectedItemState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "extendedInfo": {
          "description": "Extended info of the backup item.",
          "type": "object",
          "properties": {
            "protectableObjectLoadPath": {
              "type": "object",
              "description": "Attribute to provide information on various DBs.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "protected": {
              "type": "boolean",
              "description": "To check if backup item is disk protected."
            },
            "isPresentOnCloud": {
              "type": "boolean",
              "description": "To check if backup item is cloud protected."
            },
            "lastBackupStatus": {
              "type": "string",
              "description": "Last backup status information on backup item."
            },
            "lastRefreshedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last refresh time on backup item."
            },
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Oldest cloud recovery point time."
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "cloud recovery point count."
            },
            "onPremiseOldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Oldest disk recovery point time."
            },
            "onPremiseLatestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "latest disk recovery point time."
            },
            "onPremiseRecoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "disk recovery point count."
            },
            "isCollocated": {
              "type": "boolean",
              "description": "To check if backup item is collocated."
            },
            "protectionGroupName": {
              "type": "string",
              "description": "Protection group name of the backup item."
            },
            "diskStorageUsedInBytes": {
              "type": "string",
              "description": "Used Disk storage in bytes."
            },
            "totalDiskStorageSizeInBytes": {
              "type": "string",
              "description": "total Disk storage in bytes."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup items.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DPMProtectedItem"
    },
    "DPMProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information of DPM Protected item.",
      "properties": {
        "protectableObjectLoadPath": {
          "type": "object",
          "description": "Attribute to provide information on various DBs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protected": {
          "type": "boolean",
          "description": "To check if backup item is disk protected."
        },
        "isPresentOnCloud": {
          "type": "boolean",
          "description": "To check if backup item is cloud protected."
        },
        "lastBackupStatus": {
          "type": "string",
          "description": "Last backup status information on backup item."
        },
        "lastRefreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last refresh time on backup item."
        },
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "Oldest cloud recovery point time."
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "cloud recovery point count."
        },
        "onPremiseOldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "Oldest disk recovery point time."
        },
        "onPremiseLatestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "latest disk recovery point time."
        },
        "onPremiseRecoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "disk recovery point count."
        },
        "isCollocated": {
          "type": "boolean",
          "description": "To check if backup item is collocated."
        },
        "protectionGroupName": {
          "type": "string",
          "description": "Protection group name of the backup item."
        },
        "diskStorageUsedInBytes": {
          "type": "string",
          "description": "Used Disk storage in bytes."
        },
        "totalDiskStorageSizeInBytes": {
          "type": "string",
          "description": "total Disk storage in bytes."
        }
      }
    },
    "DailyRetentionFormat": {
      "type": "object",
      "description": "Daily retention format.",
      "properties": {
        "daysOfTheMonth": {
          "type": "array",
          "description": "List of days of the month.",
          "items": {
            "type": "object",
            "description": "Day of the week.",
            "properties": {
              "date": {
                "type": "integer",
                "format": "int32",
                "description": "Date of the month"
              },
              "isLast": {
                "type": "boolean",
                "description": "Whether Date is last date of month"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DailyRetentionSchedule": {
      "type": "object",
      "description": "Daily retention schedule.",
      "properties": {
        "retentionTimes": {
          "type": "array",
          "description": "Retention times of retention policy.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "retentionDuration": {
          "description": "Retention duration of retention Policy.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
            },
            "durationType": {
              "description": "Retention duration type of retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Days",
                "Weeks",
                "Months",
                "Years"
              ],
              "x-ms-enum": {
                "name": "RetentionDurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Days",
                    "value": "Days"
                  },
                  {
                    "name": "Weeks",
                    "value": "Weeks"
                  },
                  {
                    "name": "Months",
                    "value": "Months"
                  },
                  {
                    "name": "Years",
                    "value": "Years"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "DailySchedule": {
      "type": "object",
      "properties": {
        "scheduleRunTimes": {
          "type": "array",
          "description": "List of times of day this schedule has to be run.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "DataMoveLevel": {
      "type": "string",
      "description": "DataMove Level",
      "enum": [
        "Invalid",
        "Vault",
        "Container"
      ],
      "x-ms-enum": {
        "name": "DataMoveLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Vault",
            "value": "Vault"
          },
          {
            "name": "Container",
            "value": "Container"
          }
        ]
      }
    },
    "DataSourceType": {
      "type": "string",
      "description": "Type of workload this item represents.",
      "enum": [
        "Invalid",
        "VM",
        "FileFolder",
        "AzureSqlDb",
        "SQLDB",
        "Exchange",
        "Sharepoint",
        "VMwareVM",
        "SystemState",
        "Client",
        "GenericDataSource",
        "SQLDataBase",
        "AzureFileShare",
        "SAPHanaDatabase",
        "SAPAseDatabase",
        "SAPHanaDBInstance"
      ],
      "x-ms-enum": {
        "name": "DataSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "VM",
            "value": "VM"
          },
          {
            "name": "FileFolder",
            "value": "FileFolder"
          },
          {
            "name": "AzureSqlDb",
            "value": "AzureSqlDb"
          },
          {
            "name": "SQLDB",
            "value": "SQLDB"
          },
          {
            "name": "Exchange",
            "value": "Exchange"
          },
          {
            "name": "Sharepoint",
            "value": "Sharepoint"
          },
          {
            "name": "VMwareVM",
            "value": "VMwareVM"
          },
          {
            "name": "SystemState",
            "value": "SystemState"
          },
          {
            "name": "Client",
            "value": "Client"
          },
          {
            "name": "GenericDataSource",
            "value": "GenericDataSource"
          },
          {
            "name": "SQLDataBase",
            "value": "SQLDataBase"
          },
          {
            "name": "AzureFileShare",
            "value": "AzureFileShare"
          },
          {
            "name": "SAPHanaDatabase",
            "value": "SAPHanaDatabase"
          },
          {
            "name": "SAPAseDatabase",
            "value": "SAPAseDatabase"
          },
          {
            "name": "SAPHanaDBInstance",
            "value": "SAPHanaDBInstance"
          }
        ]
      }
    },
    "Day": {
      "type": "object",
      "description": "Day of the week.",
      "properties": {
        "date": {
          "type": "integer",
          "format": "int32",
          "description": "Date of the month"
        },
        "isLast": {
          "type": "boolean",
          "description": "Whether Date is last date of month"
        }
      }
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": false
      }
    },
    "DedupState": {
      "type": "string",
      "description": "Vault Dedup state",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DedupState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "DiskExclusionProperties": {
      "type": "object",
      "properties": {
        "diskLunList": {
          "type": "array",
          "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isInclusionList": {
          "type": "boolean",
          "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup."
        }
      }
    },
    "DiskInformation": {
      "type": "object",
      "description": "Disk information",
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DistributedNodesInfo": {
      "type": "object",
      "description": "This is used to represent the various nodes of the distributed container.",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the node under a distributed container."
        },
        "status": {
          "type": "string",
          "description": "Status of this Node.\nFailed | Succeeded"
        },
        "errorDetail": {
          "type": "object",
          "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "Error Message related to the Code.",
              "readOnly": true
            },
            "recommendations": {
              "type": "array",
              "description": "List of recommendation strings.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM resource id of the node"
        }
      }
    },
    "DpmBackupEngine": {
      "type": "object",
      "description": "Data Protection Manager (DPM) specific backup engine.",
      "allOf": [
        {
          "type": "object",
          "description": "The base backup engine class. All workload specific backup engines derive from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup engine."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Registration status of the backup engine with the Recovery Services Vault."
            },
            "backupEngineState": {
              "type": "string",
              "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}"
            },
            "healthStatus": {
              "type": "string",
              "description": "Backup status of the backup engine."
            },
            "backupEngineType": {
              "description": "Type of the backup engine.",
              "type": "string",
              "enum": [
                "Invalid",
                "DpmBackupEngine",
                "AzureBackupServerEngine"
              ],
              "x-ms-enum": {
                "name": "BackupEngineType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "DpmBackupEngine",
                    "value": "DpmBackupEngine"
                  },
                  {
                    "name": "AzureBackupServerEngine",
                    "value": "AzureBackupServerEngine"
                  }
                ]
              }
            },
            "canReRegister": {
              "type": "boolean",
              "description": "Flag indicating if the backup engine be registered, once already registered."
            },
            "backupEngineId": {
              "type": "string",
              "description": "ID of the backup engine."
            },
            "dpmVersion": {
              "type": "string",
              "description": "Backup engine version"
            },
            "azureBackupAgentVersion": {
              "type": "string",
              "description": "Backup agent version"
            },
            "isAzureBackupAgentUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup agent upgrade available"
            },
            "isDpmUpgradeAvailable": {
              "type": "boolean",
              "description": "To check if backup engine upgrade available"
            },
            "extendedInfo": {
              "description": "Extended info of the backupengine",
              "type": "object",
              "properties": {
                "databaseName": {
                  "type": "string",
                  "description": "Database name of backup engine."
                },
                "protectedItemsCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected items in the backup engine."
                },
                "protectedServersCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of protected servers in the backup engine."
                },
                "diskCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of disks in the backup engine."
                },
                "usedDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space used in the backup engine."
                },
                "availableDiskSpace": {
                  "type": "number",
                  "format": "double",
                  "description": "Disk space currently available in the backup engine."
                },
                "refreshedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last refresh time in the backup engine."
                },
                "azureProtectedInstances": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Protected instances in the backup engine."
                }
              }
            }
          },
          "discriminator": "backupEngineType",
          "required": [
            "backupEngineType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DpmBackupEngine"
    },
    "DpmContainer": {
      "type": "object",
      "description": "DPM workload-specific protection container.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "backupManagementType": {
          "description": "Type of backup management for the container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "registrationStatus": {
          "type": "string",
          "description": "Status of registration of the container with the Recovery Services Vault."
        },
        "healthStatus": {
          "type": "string",
          "description": "Status of health of the container."
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "Microsoft.ClassicCompute/virtualMachines",
            "Microsoft.Compute/virtualMachines",
            "AzureWorkloadContainer"
          ],
          "x-ms-enum": {
            "name": "ProtectableContainerType",
            "modelAsString": false
          }
        },
        "protectableObjectType": {
          "type": "string",
          "description": "Type of the protectable object associated with this container"
        },
        "canReRegister": {
          "type": "boolean",
          "description": "Specifies whether the container is re-registrable."
        },
        "containerId": {
          "type": "string",
          "description": "ID of container."
        },
        "protectedItemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of protected items in the BackupEngine"
        },
        "dpmAgentVersion": {
          "type": "string",
          "description": "Backup engine Agent version"
        },
        "dpmServers": {
          "type": "array",
          "description": "List of BackupEngines protecting the container",
          "items": {
            "type": "string"
          }
        },
        "upgradeAvailable": {
          "type": "boolean",
          "description": "To check if upgrade available"
        },
        "protectionStatus": {
          "type": "string",
          "description": "Protection status of the container."
        },
        "extendedInfo": {
          "description": "Extended Info of the container.",
          "type": "object",
          "properties": {
            "lastRefreshedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last refresh time of the DPMContainer."
            }
          }
        }
      },
      "x-ms-discriminator-value": "DPMContainer"
    },
    "DpmErrorInfo": {
      "type": "object",
      "description": "DPM workload-specific error information.",
      "properties": {
        "errorString": {
          "type": "string",
          "description": "Localized error string."
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DpmJob": {
      "type": "object",
      "description": "DPM workload-specific job object.",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed for job."
        },
        "dpmServerName": {
          "type": "string",
          "description": "DPM server name managing the backup item or backup job."
        },
        "containerName": {
          "type": "string",
          "description": "Name of cluster/server protecting current backup item, if any."
        },
        "containerType": {
          "type": "string",
          "description": "Type of container."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of backup item."
        },
        "actionsInfo": {
          "type": "array",
          "description": "The state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "The errors.",
          "items": {
            "type": "object",
            "description": "DPM workload-specific error information.",
            "properties": {
              "errorString": {
                "type": "string",
                "description": "Localized error string."
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "extendedInfo": {
          "description": "Additional information for this job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks associated with this job.",
              "items": {
                "type": "object",
                "description": "DPM workload-specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time."
                  },
                  "duration": {
                    "type": "string",
                    "format": "duration",
                    "description": "Time elapsed for task."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "The job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message on job execution."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DpmJob"
    },
    "DpmJobExtendedInfo": {
      "type": "object",
      "description": "Additional information on the DPM workload-specific job.",
      "properties": {
        "tasksList": {
          "type": "array",
          "description": "List of tasks associated with this job.",
          "items": {
            "type": "object",
            "description": "DPM workload-specific job task details.",
            "properties": {
              "taskId": {
                "type": "string",
                "description": "The task display name."
              },
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "The start time."
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "The end time."
              },
              "duration": {
                "type": "string",
                "format": "duration",
                "description": "Time elapsed for task."
              },
              "status": {
                "type": "string",
                "description": "The status."
              }
            }
          },
          "x-ms-identifiers": [
            "taskId"
          ]
        },
        "propertyBag": {
          "type": "object",
          "description": "The job properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "type": "string",
          "description": "Non localized error message on job execution."
        }
      }
    },
    "DpmJobTaskDetails": {
      "type": "object",
      "description": "DPM workload-specific job task details.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The task display name."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed for task."
        },
        "status": {
          "type": "string",
          "description": "The status."
        }
      }
    },
    "EncryptionAtRestType": {
      "type": "string",
      "description": "Encryption At Rest Type",
      "enum": [
        "Invalid",
        "MicrosoftManaged",
        "CustomerManaged"
      ],
      "x-ms-enum": {
        "name": "EncryptionAtRestType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "MicrosoftManaged",
            "value": "MicrosoftManaged"
          },
          {
            "name": "CustomerManaged",
            "value": "CustomerManaged"
          }
        ]
      }
    },
    "EncryptionDetails": {
      "type": "object",
      "description": "Details needed if the VM was encrypted at the time of backup.",
      "properties": {
        "encryptionEnabled": {
          "type": "boolean",
          "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup."
        },
        "kekUrl": {
          "type": "string",
          "description": "Key Url."
        },
        "secretKeyUrl": {
          "type": "string",
          "description": "Secret Url."
        },
        "kekVaultId": {
          "type": "string",
          "description": "ID of Key Vault where KEK is stored."
        },
        "secretKeyVaultId": {
          "type": "string",
          "description": "ID of Key Vault where Secret is stored."
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error Message related to the Code.",
          "readOnly": true
        },
        "recommendations": {
          "type": "array",
          "description": "List of recommendation strings.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ExportJobsOperationResultInfo": {
      "type": "object",
      "description": "This class is used to send blob details after exporting jobs.",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "URL of the blob into which the serialized string of list of jobs is exported."
        },
        "blobSasKey": {
          "type": "string",
          "description": "SAS key to access the blob. It expires in 15 mins."
        },
        "excelFileBlobUrl": {
          "type": "string",
          "description": "URL of the blob into which the ExcelFile is uploaded."
        },
        "excelFileBlobSasKey": {
          "type": "string",
          "description": "SAS key to access the blob. It expires in 15 mins."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for operation result info.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ExportJobsOperationResultInfo"
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location of Recovery point where VM was present.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the extended location."
        },
        "type": {
          "type": "string",
          "description": "Type of the extended location. Possible values include: 'EdgeZone'"
        }
      }
    },
    "ExtendedProperties": {
      "type": "object",
      "description": "Extended Properties for Azure IaasVM Backup.",
      "properties": {
        "diskExclusionProperties": {
          "description": "Extended Properties for Disk Exclusion.",
          "type": "object",
          "properties": {
            "diskLunList": {
              "type": "array",
              "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "isInclusionList": {
              "type": "boolean",
              "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup."
            }
          }
        },
        "linuxVmApplicationName": {
          "type": "string",
          "description": "Linux VM name"
        }
      }
    },
    "FabricName": {
      "type": "string",
      "description": "Specifies the fabric name - Azure or AD",
      "enum": [
        "Invalid",
        "Azure"
      ],
      "x-ms-enum": {
        "name": "FabricName",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Azure",
            "value": "Azure"
          }
        ]
      }
    },
    "FeatureSupportRequest": {
      "type": "object",
      "description": "Base class for feature request",
      "properties": {
        "featureType": {
          "type": "string",
          "description": "backup support feature type."
        }
      },
      "discriminator": "featureType",
      "required": [
        "featureType"
      ]
    },
    "FetchTieringCostInfoForRehydrationRequest": {
      "type": "object",
      "description": "Request parameters for fetching cost info of rehydration",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Name of the protected item container"
        },
        "protectedItemName": {
          "type": "string",
          "description": "Name of the protectedItemName"
        },
        "recoveryPointId": {
          "type": "string",
          "description": "ID of the backup copy for rehydration cost info needs to be fetched."
        },
        "rehydrationPriority": {
          "description": "Rehydration Priority",
          "type": "string",
          "enum": [
            "Standard",
            "High"
          ],
          "x-ms-enum": {
            "name": "RehydrationPriority",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "High",
                "value": "High"
              }
            ]
          }
        }
      },
      "required": [
        "containerName",
        "protectedItemName",
        "recoveryPointId",
        "rehydrationPriority"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
          "properties": {
            "sourceTierType": {
              "description": "Source tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "targetTierType": {
              "description": "target tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "sourceTierType",
            "targetTierType",
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "FetchTieringCostInfoForRehydrationRequest"
    },
    "FetchTieringCostInfoRequest": {
      "type": "object",
      "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
      "properties": {
        "sourceTierType": {
          "description": "Source tier for the request",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "targetTierType": {
          "description": "target tier for the request",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "sourceTierType",
        "targetTierType",
        "objectType"
      ]
    },
    "FetchTieringCostSavingsInfoForPolicyRequest": {
      "type": "object",
      "description": "Request parameters for tiering cost info for policy",
      "properties": {
        "policyName": {
          "type": "string",
          "description": "Name of the backup policy for which the cost savings information is requested"
        }
      },
      "required": [
        "policyName"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
          "properties": {
            "sourceTierType": {
              "description": "Source tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "targetTierType": {
              "description": "target tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "sourceTierType",
            "targetTierType",
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "FetchTieringCostSavingsInfoForPolicyRequest"
    },
    "FetchTieringCostSavingsInfoForProtectedItemRequest": {
      "type": "object",
      "description": "Request parameters for tiering cost info for protected item",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Name of the protected item container"
        },
        "protectedItemName": {
          "type": "string",
          "description": "Name of the protectedItemName"
        }
      },
      "required": [
        "containerName",
        "protectedItemName"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
          "properties": {
            "sourceTierType": {
              "description": "Source tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "targetTierType": {
              "description": "target tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "sourceTierType",
            "targetTierType",
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "FetchTieringCostSavingsInfoForProtectedItemRequest"
    },
    "FetchTieringCostSavingsInfoForVaultRequest": {
      "type": "object",
      "description": "Request parameters for tiering cost info for vault",
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost request.\nSpecific cost request types are derived from this class.",
          "properties": {
            "sourceTierType": {
              "description": "Source tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "targetTierType": {
              "description": "target tier for the request",
              "type": "string",
              "enum": [
                "Invalid",
                "InstantRP",
                "HardenedRP",
                "ArchivedRP"
              ],
              "x-ms-enum": {
                "name": "RecoveryPointTierType",
                "modelAsString": false
              }
            },
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "sourceTierType",
            "targetTierType",
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "FetchTieringCostSavingsInfoForVaultRequest"
    },
    "GenericContainer": {
      "type": "object",
      "description": "Base class for generic container of backup items",
      "properties": {
        "fabricName": {
          "type": "string",
          "description": "Name of the container's fabric"
        },
        "extendedInformation": {
          "description": "Extended information (not returned in List container API calls)",
          "type": "object",
          "properties": {
            "rawCertData": {
              "type": "string",
              "description": "Public key of container cert"
            },
            "containerIdentityInfo": {
              "description": "Container identity information",
              "type": "object",
              "properties": {
                "uniqueName": {
                  "type": "string",
                  "description": "Unique name of the container"
                },
                "aadTenantId": {
                  "type": "string",
                  "description": "Protection container identity - AAD Tenant"
                },
                "servicePrincipalClientId": {
                  "type": "string",
                  "description": "Protection container identity - AAD Service Principal"
                },
                "audience": {
                  "type": "string",
                  "description": "Protection container identity - Audience"
                }
              }
            },
            "serviceEndpoints": {
              "type": "object",
              "description": "Azure Backup Service Endpoints for the container",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            }
          },
          "discriminator": "containerType",
          "required": [
            "containerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "GenericContainer"
    },
    "GenericContainerExtendedInfo": {
      "type": "object",
      "description": "Container extended information",
      "properties": {
        "rawCertData": {
          "type": "string",
          "description": "Public key of container cert"
        },
        "containerIdentityInfo": {
          "description": "Container identity information",
          "type": "object",
          "properties": {
            "uniqueName": {
              "type": "string",
              "description": "Unique name of the container"
            },
            "aadTenantId": {
              "type": "string",
              "description": "Protection container identity - AAD Tenant"
            },
            "servicePrincipalClientId": {
              "type": "string",
              "description": "Protection container identity - AAD Service Principal"
            },
            "audience": {
              "type": "string",
              "description": "Protection container identity - Audience"
            }
          }
        },
        "serviceEndpoints": {
          "type": "object",
          "description": "Azure Backup Service Endpoints for the container",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GenericProtectedItem": {
      "type": "object",
      "description": "Base class for backup items.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "policyState": {
          "type": "string",
          "description": "Indicates consistency of policy object and policy applied to this backup item."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused",
            "BackupsSuspended"
          ],
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "IRPending",
                "value": "IRPending"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionError",
                "value": "ProtectionError"
              },
              {
                "name": "ProtectionStopped",
                "value": "ProtectionStopped"
              },
              {
                "name": "ProtectionPaused",
                "value": "ProtectionPaused"
              },
              {
                "name": "BackupsSuspended",
                "value": "BackupsSuspended"
              }
            ]
          }
        },
        "protectedItemId": {
          "type": "integer",
          "format": "int64",
          "description": "Data Plane Service ID of the protected item."
        },
        "sourceAssociations": {
          "type": "object",
          "description": "Loosely coupled (type, value) associations (example - parent of a protected item)",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fabricName": {
          "type": "string",
          "description": "Name of this backup item's fabric."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup items.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "GenericProtectedItem"
    },
    "GenericProtectionPolicy": {
      "type": "object",
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "properties": {
        "subProtectionPolicy": {
          "type": "array",
          "description": "List of sub-protection policies which includes schedule and retention",
          "items": {
            "type": "object",
            "description": "Sub-protection policy which includes schedule and retention",
            "properties": {
              "policyType": {
                "description": "Type of backup policy type",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Full",
                  "Differential",
                  "Log",
                  "CopyOnlyFull",
                  "Incremental",
                  "SnapshotFull",
                  "SnapshotCopyOnlyFull"
                ],
                "x-ms-enum": {
                  "name": "PolicyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Full",
                      "value": "Full"
                    },
                    {
                      "name": "Differential",
                      "value": "Differential"
                    },
                    {
                      "name": "Log",
                      "value": "Log"
                    },
                    {
                      "name": "CopyOnlyFull",
                      "value": "CopyOnlyFull"
                    },
                    {
                      "name": "Incremental",
                      "value": "Incremental"
                    },
                    {
                      "name": "SnapshotFull",
                      "value": "SnapshotFull"
                    },
                    {
                      "name": "SnapshotCopyOnlyFull",
                      "value": "SnapshotCopyOnlyFull"
                    }
                  ]
                }
              },
              "schedulePolicy": {
                "description": "Backup schedule specified as part of backup policy.",
                "type": "object",
                "properties": {
                  "schedulePolicyType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "schedulePolicyType",
                "required": [
                  "schedulePolicyType"
                ]
              },
              "retentionPolicy": {
                "description": "Retention policy with the details on backup copy retention ranges.",
                "type": "object",
                "properties": {
                  "retentionPolicyType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "retentionPolicyType",
                "required": [
                  "retentionPolicyType"
                ]
              },
              "tieringPolicy": {
                "type": "object",
                "description": "Tiering policy to automatically move RPs to another tier.\nKey is Target Tier, defined in RecoveryPointTierType enum.\nTiering policy specifies the criteria to move RP to the target tier.",
                "additionalProperties": {
                  "type": "object",
                  "description": "Tiering Policy for a target tier.\nIf the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier",
                  "properties": {
                    "tieringMode": {
                      "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "TierRecommended",
                        "TierAfter",
                        "DoNotTier"
                      ],
                      "x-ms-enum": {
                        "name": "TieringMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "TierRecommended",
                            "value": "TierRecommended"
                          },
                          {
                            "name": "TierAfter",
                            "value": "TierAfter"
                          },
                          {
                            "name": "DoNotTier",
                            "value": "DoNotTier"
                          }
                        ]
                      }
                    },
                    "duration": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of days/weeks/months/years to retain backups in current tier before tiering.\nUsed only if TieringMode is set to TierAfter"
                    },
                    "durationType": {
                      "description": "Retention duration type: days/weeks/months/years\nUsed only if TieringMode is set to TierAfter",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "Days",
                        "Weeks",
                        "Months",
                        "Years"
                      ],
                      "x-ms-enum": {
                        "name": "RetentionDurationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Invalid",
                            "value": "Invalid"
                          },
                          {
                            "name": "Days",
                            "value": "Days"
                          },
                          {
                            "name": "Weeks",
                            "value": "Weeks"
                          },
                          {
                            "name": "Months",
                            "value": "Months"
                          },
                          {
                            "name": "Years",
                            "value": "Years"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "snapshotBackupAdditionalDetails": {
                "description": "Snapshot Backup related fields for WorkloadType SaPHanaSystem",
                "type": "object",
                "properties": {
                  "instantRpRetentionRangeInDays": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "instantRPDetails": {
                    "type": "string"
                  },
                  "userAssignedManagedIdentityDetails": {
                    "description": "User assigned managed identity details",
                    "type": "object",
                    "properties": {
                      "identityArmId": {
                        "type": "string",
                        "description": "The ARM id of the assigned identity."
                      },
                      "identityName": {
                        "type": "string",
                        "description": "The name of the assigned identity."
                      },
                      "userAssignedIdentityProperties": {
                        "description": "User assigned managed identity properties",
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "description": "The client ID of the assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID of the assigned identity."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "timeZone": {
          "type": "string",
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\"."
        },
        "fabricName": {
          "type": "string",
          "description": "Name of this policy's fabric."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "GenericProtectionPolicy"
    },
    "GenericRecoveryPoint": {
      "type": "object",
      "description": "Generic backup copy.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup copy."
        },
        "recoveryPointType": {
          "type": "string",
          "description": "Type of the backup copy."
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which this backup copy was created."
        },
        "recoveryPointAdditionalInfo": {
          "type": "string",
          "description": "Additional information associated with this backup copy."
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "GenericRecoveryPoint"
    },
    "GetProtectedItemQueryObject": {
      "type": "object",
      "description": "Filters to list backup items.",
      "properties": {
        "expand": {
          "type": "string",
          "description": "Specifies if the additional information should be provided for this item."
        }
      }
    },
    "HealthState": {
      "type": "string",
      "description": "Health State for the backed up item.",
      "enum": [
        "Passed",
        "ActionRequired",
        "ActionSuggested",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed"
          },
          {
            "name": "ActionRequired",
            "value": "ActionRequired"
          },
          {
            "name": "ActionSuggested",
            "value": "ActionSuggested"
          },
          {
            "name": "Invalid",
            "value": "Invalid"
          }
        ]
      }
    },
    "HealthStatus": {
      "type": "string",
      "description": "Health status of protected item.",
      "enum": [
        "Passed",
        "ActionRequired",
        "ActionSuggested",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "HealthStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed"
          },
          {
            "name": "ActionRequired",
            "value": "ActionRequired"
          },
          {
            "name": "ActionSuggested",
            "value": "ActionSuggested"
          },
          {
            "name": "Invalid",
            "value": "Invalid"
          }
        ]
      }
    },
    "HourlySchedule": {
      "type": "object",
      "properties": {
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval at which backup needs to be triggered. For hourly the value\ncan be 4/6/8/12"
        },
        "scheduleWindowStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "To specify start time of the backup window"
        },
        "scheduleWindowDuration": {
          "type": "integer",
          "format": "int32",
          "description": "To specify duration of the backup window"
        }
      }
    },
    "HttpStatusCode": {
      "type": "string",
      "description": "HTTP Status Code of the operation.",
      "enum": [
        "Continue",
        "SwitchingProtocols",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultipleChoices",
        "Ambiguous",
        "MovedPermanently",
        "Moved",
        "Found",
        "Redirect",
        "SeeOther",
        "RedirectMethod",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "RedirectKeepVerb",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "UpgradeRequired",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported"
      ],
      "x-ms-enum": {
        "name": "HttpStatusCode",
        "modelAsString": false
      }
    },
    "IAASVMPolicyType": {
      "type": "string",
      "enum": [
        "Invalid",
        "V1",
        "V2"
      ],
      "x-ms-enum": {
        "name": "IAASVMPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "V1",
            "value": "V1"
          },
          {
            "name": "V2",
            "value": "V2"
          }
        ]
      }
    },
    "ILRRequest": {
      "type": "object",
      "description": "Parameters to Provision ILR API.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "ILRRequestResource": {
      "type": "object",
      "description": "Parameters to Provision ILR API.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "ILRRequestResource properties",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      }
    },
    "IaaSVMContainer": {
      "type": "object",
      "description": "IaaS VM workload-specific container.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "backupManagementType": {
          "description": "Type of backup management for the container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "registrationStatus": {
          "type": "string",
          "description": "Status of registration of the container with the Recovery Services Vault."
        },
        "healthStatus": {
          "type": "string",
          "description": "Status of health of the container."
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "Microsoft.ClassicCompute/virtualMachines",
            "Microsoft.Compute/virtualMachines",
            "AzureWorkloadContainer"
          ],
          "x-ms-enum": {
            "name": "ProtectableContainerType",
            "modelAsString": false
          }
        },
        "protectableObjectType": {
          "type": "string",
          "description": "Type of the protectable object associated with this container"
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container."
        },
        "virtualMachineVersion": {
          "type": "string",
          "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name of Recovery Services Vault."
        }
      },
      "x-ms-discriminator-value": "IaasVMContainer"
    },
    "IaaSVMProtectableItem": {
      "type": "object",
      "description": "IaaS VM workload-specific backup item.",
      "properties": {
        "backupManagementType": {
          "type": "string",
          "description": "Type of backup management to backup an item."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of workload for the backup management"
        },
        "protectableItemType": {
          "type": "string",
          "description": "Type of the backup item."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup item."
        },
        "protectionState": {
          "description": "State of the back up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the virtual machine."
        },
        "virtualMachineVersion": {
          "type": "string",
          "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name of Recovery Services Vault."
        }
      },
      "x-ms-discriminator-value": "IaaSVMProtectableItem"
    },
    "IaasVMBackupRequest": {
      "type": "object",
      "description": "IaaS VM workload-specific backup request.",
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC)."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "IaasVMBackupRequest"
    },
    "IaasVMILRRegistrationRequest": {
      "type": "object",
      "description": "Restore files/folders from a backup copy of IaaS VM.",
      "properties": {
        "recoveryPointId": {
          "type": "string",
          "description": "ID of the IaaS VM backup copy from where the files/folders have to be restored."
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored."
        },
        "initiatorName": {
          "type": "string",
          "description": "iSCSI initiator name."
        },
        "renewExistingRegistration": {
          "type": "boolean",
          "description": "Whether to renew existing registration with the iSCSI server."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Parameters to Provision ILR API.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "IaasVMILRRegistrationRequest"
    },
    "IaasVMRecoveryPoint": {
      "type": "object",
      "description": "IaaS VM workload specific backup copy.",
      "properties": {
        "recoveryPointType": {
          "type": "string",
          "description": "Type of the backup copy."
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which this backup copy was created."
        },
        "recoveryPointAdditionalInfo": {
          "type": "string",
          "description": "Additional information associated with this backup copy."
        },
        "sourceVMStorageType": {
          "type": "string",
          "description": "Storage type of the VM whose backup copy is created."
        },
        "isSourceVMEncrypted": {
          "type": "boolean",
          "description": "Identifies whether the VM was encrypted when the backup copy is created."
        },
        "keyAndSecret": {
          "description": "Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true.",
          "type": "object",
          "properties": {
            "kekDetails": {
              "description": "KEK is encryption key for BEK.",
              "type": "object",
              "properties": {
                "keyUrl": {
                  "type": "string",
                  "description": "Key is KEK."
                },
                "keyVaultId": {
                  "type": "string",
                  "description": "Key Vault ID where this Key is stored."
                },
                "keyBackupData": {
                  "type": "string",
                  "description": "KEK data."
                }
              }
            },
            "bekDetails": {
              "description": "BEK is bitlocker encryption key.",
              "type": "object",
              "properties": {
                "secretUrl": {
                  "type": "string",
                  "description": "Secret is BEK."
                },
                "secretVaultId": {
                  "type": "string",
                  "description": "ID of the Key Vault where this Secret is stored."
                },
                "secretData": {
                  "type": "string",
                  "description": "BEK data."
                }
              }
            },
            "encryptionMechanism": {
              "type": "string",
              "description": "Encryption mechanism: None/ SinglePass/ DoublePass"
            }
          }
        },
        "isInstantIlrSessionActive": {
          "type": "boolean",
          "description": "Is the session to recover items from this backup copy still active."
        },
        "recoveryPointTierDetails": {
          "type": "array",
          "description": "Recovery point tier information.",
          "items": {
            "type": "object",
            "description": "RecoveryPoint Tier Information V2",
            "properties": {
              "type": {
                "description": "Recovery point tier type.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "InstantRP",
                  "HardenedRP",
                  "ArchivedRP"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierType",
                  "modelAsString": false
                }
              },
              "status": {
                "description": "Recovery point tier status.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Valid",
                  "Disabled",
                  "Deleted",
                  "Rehydrated"
                ],
                "x-ms-enum": {
                  "name": "RecoveryPointTierStatus",
                  "modelAsString": true
                }
              },
              "extendedInfo": {
                "type": "object",
                "description": "Recovery point tier status.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "isManagedVirtualMachine": {
          "type": "boolean",
          "description": "Whether VM is with Managed Disks"
        },
        "virtualMachineSize": {
          "type": "string",
          "description": "Virtual Machine Size"
        },
        "originalStorageAccountOption": {
          "type": "boolean",
          "description": "Original Storage Account Option"
        },
        "osType": {
          "type": "string",
          "description": "OS type"
        },
        "recoveryPointDiskConfiguration": {
          "description": "Disk configuration",
          "type": "object",
          "properties": {
            "numberOfDisksIncludedInBackup": {
              "type": "integer",
              "format": "int32",
              "description": "Number of disks included in backup"
            },
            "numberOfDisksAttachedToVm": {
              "type": "integer",
              "format": "int32",
              "description": "Number of disks attached to the VM"
            },
            "includedDiskList": {
              "type": "array",
              "description": "Information of disks included in backup",
              "items": {
                "type": "object",
                "description": "Disk information",
                "properties": {
                  "lun": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "excludedDiskList": {
              "type": "array",
              "description": "Information of disks excluded from backup",
              "items": {
                "type": "object",
                "description": "Disk information",
                "properties": {
                  "lun": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "zones": {
          "type": "array",
          "description": "Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms",
          "items": {
            "type": "string"
          }
        },
        "recoveryPointMoveReadinessInfo": {
          "type": "object",
          "description": "Eligibility of RP to be moved to another tier",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "isReadyForMove": {
                "type": "boolean"
              },
              "additionalInfo": {
                "type": "string"
              }
            }
          }
        },
        "securityType": {
          "type": "string",
          "description": "Security Type of the Disk"
        },
        "recoveryPointProperties": {
          "description": "Properties of Recovery Point",
          "type": "object",
          "properties": {
            "expiryTime": {
              "type": "string",
              "description": "Expiry time of Recovery Point in UTC."
            },
            "ruleName": {
              "type": "string",
              "description": "Rule name tagged on Recovery Point that governs life cycle"
            },
            "isSoftDeleted": {
              "type": "boolean",
              "description": "Bool to indicate whether RP is in soft delete state or not"
            }
          }
        },
        "isPrivateAccessEnabledOnAnyDisk": {
          "type": "boolean",
          "description": "This flag denotes if any of the disks in the VM are using Private access network setting"
        },
        "extendedLocation": {
          "description": "Extended location of the VM recovery point,\nshould be null if VM is in public cloud",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the extended location."
            },
            "type": {
              "type": "string",
              "description": "Type of the extended location. Possible values include: 'EdgeZone'"
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "IaasVMRecoveryPoint"
    },
    "IaasVMRestoreRequest": {
      "type": "object",
      "description": "IaaS VM workload-specific restore.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "recoveryPointId": {
          "type": "string",
          "description": "ID of the backup copy to be recovered."
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "type": "string",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks",
            "Offline"
          ],
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "OriginalLocation",
                "value": "OriginalLocation"
              },
              {
                "name": "AlternateLocation",
                "value": "AlternateLocation"
              },
              {
                "name": "RestoreDisks",
                "value": "RestoreDisks"
              },
              {
                "name": "Offline",
                "value": "Offline"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the VM which is being recovered."
        },
        "targetVirtualMachineId": {
          "type": "string",
          "description": "This is the complete ARM Id of the VM that will be created.\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
        },
        "targetResourceGroupId": {
          "type": "string",
          "description": "This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}"
        },
        "storageAccountId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the storage account to which the VM has to be restored."
        },
        "virtualNetworkId": {
          "type": "string",
          "description": "This is the virtual network Id of the vnet that will be attached to the virtual machine.\nUser will be validated for join action permissions in the linked access."
        },
        "subnetId": {
          "type": "string",
          "description": "Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be\n{VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent\nthe subnet."
        },
        "targetDomainNameId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic\nVirtual Machines."
        },
        "region": {
          "type": "string",
          "description": "Region in which the virtual machine is restored."
        },
        "affinityGroup": {
          "type": "string",
          "description": "Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines."
        },
        "createNewCloudService": {
          "type": "boolean",
          "description": "Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same\ncloud service as it was at the time of backup."
        },
        "originalStorageAccountOption": {
          "type": "boolean",
          "description": "Original Storage Account Option"
        },
        "encryptionDetails": {
          "description": "Details needed if the VM was encrypted at the time of backup.",
          "type": "object",
          "properties": {
            "encryptionEnabled": {
              "type": "boolean",
              "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup."
            },
            "kekUrl": {
              "type": "string",
              "description": "Key Url."
            },
            "secretKeyUrl": {
              "type": "string",
              "description": "Secret Url."
            },
            "kekVaultId": {
              "type": "string",
              "description": "ID of Key Vault where KEK is stored."
            },
            "secretKeyVaultId": {
              "type": "string",
              "description": "ID of Key Vault where Secret is stored."
            }
          }
        },
        "restoreDiskLunList": {
          "type": "array",
          "description": "List of Disk LUNs for partial restore",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "restoreWithManagedDisks": {
          "type": "boolean",
          "description": "Flag to denote of an Unmanaged disk VM should be restored with Managed disks."
        },
        "diskEncryptionSetId": {
          "type": "string",
          "description": "DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key."
        },
        "zones": {
          "type": "array",
          "description": "Target zone where the VM and its disks should be restored.",
          "items": {
            "type": "string"
          }
        },
        "identityInfo": {
          "description": "Managed Identity information required to access customer storage account.",
          "type": "object",
          "properties": {
            "isSystemAssignedIdentity": {
              "type": "boolean",
              "description": "To differentiate if the managed identity is system assigned or user assigned"
            },
            "managedIdentityResourceId": {
              "type": "string",
              "description": "Managed Identity Resource Id\nOptional: Might not be required in the case of system assigned managed identity"
            }
          }
        },
        "identityBasedRestoreDetails": {
          "description": "IaaS VM workload specific restore details for restores using managed identity.",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "Gets the class type."
            },
            "targetStorageAccountId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the target storage account."
            }
          }
        },
        "extendedLocation": {
          "description": "Target extended location where the VM should be restored,\nshould be null if restore is to be done in public cloud",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the extended location."
            },
            "type": {
              "type": "string",
              "description": "Type of the extended location. Possible values include: 'EdgeZone'"
            }
          }
        },
        "securedVMDetails": {
          "description": "Stores Secured VM Details",
          "type": "object",
          "properties": {
            "securedVMOsDiskEncryptionSetId": {
              "type": "string",
              "description": "Gets or Sets Disk Encryption Set Id for Secured VM OS Disk"
            }
          }
        },
        "targetDiskNetworkAccessSettings": {
          "description": "Specifies target network access settings for disks of VM to be restored,",
          "type": "object",
          "properties": {
            "targetDiskNetworkAccessOption": {
              "description": "Network access settings to be used for restored disks",
              "type": "string",
              "enum": [
                "SameAsOnSourceDisks",
                "EnablePrivateAccessForAllDisks",
                "EnablePublicAccessForAllDisks"
              ],
              "x-ms-enum": {
                "name": "TargetDiskNetworkAccessOption",
                "modelAsString": false
              }
            },
            "targetDiskAccessId": {
              "type": "string",
              "description": "Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew"
            }
          }
        }
      },
      "x-ms-discriminator-value": "IaasVMRestoreRequest"
    },
    "IaasVMRestoreWithRehydrationRequest": {
      "type": "object",
      "description": "IaaS VM workload-specific restore with integrated rehydration of recovery point.",
      "properties": {
        "recoveryPointRehydrationInfo": {
          "description": "RP Rehydration Info",
          "type": "object",
          "properties": {
            "rehydrationRetentionDuration": {
              "type": "string",
              "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
            },
            "rehydrationPriority": {
              "description": "Rehydration Priority",
              "type": "string",
              "enum": [
                "Standard",
                "High"
              ],
              "x-ms-enum": {
                "name": "RehydrationPriority",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "High",
                    "value": "High"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "IaaS VM workload-specific restore.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "recoveryPointId": {
              "type": "string",
              "description": "ID of the backup copy to be recovered."
            },
            "recoveryType": {
              "description": "Type of this recovery.",
              "type": "string",
              "enum": [
                "Invalid",
                "OriginalLocation",
                "AlternateLocation",
                "RestoreDisks",
                "Offline"
              ],
              "x-ms-enum": {
                "name": "RecoveryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "OriginalLocation",
                    "value": "OriginalLocation"
                  },
                  {
                    "name": "AlternateLocation",
                    "value": "AlternateLocation"
                  },
                  {
                    "name": "RestoreDisks",
                    "value": "RestoreDisks"
                  },
                  {
                    "name": "Offline",
                    "value": "Offline"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the VM which is being recovered."
            },
            "targetVirtualMachineId": {
              "type": "string",
              "description": "This is the complete ARM Id of the VM that will be created.\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}"
            },
            "targetResourceGroupId": {
              "type": "string",
              "description": "This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}"
            },
            "storageAccountId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the storage account to which the VM has to be restored."
            },
            "virtualNetworkId": {
              "type": "string",
              "description": "This is the virtual network Id of the vnet that will be attached to the virtual machine.\nUser will be validated for join action permissions in the linked access."
            },
            "subnetId": {
              "type": "string",
              "description": "Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be\n{VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent\nthe subnet."
            },
            "targetDomainNameId": {
              "type": "string",
              "description": "Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic\nVirtual Machines."
            },
            "region": {
              "type": "string",
              "description": "Region in which the virtual machine is restored."
            },
            "affinityGroup": {
              "type": "string",
              "description": "Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines."
            },
            "createNewCloudService": {
              "type": "boolean",
              "description": "Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same\ncloud service as it was at the time of backup."
            },
            "originalStorageAccountOption": {
              "type": "boolean",
              "description": "Original Storage Account Option"
            },
            "encryptionDetails": {
              "description": "Details needed if the VM was encrypted at the time of backup.",
              "type": "object",
              "properties": {
                "encryptionEnabled": {
                  "type": "boolean",
                  "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup."
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key Url."
                },
                "secretKeyUrl": {
                  "type": "string",
                  "description": "Secret Url."
                },
                "kekVaultId": {
                  "type": "string",
                  "description": "ID of Key Vault where KEK is stored."
                },
                "secretKeyVaultId": {
                  "type": "string",
                  "description": "ID of Key Vault where Secret is stored."
                }
              }
            },
            "restoreDiskLunList": {
              "type": "array",
              "description": "List of Disk LUNs for partial restore",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "restoreWithManagedDisks": {
              "type": "boolean",
              "description": "Flag to denote of an Unmanaged disk VM should be restored with Managed disks."
            },
            "diskEncryptionSetId": {
              "type": "string",
              "description": "DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key."
            },
            "zones": {
              "type": "array",
              "description": "Target zone where the VM and its disks should be restored.",
              "items": {
                "type": "string"
              }
            },
            "identityInfo": {
              "description": "Managed Identity information required to access customer storage account.",
              "type": "object",
              "properties": {
                "isSystemAssignedIdentity": {
                  "type": "boolean",
                  "description": "To differentiate if the managed identity is system assigned or user assigned"
                },
                "managedIdentityResourceId": {
                  "type": "string",
                  "description": "Managed Identity Resource Id\nOptional: Might not be required in the case of system assigned managed identity"
                }
              }
            },
            "identityBasedRestoreDetails": {
              "description": "IaaS VM workload specific restore details for restores using managed identity.",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "Gets the class type."
                },
                "targetStorageAccountId": {
                  "type": "string",
                  "description": "Fully qualified ARM ID of the target storage account."
                }
              }
            },
            "extendedLocation": {
              "description": "Target extended location where the VM should be restored,\nshould be null if restore is to be done in public cloud",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the extended location."
                },
                "type": {
                  "type": "string",
                  "description": "Type of the extended location. Possible values include: 'EdgeZone'"
                }
              }
            },
            "securedVMDetails": {
              "description": "Stores Secured VM Details",
              "type": "object",
              "properties": {
                "securedVMOsDiskEncryptionSetId": {
                  "type": "string",
                  "description": "Gets or Sets Disk Encryption Set Id for Secured VM OS Disk"
                }
              }
            },
            "targetDiskNetworkAccessSettings": {
              "description": "Specifies target network access settings for disks of VM to be restored,",
              "type": "object",
              "properties": {
                "targetDiskNetworkAccessOption": {
                  "description": "Network access settings to be used for restored disks",
                  "type": "string",
                  "enum": [
                    "SameAsOnSourceDisks",
                    "EnablePrivateAccessForAllDisks",
                    "EnablePublicAccessForAllDisks"
                  ],
                  "x-ms-enum": {
                    "name": "TargetDiskNetworkAccessOption",
                    "modelAsString": false
                  }
                },
                "targetDiskAccessId": {
                  "type": "string",
                  "description": "Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew"
                }
              }
            }
          },
          "x-ms-discriminator-value": "IaasVMRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "IaasVMRestoreWithRehydrationRequest"
    },
    "IaasVMSnapshotConsistencyType": {
      "type": "string",
      "enum": [
        "OnlyCrashConsistent"
      ],
      "x-ms-enum": {
        "name": "IaasVMSnapshotConsistencyType",
        "modelAsString": true,
        "values": [
          {
            "name": "OnlyCrashConsistent",
            "value": "OnlyCrashConsistent"
          }
        ]
      }
    },
    "IdentityBasedRestoreDetails": {
      "type": "object",
      "description": "IaaS VM workload specific restore details for restores using managed identity",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Gets the class type."
        },
        "targetStorageAccountId": {
          "type": "string",
          "description": "Fully qualified ARM ID of the target storage account."
        }
      }
    },
    "IdentityInfo": {
      "type": "object",
      "description": "Encapsulates Managed Identity related information",
      "properties": {
        "isSystemAssignedIdentity": {
          "type": "boolean",
          "description": "To differentiate if the managed identity is system assigned or user assigned"
        },
        "managedIdentityResourceId": {
          "type": "string",
          "description": "Managed Identity Resource Id\nOptional: Might not be required in the case of system assigned managed identity"
        }
      }
    },
    "InquiryInfo": {
      "type": "object",
      "description": "Details about inquired protectable items under a given container.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Inquiry Status for this container such as\nInProgress | Failed | Succeeded"
        },
        "errorDetail": {
          "type": "object",
          "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "Error Message related to the Code.",
              "readOnly": true
            },
            "recommendations": {
              "type": "array",
              "description": "List of recommendation strings.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        },
        "inquiryDetails": {
          "type": "array",
          "description": "Inquiry Details which will have workload specific details.\nFor e.g. - For SQL and oracle this will contain different details.",
          "items": {
            "type": "object",
            "description": "Details of an inquired protectable item.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of the Workload such as SQL, Oracle etc."
              },
              "itemCount": {
                "type": "integer",
                "format": "int64",
                "description": "Contains the protectable item Count inside this Container."
              },
              "inquiryValidation": {
                "description": "Inquiry validation such as permissions and other backup validations.",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status for the Inquiry Validation."
                  },
                  "errorDetail": {
                    "type": "object",
                    "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error code.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Error Message related to the Code.",
                        "readOnly": true
                      },
                      "recommendations": {
                        "type": "array",
                        "description": "List of recommendation strings.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "additionalDetail": {
                    "type": "string",
                    "description": "Error Additional Detail in case the status is non-success.",
                    "readOnly": true
                  },
                  "protectableItemCount": {
                    "description": "Dictionary to store the count of ProtectableItems with key POType.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "InquiryStatus": {
      "type": "string",
      "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
      "enum": [
        "Invalid",
        "Success",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "InquiryStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Success",
            "value": "Success"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "InquiryValidation": {
      "type": "object",
      "description": "Validation for inquired protectable items under a given container.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status for the Inquiry Validation."
        },
        "errorDetail": {
          "type": "object",
          "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "Error Message related to the Code.",
              "readOnly": true
            },
            "recommendations": {
              "type": "array",
              "description": "List of recommendation strings.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        },
        "additionalDetail": {
          "type": "string",
          "description": "Error Additional Detail in case the status is non-success.",
          "readOnly": true
        },
        "protectableItemCount": {
          "description": "Dictionary to store the count of ProtectableItems with key POType.",
          "readOnly": true
        }
      }
    },
    "InstantItemRecoveryTarget": {
      "type": "object",
      "description": "Target details for file / folder restore.",
      "properties": {
        "clientScripts": {
          "type": "array",
          "description": "List of client scripts.",
          "items": {
            "type": "object",
            "description": "Client script details for file / folder restore.",
            "properties": {
              "scriptContent": {
                "type": "string",
                "description": "File content of the client script for file / folder restore."
              },
              "scriptExtension": {
                "type": "string",
                "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc."
              },
              "osType": {
                "type": "string",
                "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works."
              },
              "url": {
                "type": "string",
                "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used"
              },
              "scriptNameSuffix": {
                "type": "string",
                "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\nIf its null or empty then , ignore it."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "InstantRPAdditionalDetails": {
      "type": "object",
      "properties": {
        "azureBackupRGNamePrefix": {
          "type": "string"
        },
        "azureBackupRGNameSuffix": {
          "type": "string"
        }
      }
    },
    "IntentItemType": {
      "type": "string",
      "description": "Type of workload this item represents",
      "enum": [
        "Invalid",
        "SQLInstance",
        "SQLAvailabilityGroupContainer"
      ],
      "x-ms-enum": {
        "name": "IntentItemType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "SQLInstance",
            "value": "SQLInstance"
          },
          {
            "name": "SQLAvailabilityGroupContainer",
            "value": "SQLAvailabilityGroupContainer"
          }
        ]
      }
    },
    "Job": {
      "type": "object",
      "description": "Defines workload agnostic properties for a job.",
      "properties": {
        "entityFriendlyName": {
          "type": "string",
          "description": "Friendly name of the entity on which the current job is executing."
        },
        "backupManagementType": {
          "description": "Backup management type to execute the current job.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "operation": {
          "type": "string",
          "description": "The operation name."
        },
        "status": {
          "type": "string",
          "description": "Job status."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "activityId": {
          "type": "string",
          "description": "ActivityId of job."
        },
        "jobType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ]
    },
    "JobOperationType": {
      "type": "string",
      "description": "Type of operation.",
      "enum": [
        "Invalid",
        "Register",
        "UnRegister",
        "ConfigureBackup",
        "Backup",
        "Restore",
        "DisableBackup",
        "DeleteBackupData",
        "CrossRegionRestore",
        "Undelete",
        "UpdateCustomerManagedKey"
      ],
      "x-ms-enum": {
        "name": "JobOperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Register",
            "value": "Register"
          },
          {
            "name": "UnRegister",
            "value": "UnRegister"
          },
          {
            "name": "ConfigureBackup",
            "value": "ConfigureBackup"
          },
          {
            "name": "Backup",
            "value": "Backup"
          },
          {
            "name": "Restore",
            "value": "Restore"
          },
          {
            "name": "DisableBackup",
            "value": "DisableBackup"
          },
          {
            "name": "DeleteBackupData",
            "value": "DeleteBackupData"
          },
          {
            "name": "CrossRegionRestore",
            "value": "CrossRegionRestore"
          },
          {
            "name": "Undelete",
            "value": "Undelete"
          },
          {
            "name": "UpdateCustomerManagedKey",
            "value": "UpdateCustomerManagedKey"
          }
        ]
      }
    },
    "JobQueryObject": {
      "type": "object",
      "description": "Filters to list the jobs.",
      "properties": {
        "status": {
          "description": "Status of the job.",
          "type": "string",
          "enum": [
            "Invalid",
            "InProgress",
            "Completed",
            "Failed",
            "CompletedWithWarnings",
            "Cancelled",
            "Cancelling"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Completed",
                "value": "Completed"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "CompletedWithWarnings",
                "value": "CompletedWithWarnings"
              },
              {
                "name": "Cancelled",
                "value": "Cancelled"
              },
              {
                "name": "Cancelling",
                "value": "Cancelling"
              }
            ]
          }
        },
        "backupManagementType": {
          "description": "Type of backup management for the job.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "operation": {
          "description": "Type of operation.",
          "type": "string",
          "enum": [
            "Invalid",
            "Register",
            "UnRegister",
            "ConfigureBackup",
            "Backup",
            "Restore",
            "DisableBackup",
            "DeleteBackupData",
            "CrossRegionRestore",
            "Undelete",
            "UpdateCustomerManagedKey"
          ],
          "x-ms-enum": {
            "name": "JobOperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Register",
                "value": "Register"
              },
              {
                "name": "UnRegister",
                "value": "UnRegister"
              },
              {
                "name": "ConfigureBackup",
                "value": "ConfigureBackup"
              },
              {
                "name": "Backup",
                "value": "Backup"
              },
              {
                "name": "Restore",
                "value": "Restore"
              },
              {
                "name": "DisableBackup",
                "value": "DisableBackup"
              },
              {
                "name": "DeleteBackupData",
                "value": "DeleteBackupData"
              },
              {
                "name": "CrossRegionRestore",
                "value": "CrossRegionRestore"
              },
              {
                "name": "Undelete",
                "value": "Undelete"
              },
              {
                "name": "UpdateCustomerManagedKey",
                "value": "UpdateCustomerManagedKey"
              }
            ]
          }
        },
        "jobId": {
          "type": "string",
          "description": "JobID represents the job uniquely."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Job has started at this time. Value is in UTC."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Job has ended at this time. Value is in UTC."
        }
      }
    },
    "JobResource": {
      "type": "object",
      "description": "Defines workload agnostic properties for a job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "JobResource properties",
          "type": "object",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "JobResourceList": {
      "type": "object",
      "description": "List of Job resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Defines workload agnostic properties for a job.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "JobResource properties",
                "type": "object",
                "properties": {
                  "entityFriendlyName": {
                    "type": "string",
                    "description": "Friendly name of the entity on which the current job is executing."
                  },
                  "backupManagementType": {
                    "description": "Backup management type to execute the current job.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "operation": {
                    "type": "string",
                    "description": "The operation name."
                  },
                  "status": {
                    "type": "string",
                    "description": "Job status."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time."
                  },
                  "activityId": {
                    "type": "string",
                    "description": "ActivityId of job."
                  },
                  "jobType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "jobType",
                "required": [
                  "jobType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "JobStatus": {
      "type": "string",
      "description": "Status of the job.",
      "enum": [
        "Invalid",
        "InProgress",
        "Completed",
        "Failed",
        "CompletedWithWarnings",
        "Cancelled",
        "Cancelling"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "CompletedWithWarnings",
            "value": "CompletedWithWarnings"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled"
          },
          {
            "name": "Cancelling",
            "value": "Cancelling"
          }
        ]
      }
    },
    "JobSupportedAction": {
      "type": "string",
      "enum": [
        "Invalid",
        "Cancellable",
        "Retriable"
      ],
      "x-ms-enum": {
        "name": "JobSupportedAction",
        "modelAsString": false
      }
    },
    "KEKDetails": {
      "type": "object",
      "description": "KEK is encryption key for BEK.",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "Key is KEK."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Key Vault ID where this Key is stored."
        },
        "keyBackupData": {
          "type": "string",
          "description": "KEK data."
        }
      }
    },
    "KPIResourceHealthDetails": {
      "type": "object",
      "description": "KPI Resource Health Details",
      "properties": {
        "resourceHealthStatus": {
          "description": "Resource Health Status",
          "type": "string",
          "enum": [
            "Healthy",
            "TransientDegraded",
            "PersistentDegraded",
            "TransientUnhealthy",
            "PersistentUnhealthy",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "TransientDegraded",
                "value": "TransientDegraded"
              },
              {
                "name": "PersistentDegraded",
                "value": "PersistentDegraded"
              },
              {
                "name": "TransientUnhealthy",
                "value": "TransientUnhealthy"
              },
              {
                "name": "PersistentUnhealthy",
                "value": "PersistentUnhealthy"
              },
              {
                "name": "Invalid",
                "value": "Invalid"
              }
            ]
          }
        },
        "resourceHealthDetails": {
          "type": "array",
          "description": "Resource Health Status",
          "items": {
            "type": "object",
            "description": "Health Details for backup items.",
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32",
                "description": "Health Code",
                "readOnly": true
              },
              "title": {
                "type": "string",
                "description": "Health Title",
                "readOnly": true
              },
              "message": {
                "type": "string",
                "description": "Health Message",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "Health Recommended Actions",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      }
    },
    "KeyAndSecretDetails": {
      "type": "object",
      "description": "BEK is bitlocker key.\nKEK is encryption key for BEK\nIf the VM was encrypted then we will store following details :\n1. Secret(BEK) - Url + Backup Data + vaultId.\n2. Key(KEK) - Url + Backup Data + vaultId.\n3. EncryptionMechanism\nBEK and KEK can potentially have different vault ids.",
      "properties": {
        "kekDetails": {
          "description": "KEK is encryption key for BEK.",
          "type": "object",
          "properties": {
            "keyUrl": {
              "type": "string",
              "description": "Key is KEK."
            },
            "keyVaultId": {
              "type": "string",
              "description": "Key Vault ID where this Key is stored."
            },
            "keyBackupData": {
              "type": "string",
              "description": "KEK data."
            }
          }
        },
        "bekDetails": {
          "description": "BEK is bitlocker encryption key.",
          "type": "object",
          "properties": {
            "secretUrl": {
              "type": "string",
              "description": "Secret is BEK."
            },
            "secretVaultId": {
              "type": "string",
              "description": "ID of the Key Vault where this Secret is stored."
            },
            "secretData": {
              "type": "string",
              "description": "BEK data."
            }
          }
        },
        "encryptionMechanism": {
          "type": "string",
          "description": "Encryption mechanism: None/ SinglePass/ DoublePass"
        }
      }
    },
    "LastBackupStatus": {
      "type": "string",
      "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
      "enum": [
        "Invalid",
        "Healthy",
        "Unhealthy",
        "IRPending"
      ],
      "x-ms-enum": {
        "name": "LastBackupStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Healthy",
            "value": "Healthy"
          },
          {
            "name": "Unhealthy",
            "value": "Unhealthy"
          },
          {
            "name": "IRPending",
            "value": "IRPending"
          }
        ]
      }
    },
    "LastUpdateStatus": {
      "type": "string",
      "enum": [
        "Invalid",
        "NotEnabled",
        "PartiallySucceeded",
        "PartiallyFailed",
        "Failed",
        "Succeeded",
        "Initialized",
        "FirstInitialization"
      ],
      "x-ms-enum": {
        "name": "LastUpdateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "NotEnabled",
            "value": "NotEnabled"
          },
          {
            "name": "PartiallySucceeded",
            "value": "PartiallySucceeded"
          },
          {
            "name": "PartiallyFailed",
            "value": "PartiallyFailed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Initialized",
            "value": "Initialized"
          },
          {
            "name": "FirstInitialization",
            "value": "FirstInitialization"
          }
        ]
      }
    },
    "ListRecoveryPointsRecommendedForMoveRequest": {
      "type": "object",
      "description": "ListRecoveryPointsRecommendedForMoveRequest Request",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Gets the class type."
        },
        "excludedRPList": {
          "type": "array",
          "description": "List of Recovery Points excluded from Move",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogSchedulePolicy": {
      "type": "object",
      "description": "Log policy schedule.",
      "properties": {
        "scheduleFrequencyInMins": {
          "type": "integer",
          "format": "int32",
          "description": "Frequency of the log schedule operation of this policy in minutes."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup schedule.",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "LogSchedulePolicy"
    },
    "LongTermRetentionPolicy": {
      "type": "object",
      "description": "Long term retention policy.",
      "properties": {
        "dailySchedule": {
          "description": "Daily retention schedule of the protection policy.",
          "type": "object",
          "properties": {
            "retentionTimes": {
              "type": "array",
              "description": "Retention times of retention policy.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "retentionDuration": {
              "description": "Retention duration of retention Policy.",
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
                },
                "durationType": {
                  "description": "Retention duration type of retention policy.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Days",
                    "Weeks",
                    "Months",
                    "Years"
                  ],
                  "x-ms-enum": {
                    "name": "RetentionDurationType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Days",
                        "value": "Days"
                      },
                      {
                        "name": "Weeks",
                        "value": "Weeks"
                      },
                      {
                        "name": "Months",
                        "value": "Months"
                      },
                      {
                        "name": "Years",
                        "value": "Years"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "weeklySchedule": {
          "description": "Weekly retention schedule of the protection policy.",
          "type": "object",
          "properties": {
            "daysOfTheWeek": {
              "type": "array",
              "description": "List of days of week for weekly retention policy.",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": false
                }
              }
            },
            "retentionTimes": {
              "type": "array",
              "description": "Retention times of retention policy.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "retentionDuration": {
              "description": "Retention duration of retention Policy.",
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
                },
                "durationType": {
                  "description": "Retention duration type of retention policy.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Days",
                    "Weeks",
                    "Months",
                    "Years"
                  ],
                  "x-ms-enum": {
                    "name": "RetentionDurationType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Days",
                        "value": "Days"
                      },
                      {
                        "name": "Weeks",
                        "value": "Weeks"
                      },
                      {
                        "name": "Months",
                        "value": "Months"
                      },
                      {
                        "name": "Years",
                        "value": "Years"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "monthlySchedule": {
          "description": "Monthly retention schedule of the protection policy.",
          "type": "object",
          "properties": {
            "retentionScheduleFormatType": {
              "description": "Retention schedule format type for monthly retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Daily",
                "Weekly"
              ],
              "x-ms-enum": {
                "name": "RetentionScheduleFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Daily",
                    "value": "Daily"
                  },
                  {
                    "name": "Weekly",
                    "value": "Weekly"
                  }
                ]
              }
            },
            "retentionScheduleDaily": {
              "description": "Daily retention format for monthly retention policy.",
              "type": "object",
              "properties": {
                "daysOfTheMonth": {
                  "type": "array",
                  "description": "List of days of the month.",
                  "items": {
                    "type": "object",
                    "description": "Day of the week.",
                    "properties": {
                      "date": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Date of the month"
                      },
                      "isLast": {
                        "type": "boolean",
                        "description": "Whether Date is last date of month"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "retentionScheduleWeekly": {
              "description": "Weekly retention format for monthly retention policy.",
              "type": "object",
              "properties": {
                "daysOfTheWeek": {
                  "type": "array",
                  "description": "List of days of the week.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "x-ms-enum": {
                      "name": "DayOfWeek",
                      "modelAsString": false
                    }
                  }
                },
                "weeksOfTheMonth": {
                  "type": "array",
                  "description": "List of weeks of month.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "First",
                      "Second",
                      "Third",
                      "Fourth",
                      "Last",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "WeekOfMonth",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "retentionTimes": {
              "type": "array",
              "description": "Retention times of retention policy.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "retentionDuration": {
              "description": "Retention duration of retention Policy.",
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
                },
                "durationType": {
                  "description": "Retention duration type of retention policy.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Days",
                    "Weeks",
                    "Months",
                    "Years"
                  ],
                  "x-ms-enum": {
                    "name": "RetentionDurationType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Days",
                        "value": "Days"
                      },
                      {
                        "name": "Weeks",
                        "value": "Weeks"
                      },
                      {
                        "name": "Months",
                        "value": "Months"
                      },
                      {
                        "name": "Years",
                        "value": "Years"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "yearlySchedule": {
          "description": "Yearly retention schedule of the protection policy.",
          "type": "object",
          "properties": {
            "retentionScheduleFormatType": {
              "description": "Retention schedule format for yearly retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Daily",
                "Weekly"
              ],
              "x-ms-enum": {
                "name": "RetentionScheduleFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Daily",
                    "value": "Daily"
                  },
                  {
                    "name": "Weekly",
                    "value": "Weekly"
                  }
                ]
              }
            },
            "monthsOfYear": {
              "type": "array",
              "description": "List of months of year of yearly retention policy.",
              "items": {
                "type": "string",
                "enum": [
                  "Invalid",
                  "January",
                  "February",
                  "March",
                  "April",
                  "May",
                  "June",
                  "July",
                  "August",
                  "September",
                  "October",
                  "November",
                  "December"
                ],
                "x-ms-enum": {
                  "name": "MonthOfYear",
                  "modelAsString": false
                }
              }
            },
            "retentionScheduleDaily": {
              "description": "Daily retention format for yearly retention policy.",
              "type": "object",
              "properties": {
                "daysOfTheMonth": {
                  "type": "array",
                  "description": "List of days of the month.",
                  "items": {
                    "type": "object",
                    "description": "Day of the week.",
                    "properties": {
                      "date": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Date of the month"
                      },
                      "isLast": {
                        "type": "boolean",
                        "description": "Whether Date is last date of month"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "retentionScheduleWeekly": {
              "description": "Weekly retention format for yearly retention policy.",
              "type": "object",
              "properties": {
                "daysOfTheWeek": {
                  "type": "array",
                  "description": "List of days of the week.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "x-ms-enum": {
                      "name": "DayOfWeek",
                      "modelAsString": false
                    }
                  }
                },
                "weeksOfTheMonth": {
                  "type": "array",
                  "description": "List of weeks of month.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "First",
                      "Second",
                      "Third",
                      "Fourth",
                      "Last",
                      "Invalid"
                    ],
                    "x-ms-enum": {
                      "name": "WeekOfMonth",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "retentionTimes": {
              "type": "array",
              "description": "Retention times of retention policy.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "retentionDuration": {
              "description": "Retention duration of retention Policy.",
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
                },
                "durationType": {
                  "description": "Retention duration type of retention policy.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "Days",
                    "Weeks",
                    "Months",
                    "Years"
                  ],
                  "x-ms-enum": {
                    "name": "RetentionDurationType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Invalid",
                        "value": "Invalid"
                      },
                      {
                        "name": "Days",
                        "value": "Days"
                      },
                      {
                        "name": "Weeks",
                        "value": "Weeks"
                      },
                      {
                        "name": "Months",
                        "value": "Months"
                      },
                      {
                        "name": "Years",
                        "value": "Years"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for retention policy.",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "LongTermRetentionPolicy"
    },
    "LongTermSchedulePolicy": {
      "type": "object",
      "description": "Long term policy schedule.",
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup schedule.",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "LongTermSchedulePolicy"
    },
    "MABContainerHealthDetails": {
      "type": "object",
      "description": "MAB workload-specific Health Details.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Health Code"
        },
        "title": {
          "type": "string",
          "description": "Health Title"
        },
        "message": {
          "type": "string",
          "description": "Health Message"
        },
        "recommendations": {
          "type": "array",
          "description": "Health Recommended Actions",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MabContainer": {
      "type": "object",
      "description": "Container with items backed up using MAB backup engine.",
      "properties": {
        "canReRegister": {
          "type": "boolean",
          "description": "Can the container be registered one more time."
        },
        "containerId": {
          "type": "integer",
          "format": "int64",
          "description": "ContainerID represents the container."
        },
        "protectedItemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of items backed up in this container."
        },
        "agentVersion": {
          "type": "string",
          "description": "Agent version of this container."
        },
        "extendedInfo": {
          "description": "Additional information for this container",
          "type": "object",
          "properties": {
            "lastRefreshedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Time stamp when this container was refreshed."
            },
            "backupItemType": {
              "description": "Type of backup items associated with this container.",
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "BackupItemType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "backupItems": {
              "type": "array",
              "description": "List of backup items associated with this container.",
              "items": {
                "type": "string"
              }
            },
            "policyName": {
              "type": "string",
              "description": "Backup policy associated with this container."
            },
            "lastBackupStatus": {
              "type": "string",
              "description": "Latest backup status of this container."
            }
          }
        },
        "mabContainerHealthDetails": {
          "type": "array",
          "description": "Health details on this mab container.",
          "items": {
            "type": "object",
            "description": "MAB workload-specific Health Details.",
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32",
                "description": "Health Code"
              },
              "title": {
                "type": "string",
                "description": "Health Title"
              },
              "message": {
                "type": "string",
                "description": "Health Message"
              },
              "recommendations": {
                "type": "array",
                "description": "Health Recommended Actions",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "containerHealthState": {
          "type": "string",
          "description": "Health state of mab container."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            }
          },
          "discriminator": "containerType",
          "required": [
            "containerType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Windows"
    },
    "MabContainerExtendedInfo": {
      "type": "object",
      "description": "Additional information of the container.",
      "properties": {
        "lastRefreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp when this container was refreshed."
        },
        "backupItemType": {
          "description": "Type of backup items associated with this container.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "BackupItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "backupItems": {
          "type": "array",
          "description": "List of backup items associated with this container.",
          "items": {
            "type": "string"
          }
        },
        "policyName": {
          "type": "string",
          "description": "Backup policy associated with this container."
        },
        "lastBackupStatus": {
          "type": "string",
          "description": "Latest backup status of this container."
        }
      }
    },
    "MabErrorInfo": {
      "type": "object",
      "description": "MAB workload-specific error information.",
      "properties": {
        "errorString": {
          "type": "string",
          "description": "Localized error string.",
          "readOnly": true
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "MabFileFolderProtectedItem": {
      "type": "object",
      "description": "MAB workload-specific backup item.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of this backup item."
        },
        "computerName": {
          "type": "string",
          "description": "Name of the computer associated with this backup item."
        },
        "lastBackupStatus": {
          "type": "string",
          "description": "Status of last backup operation."
        },
        "lastBackupTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item."
        },
        "protectionState": {
          "type": "string",
          "description": "Protected, ProtectionStopped, IRPending or ProtectionError"
        },
        "deferredDeleteSyncTimeInUTC": {
          "type": "integer",
          "format": "int64",
          "description": "Sync time for deferred deletion in UTC"
        },
        "extendedInfo": {
          "description": "Additional information with this backup item.",
          "type": "object",
          "properties": {
            "lastRefreshedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last time when the agent data synced to service."
            },
            "oldestRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "The oldest backup copy available."
            },
            "recoveryPointCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of backup copies associated with the backup item."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup items.",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        }
      ],
      "x-ms-discriminator-value": "MabFileFolderProtectedItem"
    },
    "MabFileFolderProtectedItemExtendedInfo": {
      "type": "object",
      "description": "Additional information on the backed up item.",
      "properties": {
        "lastRefreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last time when the agent data synced to service."
        },
        "oldestRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "The oldest backup copy available."
        },
        "recoveryPointCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of backup copies associated with the backup item."
        }
      }
    },
    "MabJob": {
      "type": "object",
      "description": "MAB workload-specific job.",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time taken by job to run."
        },
        "actionsInfo": {
          "type": "array",
          "description": "The state/actions applicable on jobs like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "mabServerName": {
          "type": "string",
          "description": "Name of server protecting the DS."
        },
        "mabServerType": {
          "description": "Server type of MAB container.",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer"
          ],
          "x-ms-enum": {
            "name": "MabServerType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Unknown",
                "value": "Unknown"
              },
              {
                "name": "IaasVMContainer",
                "value": "IaasVMContainer"
              },
              {
                "name": "IaasVMServiceContainer",
                "value": "IaasVMServiceContainer"
              },
              {
                "name": "DPMContainer",
                "value": "DPMContainer"
              },
              {
                "name": "AzureBackupServerContainer",
                "value": "AzureBackupServerContainer"
              },
              {
                "name": "MABContainer",
                "value": "MABContainer"
              },
              {
                "name": "Cluster",
                "value": "Cluster"
              },
              {
                "name": "AzureSqlContainer",
                "value": "AzureSqlContainer"
              },
              {
                "name": "Windows",
                "value": "Windows"
              },
              {
                "name": "VCenter",
                "value": "VCenter"
              },
              {
                "name": "VMAppContainer",
                "value": "VMAppContainer"
              },
              {
                "name": "SQLAGWorkLoadContainer",
                "value": "SQLAGWorkLoadContainer"
              },
              {
                "name": "StorageContainer",
                "value": "StorageContainer"
              },
              {
                "name": "GenericContainer",
                "value": "GenericContainer"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Workload type of backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "The errors.",
          "items": {
            "type": "object",
            "description": "MAB workload-specific error information.",
            "properties": {
              "errorString": {
                "type": "string",
                "description": "Localized error string.",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "extendedInfo": {
          "description": "Additional information on the job.",
          "type": "object",
          "properties": {
            "tasksList": {
              "type": "array",
              "description": "List of tasks for this job.",
              "items": {
                "type": "object",
                "description": "MAB workload-specific job task details.",
                "properties": {
                  "taskId": {
                    "type": "string",
                    "description": "The task display name."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time."
                  },
                  "duration": {
                    "type": "string",
                    "format": "duration",
                    "description": "Time elapsed for task."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status."
                  }
                }
              },
              "x-ms-identifiers": [
                "taskId"
              ]
            },
            "propertyBag": {
              "type": "object",
              "description": "The job properties.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dynamicErrorMessage": {
              "type": "string",
              "description": "Non localized error message specific to this job."
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "MabJob"
    },
    "MabJobExtendedInfo": {
      "type": "object",
      "description": "Additional information for the MAB workload-specific job.",
      "properties": {
        "tasksList": {
          "type": "array",
          "description": "List of tasks for this job.",
          "items": {
            "type": "object",
            "description": "MAB workload-specific job task details.",
            "properties": {
              "taskId": {
                "type": "string",
                "description": "The task display name."
              },
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "The start time."
              },
              "endTime": {
                "type": "string",
                "format": "date-time",
                "description": "The end time."
              },
              "duration": {
                "type": "string",
                "format": "duration",
                "description": "Time elapsed for task."
              },
              "status": {
                "type": "string",
                "description": "The status."
              }
            }
          },
          "x-ms-identifiers": [
            "taskId"
          ]
        },
        "propertyBag": {
          "type": "object",
          "description": "The job properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "type": "string",
          "description": "Non localized error message specific to this job."
        }
      }
    },
    "MabJobTaskDetails": {
      "type": "object",
      "description": "MAB workload-specific job task details.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The task display name."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed for task."
        },
        "status": {
          "type": "string",
          "description": "The status."
        }
      }
    },
    "MabProtectionPolicy": {
      "type": "object",
      "description": "Mab container-specific backup policy.",
      "properties": {
        "schedulePolicy": {
          "type": "object",
          "description": "Base class for backup schedule.",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        },
        "retentionPolicy": {
          "type": "object",
          "description": "Base class for retention policy.",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        }
      ],
      "x-ms-discriminator-value": "MAB"
    },
    "MabServerType": {
      "type": "string",
      "description": "Server type of MAB container.",
      "enum": [
        "Invalid",
        "Unknown",
        "IaasVMContainer",
        "IaasVMServiceContainer",
        "DPMContainer",
        "AzureBackupServerContainer",
        "MABContainer",
        "Cluster",
        "AzureSqlContainer",
        "Windows",
        "VCenter",
        "VMAppContainer",
        "SQLAGWorkLoadContainer",
        "StorageContainer",
        "GenericContainer"
      ],
      "x-ms-enum": {
        "name": "MabServerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "IaasVMContainer",
            "value": "IaasVMContainer"
          },
          {
            "name": "IaasVMServiceContainer",
            "value": "IaasVMServiceContainer"
          },
          {
            "name": "DPMContainer",
            "value": "DPMContainer"
          },
          {
            "name": "AzureBackupServerContainer",
            "value": "AzureBackupServerContainer"
          },
          {
            "name": "MABContainer",
            "value": "MABContainer"
          },
          {
            "name": "Cluster",
            "value": "Cluster"
          },
          {
            "name": "AzureSqlContainer",
            "value": "AzureSqlContainer"
          },
          {
            "name": "Windows",
            "value": "Windows"
          },
          {
            "name": "VCenter",
            "value": "VCenter"
          },
          {
            "name": "VMAppContainer",
            "value": "VMAppContainer"
          },
          {
            "name": "SQLAGWorkLoadContainer",
            "value": "SQLAGWorkLoadContainer"
          },
          {
            "name": "StorageContainer",
            "value": "StorageContainer"
          },
          {
            "name": "GenericContainer",
            "value": "GenericContainer"
          }
        ]
      }
    },
    "MonthOfYear": {
      "type": "string",
      "enum": [
        "Invalid",
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      "x-ms-enum": {
        "name": "MonthOfYear",
        "modelAsString": false
      }
    },
    "MonthlyRetentionSchedule": {
      "type": "object",
      "description": "Monthly retention schedule.",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format type for monthly retention policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Daily",
                "value": "Daily"
              },
              {
                "name": "Weekly",
                "value": "Weekly"
              }
            ]
          }
        },
        "retentionScheduleDaily": {
          "description": "Daily retention format for monthly retention policy.",
          "type": "object",
          "properties": {
            "daysOfTheMonth": {
              "type": "array",
              "description": "List of days of the month.",
              "items": {
                "type": "object",
                "description": "Day of the week.",
                "properties": {
                  "date": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Date of the month"
                  },
                  "isLast": {
                    "type": "boolean",
                    "description": "Whether Date is last date of month"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "retentionScheduleWeekly": {
          "description": "Weekly retention format for monthly retention policy.",
          "type": "object",
          "properties": {
            "daysOfTheWeek": {
              "type": "array",
              "description": "List of days of the week.",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": false
                }
              }
            },
            "weeksOfTheMonth": {
              "type": "array",
              "description": "List of weeks of month.",
              "items": {
                "type": "string",
                "enum": [
                  "First",
                  "Second",
                  "Third",
                  "Fourth",
                  "Last",
                  "Invalid"
                ],
                "x-ms-enum": {
                  "name": "WeekOfMonth",
                  "modelAsString": false
                }
              }
            }
          }
        },
        "retentionTimes": {
          "type": "array",
          "description": "Retention times of retention policy.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "retentionDuration": {
          "description": "Retention duration of retention Policy.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
            },
            "durationType": {
              "description": "Retention duration type of retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Days",
                "Weeks",
                "Months",
                "Years"
              ],
              "x-ms-enum": {
                "name": "RetentionDurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Days",
                    "value": "Days"
                  },
                  {
                    "name": "Weeks",
                    "value": "Weeks"
                  },
                  {
                    "name": "Months",
                    "value": "Months"
                  },
                  {
                    "name": "Years",
                    "value": "Years"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "MoveRPAcrossTiersRequest": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Gets the class type."
        },
        "sourceTierType": {
          "description": "Source tier from where RP needs to be moved",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "targetTierType": {
          "description": "Target tier where RP needs to be moved",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        }
      }
    },
    "OperationResultInfo": {
      "type": "object",
      "description": "Operation result info.",
      "properties": {
        "jobList": {
          "type": "array",
          "description": "List of jobs created by this operation.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for operation result info.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "OperationResultInfo"
    },
    "OperationResultInfoBase": {
      "type": "object",
      "description": "Base class for operation result info.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "OperationResultInfoBaseResource": {
      "type": "object",
      "description": "Base class for operation result info.",
      "properties": {
        "statusCode": {
          "description": "HTTP Status Code of the operation.",
          "type": "string",
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "modelAsString": false
          }
        },
        "headers": {
          "type": "object",
          "description": "HTTP headers associated with this operation.",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "operation": {
          "description": "OperationResultInfoBaseResource operation",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "Operation status.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "status": {
          "description": "Operation status.",
          "type": "string",
          "enum": [
            "Invalid",
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "OperationStatusValues",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Operation start time. Format: ISO-8601."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Operation end time. Format: ISO-8601."
        },
        "error": {
          "description": "Error information related to this operation.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code of the operation failure."
            },
            "message": {
              "type": "string",
              "description": "Error message displayed if the operation failure."
            }
          }
        },
        "properties": {
          "description": "Additional information associated with this operation.",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      }
    },
    "OperationStatusError": {
      "type": "object",
      "description": "Error information associated with operation status call.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code of the operation failure."
        },
        "message": {
          "type": "string",
          "description": "Error message displayed if the operation failure."
        }
      }
    },
    "OperationStatusExtendedInfo": {
      "type": "object",
      "description": "Base class for additional information of operation status.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "OperationStatusJobExtendedInfo": {
      "type": "object",
      "description": "Operation status job extended info.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "ID of the job created for this protected item."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for additional information of operation status.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
    },
    "OperationStatusJobsExtendedInfo": {
      "type": "object",
      "description": "Operation status extended info for list of jobs.",
      "properties": {
        "jobIds": {
          "type": "array",
          "description": "IDs of the jobs created for the protected item.",
          "items": {
            "type": "string"
          }
        },
        "failedJobsError": {
          "type": "object",
          "description": "Stores all the failed jobs along with the corresponding error codes.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for additional information of operation status.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
    },
    "OperationStatusProvisionILRExtendedInfo": {
      "type": "object",
      "description": "Operation status extended info for ILR provision action.",
      "properties": {
        "recoveryTarget": {
          "description": "Target details for file / folder restore.",
          "type": "object",
          "properties": {
            "clientScripts": {
              "type": "array",
              "description": "List of client scripts.",
              "items": {
                "type": "object",
                "description": "Client script details for file / folder restore.",
                "properties": {
                  "scriptContent": {
                    "type": "string",
                    "description": "File content of the client script for file / folder restore."
                  },
                  "scriptExtension": {
                    "type": "string",
                    "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc."
                  },
                  "osType": {
                    "type": "string",
                    "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works."
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used"
                  },
                  "scriptNameSuffix": {
                    "type": "string",
                    "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\nIf its null or empty then , ignore it."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for additional information of operation status.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
    },
    "OperationStatusValidateOperationExtendedInfo": {
      "type": "object",
      "description": "Operation status extended info for ValidateOperation action.",
      "properties": {
        "validateOperationResponse": {
          "description": "Gets the validation operation response",
          "type": "object",
          "properties": {
            "validationResults": {
              "type": "array",
              "description": "Gets the validation result",
              "items": {
                "type": "object",
                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code.",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Error Message related to the Code.",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "List of recommendation strings.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "code"
              ]
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for additional information of operation status.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "OperationStatusValidateOperationExtendedInfo"
    },
    "OperationStatusValues": {
      "type": "string",
      "description": "Operation status.",
      "enum": [
        "Invalid",
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationStatusValues",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "OperationType": {
      "type": "string",
      "description": "Re-Do Operation",
      "enum": [
        "Invalid",
        "Register",
        "Reregister",
        "Rehydrate"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Register",
            "value": "Register"
          },
          {
            "name": "Reregister",
            "value": "Reregister"
          },
          {
            "name": "Rehydrate",
            "value": "Rehydrate"
          }
        ]
      }
    },
    "OperationWorkerResponse": {
      "type": "object",
      "description": "This is the base class for operation result responses.",
      "properties": {
        "statusCode": {
          "description": "HTTP Status Code of the operation.",
          "type": "string",
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "modelAsString": false
          }
        },
        "headers": {
          "type": "object",
          "description": "HTTP headers associated with this operation.",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      }
    },
    "OverwriteOptions": {
      "type": "string",
      "description": "Can Overwrite if Target DataBase already exists",
      "enum": [
        "Invalid",
        "FailOnConflict",
        "Overwrite"
      ],
      "x-ms-enum": {
        "name": "OverwriteOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "FailOnConflict",
            "value": "FailOnConflict"
          },
          {
            "name": "Overwrite",
            "value": "Overwrite"
          }
        ]
      }
    },
    "PointInTimeRange": {
      "type": "object",
      "description": "Provides details for log ranges",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the time range for log recovery."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the time range for log recovery."
        }
      }
    },
    "PolicyType": {
      "type": "string",
      "description": "Type of backup policy type",
      "enum": [
        "Invalid",
        "Full",
        "Differential",
        "Log",
        "CopyOnlyFull",
        "Incremental",
        "SnapshotFull",
        "SnapshotCopyOnlyFull"
      ],
      "x-ms-enum": {
        "name": "PolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Full",
            "value": "Full"
          },
          {
            "name": "Differential",
            "value": "Differential"
          },
          {
            "name": "Log",
            "value": "Log"
          },
          {
            "name": "CopyOnlyFull",
            "value": "CopyOnlyFull"
          },
          {
            "name": "Incremental",
            "value": "Incremental"
          },
          {
            "name": "SnapshotFull",
            "value": "SnapshotFull"
          },
          {
            "name": "SnapshotCopyOnlyFull",
            "value": "SnapshotCopyOnlyFull"
          }
        ]
      }
    },
    "PreBackupValidation": {
      "type": "object",
      "description": "Pre-backup validation for Azure VM Workload provider.",
      "properties": {
        "status": {
          "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
          "type": "string",
          "enum": [
            "Invalid",
            "Success",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "InquiryStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Success",
                "value": "Success"
              },
              {
                "name": "Failed",
                "value": "Failed"
              }
            ]
          }
        },
        "code": {
          "type": "string",
          "description": "Error code of protectable item"
        },
        "message": {
          "type": "string",
          "description": "Message corresponding to the error code for the protectable item"
        }
      }
    },
    "PreValidateEnableBackupRequest": {
      "type": "object",
      "description": "Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.\nIt will validate followings\n1. Vault capacity\n2. VM is already protected\n3. Any VM related configuration passed in properties.",
      "properties": {
        "resourceType": {
          "description": "ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "resourceId": {
          "type": "string",
          "description": "ARM Virtual Machine Id"
        },
        "vaultId": {
          "type": "string",
          "description": "ARM id of the Recovery Services Vault"
        },
        "properties": {
          "type": "string",
          "description": "Configuration of VM if any needs to be validated like OS type etc"
        }
      }
    },
    "PreValidateEnableBackupResponse": {
      "type": "object",
      "description": "Response contract for enable backup validation request",
      "properties": {
        "status": {
          "description": "Validation Status",
          "type": "string",
          "enum": [
            "Invalid",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed"
              }
            ]
          }
        },
        "errorCode": {
          "type": "string",
          "description": "Response error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Response error message"
        },
        "recommendation": {
          "type": "string",
          "description": "Recommended action for user"
        },
        "containerName": {
          "type": "string",
          "description": "Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required\nfor portal"
        },
        "protectedItemName": {
          "type": "string",
          "description": "Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is required for portal"
        }
      }
    },
    "PrepareDataMoveRequest": {
      "type": "object",
      "description": "Prepare DataMove Request",
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "ARM Id of target vault"
        },
        "targetRegion": {
          "type": "string",
          "description": "Target Region"
        },
        "dataMoveLevel": {
          "description": "DataMove Level",
          "type": "string",
          "enum": [
            "Invalid",
            "Vault",
            "Container"
          ],
          "x-ms-enum": {
            "name": "DataMoveLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Vault",
                "value": "Vault"
              },
              {
                "name": "Container",
                "value": "Container"
              }
            ]
          }
        },
        "sourceContainerArmIds": {
          "type": "array",
          "description": "Source Container ArmIds\nThis needs to be populated only if DataMoveLevel is set to container",
          "items": {
            "type": "string"
          }
        },
        "ignoreMoved": {
          "type": "boolean",
          "description": "Ignore the artifacts which are already moved."
        }
      },
      "required": [
        "targetResourceId",
        "targetRegion",
        "dataMoveLevel"
      ]
    },
    "PrepareDataMoveResponse": {
      "type": "object",
      "description": "Prepare DataMove Response",
      "properties": {
        "correlationId": {
          "type": "string",
          "description": "Co-relationId for move operation"
        },
        "sourceVaultProperties": {
          "type": "object",
          "description": "Source Vault Properties",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Operation result response for Vault Storage Config",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "PrepareDataMoveResponse"
    },
    "PrivateEndpointConnectionResource": {
      "type": "object",
      "description": "Private Endpoint Connection Response Properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "PrivateEndpointConnectionResource properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Gets or sets provisioning state of the private endpoint connection",
              "type": "string",
              "enum": [
                "Succeeded",
                "Deleting",
                "Failed",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending"
                  }
                ]
              }
            },
            "privateEndpoint": {
              "description": "Gets or sets private endpoint associated with the private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Gets or sets id"
                }
              }
            },
            "groupIds": {
              "type": "array",
              "description": "Group Ids for the Private Endpoint",
              "items": {
                "type": "string",
                "description": "GroupId for the PrivateEndpointConnection - AzureBackup, AzureBackup_secondary or AzureSiteRecovery",
                "enum": [
                  "AzureBackup",
                  "AzureBackup_secondary",
                  "AzureSiteRecovery"
                ],
                "x-ms-enum": {
                  "name": "VaultSubResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AzureBackup",
                      "value": "AzureBackup"
                    },
                    {
                      "name": "AzureBackup_secondary",
                      "value": "AzureBackup_secondary"
                    },
                    {
                      "name": "AzureSiteRecovery",
                      "value": "AzureSiteRecovery"
                    }
                  ]
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Gets or sets private link service connection state",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Gets or sets the status",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateEndpointConnectionStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pending",
                        "value": "Pending"
                      },
                      {
                        "name": "Approved",
                        "value": "Approved"
                      },
                      {
                        "name": "Rejected",
                        "value": "Rejected"
                      },
                      {
                        "name": "Disconnected",
                        "value": "Disconnected"
                      }
                    ]
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Gets or sets description"
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "Gets or sets actions required"
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ProtectableContainer": {
      "type": "object",
      "description": "Protectable Container Class.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "backupManagementType": {
          "description": "Type of backup management for the container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "protectableContainerType": {
          "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "Microsoft.ClassicCompute/virtualMachines",
            "Microsoft.Compute/virtualMachines",
            "AzureWorkloadContainer"
          ],
          "x-ms-enum": {
            "name": "ProtectableContainerType",
            "modelAsString": false
          }
        },
        "healthStatus": {
          "type": "string",
          "description": "Status of health of the container."
        },
        "containerId": {
          "type": "string",
          "description": "Fabric Id of the container such as ARM Id."
        }
      },
      "discriminator": "protectableContainerType",
      "required": [
        "protectableContainerType"
      ]
    },
    "ProtectableContainerResource": {
      "type": "object",
      "description": "Protectable Container Class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "ProtectableContainerResource properties",
          "type": "object",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "protectableContainerType": {
              "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerId": {
              "type": "string",
              "description": "Fabric Id of the container such as ARM Id."
            }
          },
          "discriminator": "protectableContainerType",
          "required": [
            "protectableContainerType"
          ]
        }
      }
    },
    "ProtectableContainerResourceList": {
      "type": "object",
      "description": "List of ProtectableContainer resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Protectable Container Class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              },
              "properties": {
                "description": "ProtectableContainerResource properties",
                "type": "object",
                "properties": {
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly name of the container."
                  },
                  "backupManagementType": {
                    "description": "Type of backup management for the container.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "protectableContainerType": {
                    "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Unknown",
                      "IaasVMContainer",
                      "IaasVMServiceContainer",
                      "DPMContainer",
                      "AzureBackupServerContainer",
                      "MABContainer",
                      "Cluster",
                      "AzureSqlContainer",
                      "Windows",
                      "VCenter",
                      "VMAppContainer",
                      "SQLAGWorkLoadContainer",
                      "StorageContainer",
                      "GenericContainer",
                      "Microsoft.ClassicCompute/virtualMachines",
                      "Microsoft.Compute/virtualMachines",
                      "AzureWorkloadContainer"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectableContainerType",
                      "modelAsString": false
                    }
                  },
                  "healthStatus": {
                    "type": "string",
                    "description": "Status of health of the container."
                  },
                  "containerId": {
                    "type": "string",
                    "description": "Fabric Id of the container such as ARM Id."
                  }
                },
                "discriminator": "protectableContainerType",
                "required": [
                  "protectableContainerType"
                ]
              }
            }
          }
        }
      }
    },
    "ProtectableContainerType": {
      "type": "string",
      "description": "Type of the container. The value of this property for\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
      "enum": [
        "Invalid",
        "Unknown",
        "IaasVMContainer",
        "IaasVMServiceContainer",
        "DPMContainer",
        "AzureBackupServerContainer",
        "MABContainer",
        "Cluster",
        "AzureSqlContainer",
        "Windows",
        "VCenter",
        "VMAppContainer",
        "SQLAGWorkLoadContainer",
        "StorageContainer",
        "GenericContainer",
        "Microsoft.ClassicCompute/virtualMachines",
        "Microsoft.Compute/virtualMachines",
        "AzureWorkloadContainer"
      ],
      "x-ms-enum": {
        "name": "ProtectableContainerType",
        "modelAsString": false
      }
    },
    "ProtectedItem": {
      "type": "object",
      "description": "Base class for backup items.",
      "properties": {
        "protectedItemType": {
          "type": "string",
          "description": "backup item type."
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "containerName": {
          "type": "string",
          "description": "Unique name of container"
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "lastRecoveryPoint": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the last (latest) backup copy was created for this backup item."
        },
        "backupSetName": {
          "type": "string",
          "description": "Name of the backup set the backup item belongs to"
        },
        "createMode": {
          "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
          "type": "string",
          "enum": [
            "Invalid",
            "Default",
            "Recover"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Recover",
                "value": "Recover"
              }
            ]
          }
        },
        "deferredDeleteTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Time for deferred deletion in UTC"
        },
        "isScheduledForDeferredDelete": {
          "type": "boolean",
          "description": "Flag to identify whether the DS is scheduled for deferred delete"
        },
        "deferredDeleteTimeRemaining": {
          "type": "string",
          "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
        },
        "isDeferredDeleteScheduleUpcoming": {
          "type": "boolean",
          "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
        },
        "isRehydrate": {
          "type": "boolean",
          "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "Flag to identify whether datasource is protected in archive"
        },
        "policyName": {
          "type": "string",
          "description": "Name of the policy used for protection"
        },
        "softDeleteRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Soft delete retention period in days"
        },
        "vaultId": {
          "type": "string",
          "description": "ID of the vault which protects this item",
          "readOnly": true
        }
      },
      "discriminator": "protectedItemType",
      "required": [
        "protectedItemType"
      ]
    },
    "ProtectedItemHealthStatus": {
      "type": "string",
      "description": "Health status of the backup item, evaluated based on last heartbeat received",
      "enum": [
        "Invalid",
        "Healthy",
        "Unhealthy",
        "NotReachable",
        "IRPending"
      ],
      "x-ms-enum": {
        "name": "ProtectedItemHealthStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Healthy",
            "value": "Healthy"
          },
          {
            "name": "Unhealthy",
            "value": "Unhealthy"
          },
          {
            "name": "NotReachable",
            "value": "NotReachable"
          },
          {
            "name": "IRPending",
            "value": "IRPending"
          }
        ]
      }
    },
    "ProtectedItemQueryObject": {
      "type": "object",
      "description": "Filters to list backup items.",
      "properties": {
        "healthState": {
          "description": "Health State for the backed up item.",
          "type": "string",
          "enum": [
            "Passed",
            "ActionRequired",
            "ActionSuggested",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "HealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed"
              },
              {
                "name": "ActionRequired",
                "value": "ActionRequired"
              },
              {
                "name": "ActionSuggested",
                "value": "ActionSuggested"
              },
              {
                "name": "Invalid",
                "value": "Invalid"
              }
            ]
          }
        },
        "backupManagementType": {
          "description": "Backup management type for the backed up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "itemType": {
          "description": "Type of workload this item represents.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        },
        "policyName": {
          "type": "string",
          "description": "Backup policy name associated with the backup item."
        },
        "containerName": {
          "type": "string",
          "description": "Name of the container."
        },
        "backupEngineName": {
          "type": "string",
          "description": "Backup Engine name"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of protected item"
        },
        "fabricName": {
          "type": "string",
          "description": "Name of the fabric."
        },
        "backupSetName": {
          "type": "string",
          "description": "Name of the backup set."
        }
      }
    },
    "ProtectedItemResource": {
      "type": "object",
      "description": "Base class for backup items.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ProtectedItemResource properties",
          "type": "object",
          "properties": {
            "protectedItemType": {
              "type": "string",
              "description": "backup item type."
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "workloadType": {
              "description": "Type of workload this item represents.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "VM",
                "FileFolder",
                "AzureSqlDb",
                "SQLDB",
                "Exchange",
                "Sharepoint",
                "VMwareVM",
                "SystemState",
                "Client",
                "GenericDataSource",
                "SQLDataBase",
                "AzureFileShare",
                "SAPHanaDatabase",
                "SAPAseDatabase",
                "SAPHanaDBInstance"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "VM",
                    "value": "VM"
                  },
                  {
                    "name": "FileFolder",
                    "value": "FileFolder"
                  },
                  {
                    "name": "AzureSqlDb",
                    "value": "AzureSqlDb"
                  },
                  {
                    "name": "SQLDB",
                    "value": "SQLDB"
                  },
                  {
                    "name": "Exchange",
                    "value": "Exchange"
                  },
                  {
                    "name": "Sharepoint",
                    "value": "Sharepoint"
                  },
                  {
                    "name": "VMwareVM",
                    "value": "VMwareVM"
                  },
                  {
                    "name": "SystemState",
                    "value": "SystemState"
                  },
                  {
                    "name": "Client",
                    "value": "Client"
                  },
                  {
                    "name": "GenericDataSource",
                    "value": "GenericDataSource"
                  },
                  {
                    "name": "SQLDataBase",
                    "value": "SQLDataBase"
                  },
                  {
                    "name": "AzureFileShare",
                    "value": "AzureFileShare"
                  },
                  {
                    "name": "SAPHanaDatabase",
                    "value": "SAPHanaDatabase"
                  },
                  {
                    "name": "SAPAseDatabase",
                    "value": "SAPAseDatabase"
                  },
                  {
                    "name": "SAPHanaDBInstance",
                    "value": "SAPHanaDBInstance"
                  }
                ]
              }
            },
            "containerName": {
              "type": "string",
              "description": "Unique name of container"
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "lastRecoveryPoint": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the last (latest) backup copy was created for this backup item."
            },
            "backupSetName": {
              "type": "string",
              "description": "Name of the backup set the backup item belongs to"
            },
            "createMode": {
              "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
              "type": "string",
              "enum": [
                "Invalid",
                "Default",
                "Recover"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Recover",
                    "value": "Recover"
                  }
                ]
              }
            },
            "deferredDeleteTimeInUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Time for deferred deletion in UTC"
            },
            "isScheduledForDeferredDelete": {
              "type": "boolean",
              "description": "Flag to identify whether the DS is scheduled for deferred delete"
            },
            "deferredDeleteTimeRemaining": {
              "type": "string",
              "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
            },
            "isDeferredDeleteScheduleUpcoming": {
              "type": "boolean",
              "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
            },
            "isRehydrate": {
              "type": "boolean",
              "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            },
            "isArchiveEnabled": {
              "type": "boolean",
              "description": "Flag to identify whether datasource is protected in archive"
            },
            "policyName": {
              "type": "string",
              "description": "Name of the policy used for protection"
            },
            "softDeleteRetentionPeriodInDays": {
              "type": "integer",
              "format": "int32",
              "description": "Soft delete retention period in days"
            },
            "vaultId": {
              "type": "string",
              "description": "ID of the vault which protects this item",
              "readOnly": true
            }
          },
          "discriminator": "protectedItemType",
          "required": [
            "protectedItemType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ProtectedItemResourceList": {
      "type": "object",
      "description": "List of ProtectedItem resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup items.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ProtectedItemResource properties",
                "type": "object",
                "properties": {
                  "protectedItemType": {
                    "type": "string",
                    "description": "backup item type."
                  },
                  "backupManagementType": {
                    "description": "Type of backup management for the backed up item.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "workloadType": {
                    "description": "Type of workload this item represents.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "VM",
                      "FileFolder",
                      "AzureSqlDb",
                      "SQLDB",
                      "Exchange",
                      "Sharepoint",
                      "VMwareVM",
                      "SystemState",
                      "Client",
                      "GenericDataSource",
                      "SQLDataBase",
                      "AzureFileShare",
                      "SAPHanaDatabase",
                      "SAPAseDatabase",
                      "SAPHanaDBInstance"
                    ],
                    "x-ms-enum": {
                      "name": "DataSourceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "VM",
                          "value": "VM"
                        },
                        {
                          "name": "FileFolder",
                          "value": "FileFolder"
                        },
                        {
                          "name": "AzureSqlDb",
                          "value": "AzureSqlDb"
                        },
                        {
                          "name": "SQLDB",
                          "value": "SQLDB"
                        },
                        {
                          "name": "Exchange",
                          "value": "Exchange"
                        },
                        {
                          "name": "Sharepoint",
                          "value": "Sharepoint"
                        },
                        {
                          "name": "VMwareVM",
                          "value": "VMwareVM"
                        },
                        {
                          "name": "SystemState",
                          "value": "SystemState"
                        },
                        {
                          "name": "Client",
                          "value": "Client"
                        },
                        {
                          "name": "GenericDataSource",
                          "value": "GenericDataSource"
                        },
                        {
                          "name": "SQLDataBase",
                          "value": "SQLDataBase"
                        },
                        {
                          "name": "AzureFileShare",
                          "value": "AzureFileShare"
                        },
                        {
                          "name": "SAPHanaDatabase",
                          "value": "SAPHanaDatabase"
                        },
                        {
                          "name": "SAPAseDatabase",
                          "value": "SAPAseDatabase"
                        },
                        {
                          "name": "SAPHanaDBInstance",
                          "value": "SAPHanaDBInstance"
                        }
                      ]
                    }
                  },
                  "containerName": {
                    "type": "string",
                    "description": "Unique name of container"
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM ID of the resource to be backed up."
                  },
                  "policyId": {
                    "type": "string",
                    "description": "ID of the backup policy with which this item is backed up."
                  },
                  "lastRecoveryPoint": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the last (latest) backup copy was created for this backup item."
                  },
                  "backupSetName": {
                    "type": "string",
                    "description": "Name of the backup set the backup item belongs to"
                  },
                  "createMode": {
                    "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Default",
                      "Recover"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "Default",
                          "value": "Default"
                        },
                        {
                          "name": "Recover",
                          "value": "Recover"
                        }
                      ]
                    }
                  },
                  "deferredDeleteTimeInUTC": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for deferred deletion in UTC"
                  },
                  "isScheduledForDeferredDelete": {
                    "type": "boolean",
                    "description": "Flag to identify whether the DS is scheduled for deferred delete"
                  },
                  "deferredDeleteTimeRemaining": {
                    "type": "string",
                    "description": "Time remaining before the DS marked for deferred delete is permanently deleted"
                  },
                  "isDeferredDeleteScheduleUpcoming": {
                    "type": "boolean",
                    "description": "Flag to identify whether the deferred deleted DS is to be purged soon"
                  },
                  "isRehydrate": {
                    "type": "boolean",
                    "description": "Flag to identify that deferred deleted DS is to be moved into Pause state"
                  },
                  "resourceGuardOperationRequests": {
                    "type": "array",
                    "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isArchiveEnabled": {
                    "type": "boolean",
                    "description": "Flag to identify whether datasource is protected in archive"
                  },
                  "policyName": {
                    "type": "string",
                    "description": "Name of the policy used for protection"
                  },
                  "softDeleteRetentionPeriodInDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Soft delete retention period in days"
                  },
                  "vaultId": {
                    "type": "string",
                    "description": "ID of the vault which protects this item",
                    "readOnly": true
                  }
                },
                "discriminator": "protectedItemType",
                "required": [
                  "protectedItemType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "ProtectedItemState": {
      "type": "string",
      "description": "Backup state of the backed up item.",
      "enum": [
        "Invalid",
        "IRPending",
        "Protected",
        "ProtectionError",
        "ProtectionStopped",
        "ProtectionPaused",
        "BackupsSuspended"
      ],
      "x-ms-enum": {
        "name": "ProtectedItemState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "IRPending",
            "value": "IRPending"
          },
          {
            "name": "Protected",
            "value": "Protected"
          },
          {
            "name": "ProtectionError",
            "value": "ProtectionError"
          },
          {
            "name": "ProtectionStopped",
            "value": "ProtectionStopped"
          },
          {
            "name": "ProtectionPaused",
            "value": "ProtectionPaused"
          },
          {
            "name": "BackupsSuspended",
            "value": "BackupsSuspended"
          }
        ]
      }
    },
    "ProtectionContainer": {
      "type": "object",
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the container."
        },
        "backupManagementType": {
          "description": "Type of backup management for the container.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "registrationStatus": {
          "type": "string",
          "description": "Status of registration of the container with the Recovery Services Vault."
        },
        "healthStatus": {
          "type": "string",
          "description": "Status of health of the container."
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
          "type": "string",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer",
            "Microsoft.ClassicCompute/virtualMachines",
            "Microsoft.Compute/virtualMachines",
            "AzureWorkloadContainer"
          ],
          "x-ms-enum": {
            "name": "ProtectableContainerType",
            "modelAsString": false
          }
        },
        "protectableObjectType": {
          "type": "string",
          "description": "Type of the protectable object associated with this container"
        }
      },
      "discriminator": "containerType",
      "required": [
        "containerType"
      ]
    },
    "ProtectionContainerResource": {
      "type": "object",
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ProtectionContainerResource properties",
          "type": "object",
          "properties": {
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the container."
            },
            "backupManagementType": {
              "description": "Type of backup management for the container.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "registrationStatus": {
              "type": "string",
              "description": "Status of registration of the container with the Recovery Services Vault."
            },
            "healthStatus": {
              "type": "string",
              "description": "Status of health of the container."
            },
            "containerType": {
              "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
              "type": "string",
              "enum": [
                "Invalid",
                "Unknown",
                "IaasVMContainer",
                "IaasVMServiceContainer",
                "DPMContainer",
                "AzureBackupServerContainer",
                "MABContainer",
                "Cluster",
                "AzureSqlContainer",
                "Windows",
                "VCenter",
                "VMAppContainer",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "AzureWorkloadContainer"
              ],
              "x-ms-enum": {
                "name": "ProtectableContainerType",
                "modelAsString": false
              }
            },
            "protectableObjectType": {
              "type": "string",
              "description": "Type of the protectable object associated with this container"
            }
          },
          "discriminator": "containerType",
          "required": [
            "containerType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ProtectionContainerResourceList": {
      "type": "object",
      "description": "List of ProtectionContainer resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ProtectionContainerResource properties",
                "type": "object",
                "properties": {
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly name of the container."
                  },
                  "backupManagementType": {
                    "description": "Type of backup management for the container.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "registrationStatus": {
                    "type": "string",
                    "description": "Status of registration of the container with the Recovery Services Vault."
                  },
                  "healthStatus": {
                    "type": "string",
                    "description": "Status of health of the container."
                  },
                  "containerType": {
                    "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\nBackup is VMAppContainer",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Unknown",
                      "IaasVMContainer",
                      "IaasVMServiceContainer",
                      "DPMContainer",
                      "AzureBackupServerContainer",
                      "MABContainer",
                      "Cluster",
                      "AzureSqlContainer",
                      "Windows",
                      "VCenter",
                      "VMAppContainer",
                      "SQLAGWorkLoadContainer",
                      "StorageContainer",
                      "GenericContainer",
                      "Microsoft.ClassicCompute/virtualMachines",
                      "Microsoft.Compute/virtualMachines",
                      "AzureWorkloadContainer"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectableContainerType",
                      "modelAsString": false
                    }
                  },
                  "protectableObjectType": {
                    "type": "string",
                    "description": "Type of the protectable object associated with this container"
                  }
                },
                "discriminator": "containerType",
                "required": [
                  "containerType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "ProtectionIntent": {
      "type": "object",
      "description": "Base class for backup ProtectionIntent.",
      "properties": {
        "protectionIntentItemType": {
          "description": "backup protectionIntent type.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureResourceItem",
            "RecoveryServiceVaultItem",
            "AzureWorkloadContainerAutoProtectionIntent",
            "AzureWorkloadAutoProtectionIntent",
            "AzureWorkloadSQLAutoProtectionIntent"
          ],
          "x-ms-enum": {
            "name": "ProtectionIntentItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureResourceItem",
                "value": "AzureResourceItem"
              },
              {
                "name": "RecoveryServiceVaultItem",
                "value": "RecoveryServiceVaultItem"
              },
              {
                "name": "AzureWorkloadContainerAutoProtectionIntent",
                "value": "AzureWorkloadContainerAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadAutoProtectionIntent",
                "value": "AzureWorkloadAutoProtectionIntent"
              },
              {
                "name": "AzureWorkloadSQLAutoProtectionIntent",
                "value": "AzureWorkloadSQLAutoProtectionIntent"
              }
            ]
          }
        },
        "backupManagementType": {
          "description": "Type of backup management for the backed up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM ID of the resource to be backed up."
        },
        "itemId": {
          "type": "string",
          "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
        },
        "policyId": {
          "type": "string",
          "description": "ID of the backup policy with which this item is backed up."
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      },
      "discriminator": "protectionIntentItemType",
      "required": [
        "protectionIntentItemType"
      ]
    },
    "ProtectionIntentItemType": {
      "type": "string",
      "description": "backup protectionIntent type.",
      "enum": [
        "Invalid",
        "AzureResourceItem",
        "RecoveryServiceVaultItem",
        "AzureWorkloadContainerAutoProtectionIntent",
        "AzureWorkloadAutoProtectionIntent",
        "AzureWorkloadSQLAutoProtectionIntent"
      ],
      "x-ms-enum": {
        "name": "ProtectionIntentItemType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AzureResourceItem",
            "value": "AzureResourceItem"
          },
          {
            "name": "RecoveryServiceVaultItem",
            "value": "RecoveryServiceVaultItem"
          },
          {
            "name": "AzureWorkloadContainerAutoProtectionIntent",
            "value": "AzureWorkloadContainerAutoProtectionIntent"
          },
          {
            "name": "AzureWorkloadAutoProtectionIntent",
            "value": "AzureWorkloadAutoProtectionIntent"
          },
          {
            "name": "AzureWorkloadSQLAutoProtectionIntent",
            "value": "AzureWorkloadSQLAutoProtectionIntent"
          }
        ]
      }
    },
    "ProtectionIntentQueryObject": {
      "type": "object",
      "description": "Filters to list protection intent.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backed up item",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "itemType": {
          "description": "Type of workload this item represents",
          "type": "string",
          "enum": [
            "Invalid",
            "SQLInstance",
            "SQLAvailabilityGroupContainer"
          ],
          "x-ms-enum": {
            "name": "IntentItemType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "SQLInstance",
                "value": "SQLInstance"
              },
              {
                "name": "SQLAvailabilityGroupContainer",
                "value": "SQLAvailabilityGroupContainer"
              }
            ]
          }
        },
        "parentName": {
          "type": "string",
          "description": "Parent name of the intent"
        },
        "itemName": {
          "type": "string",
          "description": "Item name of the intent"
        }
      }
    },
    "ProtectionIntentResource": {
      "type": "object",
      "description": "Base class for backup ProtectionIntent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ProtectionIntentResource properties",
          "type": "object",
          "properties": {
            "protectionIntentItemType": {
              "description": "backup protectionIntent type.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureResourceItem",
                "RecoveryServiceVaultItem",
                "AzureWorkloadContainerAutoProtectionIntent",
                "AzureWorkloadAutoProtectionIntent",
                "AzureWorkloadSQLAutoProtectionIntent"
              ],
              "x-ms-enum": {
                "name": "ProtectionIntentItemType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureResourceItem",
                    "value": "AzureResourceItem"
                  },
                  {
                    "name": "RecoveryServiceVaultItem",
                    "value": "RecoveryServiceVaultItem"
                  },
                  {
                    "name": "AzureWorkloadContainerAutoProtectionIntent",
                    "value": "AzureWorkloadContainerAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadAutoProtectionIntent",
                    "value": "AzureWorkloadAutoProtectionIntent"
                  },
                  {
                    "name": "AzureWorkloadSQLAutoProtectionIntent",
                    "value": "AzureWorkloadSQLAutoProtectionIntent"
                  }
                ]
              }
            },
            "backupManagementType": {
              "description": "Type of backup management for the backed up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "sourceResourceId": {
              "type": "string",
              "description": "ARM ID of the resource to be backed up."
            },
            "itemId": {
              "type": "string",
              "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
            },
            "policyId": {
              "type": "string",
              "description": "ID of the backup policy with which this item is backed up."
            },
            "protectionState": {
              "description": "Backup state of this backup item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "protectionIntentItemType",
          "required": [
            "protectionIntentItemType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ProtectionIntentResourceList": {
      "type": "object",
      "description": "List of ProtectionIntent resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup ProtectionIntent.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ProtectionIntentResource properties",
                "type": "object",
                "properties": {
                  "protectionIntentItemType": {
                    "description": "backup protectionIntent type.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureResourceItem",
                      "RecoveryServiceVaultItem",
                      "AzureWorkloadContainerAutoProtectionIntent",
                      "AzureWorkloadAutoProtectionIntent",
                      "AzureWorkloadSQLAutoProtectionIntent"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectionIntentItemType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureResourceItem",
                          "value": "AzureResourceItem"
                        },
                        {
                          "name": "RecoveryServiceVaultItem",
                          "value": "RecoveryServiceVaultItem"
                        },
                        {
                          "name": "AzureWorkloadContainerAutoProtectionIntent",
                          "value": "AzureWorkloadContainerAutoProtectionIntent"
                        },
                        {
                          "name": "AzureWorkloadAutoProtectionIntent",
                          "value": "AzureWorkloadAutoProtectionIntent"
                        },
                        {
                          "name": "AzureWorkloadSQLAutoProtectionIntent",
                          "value": "AzureWorkloadSQLAutoProtectionIntent"
                        }
                      ]
                    }
                  },
                  "backupManagementType": {
                    "description": "Type of backup management for the backed up item.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "AzureIaasVM",
                      "MAB",
                      "DPM",
                      "AzureBackupServer",
                      "AzureSql",
                      "AzureStorage",
                      "AzureWorkload",
                      "DefaultBackup"
                    ],
                    "x-ms-enum": {
                      "name": "BackupManagementType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "AzureIaasVM",
                          "value": "AzureIaasVM"
                        },
                        {
                          "name": "MAB",
                          "value": "MAB"
                        },
                        {
                          "name": "DPM",
                          "value": "DPM"
                        },
                        {
                          "name": "AzureBackupServer",
                          "value": "AzureBackupServer"
                        },
                        {
                          "name": "AzureSql",
                          "value": "AzureSql"
                        },
                        {
                          "name": "AzureStorage",
                          "value": "AzureStorage"
                        },
                        {
                          "name": "AzureWorkload",
                          "value": "AzureWorkload"
                        },
                        {
                          "name": "DefaultBackup",
                          "value": "DefaultBackup"
                        }
                      ]
                    }
                  },
                  "sourceResourceId": {
                    "type": "string",
                    "description": "ARM ID of the resource to be backed up."
                  },
                  "itemId": {
                    "type": "string",
                    "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId"
                  },
                  "policyId": {
                    "type": "string",
                    "description": "ID of the backup policy with which this item is backed up."
                  },
                  "protectionState": {
                    "description": "Backup state of this backup item.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "NotProtected",
                      "Protecting",
                      "Protected",
                      "ProtectionFailed"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "NotProtected",
                          "value": "NotProtected"
                        },
                        {
                          "name": "Protecting",
                          "value": "Protecting"
                        },
                        {
                          "name": "Protected",
                          "value": "Protected"
                        },
                        {
                          "name": "ProtectionFailed",
                          "value": "ProtectionFailed"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "protectionIntentItemType",
                "required": [
                  "protectionIntentItemType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "ProtectionPolicy": {
      "type": "object",
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "properties": {
        "protectedItemsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items associated with this policy."
        },
        "backupManagementType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuard Operation Requests",
          "items": {
            "type": "string"
          }
        }
      },
      "discriminator": "backupManagementType",
      "required": [
        "backupManagementType"
      ]
    },
    "ProtectionPolicyQueryObject": {
      "type": "object",
      "description": "Filters the list backup policies API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "AzureIaasVM",
                "value": "AzureIaasVM"
              },
              {
                "name": "MAB",
                "value": "MAB"
              },
              {
                "name": "DPM",
                "value": "DPM"
              },
              {
                "name": "AzureBackupServer",
                "value": "AzureBackupServer"
              },
              {
                "name": "AzureSql",
                "value": "AzureSql"
              },
              {
                "name": "AzureStorage",
                "value": "AzureStorage"
              },
              {
                "name": "AzureWorkload",
                "value": "AzureWorkload"
              },
              {
                "name": "DefaultBackup",
                "value": "DefaultBackup"
              }
            ]
          }
        },
        "fabricName": {
          "type": "string",
          "description": "Fabric name for filter"
        },
        "workloadType": {
          "description": "Workload type for the backup policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase",
            "SAPHanaDBInstance"
          ],
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "VM",
                "value": "VM"
              },
              {
                "name": "FileFolder",
                "value": "FileFolder"
              },
              {
                "name": "AzureSqlDb",
                "value": "AzureSqlDb"
              },
              {
                "name": "SQLDB",
                "value": "SQLDB"
              },
              {
                "name": "Exchange",
                "value": "Exchange"
              },
              {
                "name": "Sharepoint",
                "value": "Sharepoint"
              },
              {
                "name": "VMwareVM",
                "value": "VMwareVM"
              },
              {
                "name": "SystemState",
                "value": "SystemState"
              },
              {
                "name": "Client",
                "value": "Client"
              },
              {
                "name": "GenericDataSource",
                "value": "GenericDataSource"
              },
              {
                "name": "SQLDataBase",
                "value": "SQLDataBase"
              },
              {
                "name": "AzureFileShare",
                "value": "AzureFileShare"
              },
              {
                "name": "SAPHanaDatabase",
                "value": "SAPHanaDatabase"
              },
              {
                "name": "SAPAseDatabase",
                "value": "SAPAseDatabase"
              },
              {
                "name": "SAPHanaDBInstance",
                "value": "SAPHanaDBInstance"
              }
            ]
          }
        }
      }
    },
    "ProtectionPolicyResource": {
      "type": "object",
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ProtectionPolicyResource properties",
          "type": "object",
          "properties": {
            "protectedItemsCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items associated with this policy."
            },
            "backupManagementType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuard Operation Requests",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "backupManagementType",
          "required": [
            "backupManagementType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ProtectionPolicyResourceList": {
      "type": "object",
      "description": "List of ProtectionPolicy resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ProtectionPolicyResource properties",
                "type": "object",
                "properties": {
                  "protectedItemsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items associated with this policy."
                  },
                  "backupManagementType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  },
                  "resourceGuardOperationRequests": {
                    "type": "array",
                    "description": "ResourceGuard Operation Requests",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "discriminator": "backupManagementType",
                "required": [
                  "backupManagementType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "ProtectionState": {
      "type": "string",
      "description": "Backup state of this backup item.",
      "enum": [
        "Invalid",
        "IRPending",
        "Protected",
        "ProtectionError",
        "ProtectionStopped",
        "ProtectionPaused",
        "BackupsSuspended"
      ],
      "x-ms-enum": {
        "name": "ProtectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "IRPending",
            "value": "IRPending"
          },
          {
            "name": "Protected",
            "value": "Protected"
          },
          {
            "name": "ProtectionError",
            "value": "ProtectionError"
          },
          {
            "name": "ProtectionStopped",
            "value": "ProtectionStopped"
          },
          {
            "name": "ProtectionPaused",
            "value": "ProtectionPaused"
          },
          {
            "name": "BackupsSuspended",
            "value": "BackupsSuspended"
          }
        ]
      }
    },
    "ProtectionStatus": {
      "type": "string",
      "description": "Specifies whether the container is registered or not",
      "enum": [
        "Invalid",
        "NotProtected",
        "Protecting",
        "Protected",
        "ProtectionFailed"
      ],
      "x-ms-enum": {
        "name": "ProtectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "NotProtected",
            "value": "NotProtected"
          },
          {
            "name": "Protecting",
            "value": "Protecting"
          },
          {
            "name": "Protected",
            "value": "Protected"
          },
          {
            "name": "ProtectionFailed",
            "value": "ProtectionFailed"
          }
        ]
      }
    },
    "RecoveryMode": {
      "type": "string",
      "description": "Defines whether the current recovery mode is file restore or database restore",
      "enum": [
        "Invalid",
        "FileRecovery",
        "WorkloadRecovery",
        "SnapshotAttach",
        "RecoveryUsingSnapshot",
        "SnapshotAttachAndRecover"
      ],
      "x-ms-enum": {
        "name": "RecoveryMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "FileRecovery",
            "value": "FileRecovery"
          },
          {
            "name": "WorkloadRecovery",
            "value": "WorkloadRecovery"
          },
          {
            "name": "SnapshotAttach",
            "value": "SnapshotAttach"
          },
          {
            "name": "RecoveryUsingSnapshot",
            "value": "RecoveryUsingSnapshot"
          },
          {
            "name": "SnapshotAttachAndRecover",
            "value": "SnapshotAttachAndRecover"
          }
        ]
      }
    },
    "RecoveryPoint": {
      "type": "object",
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "RecoveryPointDiskConfiguration": {
      "type": "object",
      "description": "Disk configuration",
      "properties": {
        "numberOfDisksIncludedInBackup": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks included in backup"
        },
        "numberOfDisksAttachedToVm": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks attached to the VM"
        },
        "includedDiskList": {
          "type": "array",
          "description": "Information of disks included in backup",
          "items": {
            "type": "object",
            "description": "Disk information",
            "properties": {
              "lun": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "excludedDiskList": {
          "type": "array",
          "description": "Information of disks excluded from backup",
          "items": {
            "type": "object",
            "description": "Disk information",
            "properties": {
              "lun": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RecoveryPointMoveReadinessInfo": {
      "type": "object",
      "properties": {
        "isReadyForMove": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        }
      }
    },
    "RecoveryPointProperties": {
      "type": "object",
      "description": "Properties of Recovery Point",
      "properties": {
        "expiryTime": {
          "type": "string",
          "description": "Expiry time of Recovery Point in UTC."
        },
        "ruleName": {
          "type": "string",
          "description": "Rule name tagged on Recovery Point that governs life cycle"
        },
        "isSoftDeleted": {
          "type": "boolean",
          "description": "Bool to indicate whether RP is in soft delete state or not"
        }
      }
    },
    "RecoveryPointRehydrationInfo": {
      "type": "object",
      "description": "RP Rehydration Info",
      "properties": {
        "rehydrationRetentionDuration": {
          "type": "string",
          "description": "How long the rehydrated RP should be kept\nShould be ISO8601 Duration format e.g. \"P7D\""
        },
        "rehydrationPriority": {
          "description": "Rehydration Priority",
          "type": "string",
          "enum": [
            "Standard",
            "High"
          ],
          "x-ms-enum": {
            "name": "RehydrationPriority",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "High",
                "value": "High"
              }
            ]
          }
        }
      }
    },
    "RecoveryPointResource": {
      "type": "object",
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "RecoveryPointResource properties",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "RecoveryPointResourceList": {
      "type": "object",
      "description": "List of RecoveryPoint resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "RecoveryPointResource properties",
                "type": "object",
                "properties": {
                  "objectType": {
                    "type": "string",
                    "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                  }
                },
                "discriminator": "objectType",
                "required": [
                  "objectType"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "RecoveryPointTierInformation": {
      "type": "object",
      "description": "Recovery point tier information.",
      "properties": {
        "type": {
          "description": "Recovery point tier type.",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Recovery point tier status.",
          "type": "string",
          "enum": [
            "Invalid",
            "Valid",
            "Disabled",
            "Deleted",
            "Rehydrated"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierStatus",
            "modelAsString": true
          }
        },
        "extendedInfo": {
          "type": "object",
          "description": "Recovery point tier status.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RecoveryPointTierInformationV2": {
      "type": "object",
      "description": "RecoveryPoint Tier Information V2",
      "properties": {
        "type": {
          "description": "Recovery point tier type.",
          "type": "string",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP",
            "ArchivedRP"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Recovery point tier status.",
          "type": "string",
          "enum": [
            "Invalid",
            "Valid",
            "Disabled",
            "Deleted",
            "Rehydrated"
          ],
          "x-ms-enum": {
            "name": "RecoveryPointTierStatus",
            "modelAsString": true
          }
        },
        "extendedInfo": {
          "type": "object",
          "description": "Recovery point tier status.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RecoveryPointTierStatus": {
      "type": "string",
      "description": "Recovery point tier status.",
      "enum": [
        "Invalid",
        "Valid",
        "Disabled",
        "Deleted",
        "Rehydrated"
      ],
      "x-ms-enum": {
        "name": "RecoveryPointTierStatus",
        "modelAsString": true
      }
    },
    "RecoveryPointTierType": {
      "type": "string",
      "description": "Recovery point tier type.",
      "enum": [
        "Invalid",
        "InstantRP",
        "HardenedRP",
        "ArchivedRP"
      ],
      "x-ms-enum": {
        "name": "RecoveryPointTierType",
        "modelAsString": false
      }
    },
    "RecoveryType": {
      "type": "string",
      "description": "Type of this recovery.",
      "enum": [
        "Invalid",
        "OriginalLocation",
        "AlternateLocation",
        "RestoreDisks",
        "Offline"
      ],
      "x-ms-enum": {
        "name": "RecoveryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "OriginalLocation",
            "value": "OriginalLocation"
          },
          {
            "name": "AlternateLocation",
            "value": "AlternateLocation"
          },
          {
            "name": "RestoreDisks",
            "value": "RestoreDisks"
          },
          {
            "name": "Offline",
            "value": "Offline"
          }
        ]
      }
    },
    "RehydrationPriority": {
      "type": "string",
      "description": "Rehydration Priority",
      "enum": [
        "Standard",
        "High"
      ],
      "x-ms-enum": {
        "name": "RehydrationPriority",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "High",
            "value": "High"
          }
        ]
      }
    },
    "ResourceGuardOperationDetail": {
      "type": "object",
      "properties": {
        "vaultCriticalOperation": {
          "type": "string"
        },
        "defaultResourceRequest": {
          "type": "string"
        }
      }
    },
    "ResourceGuardProxyBase": {
      "type": "object",
      "properties": {
        "resourceGuardResourceId": {
          "type": "string"
        },
        "resourceGuardOperationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vaultCriticalOperation": {
                "type": "string"
              },
              "defaultResourceRequest": {
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "resourceGuardResourceId"
      ]
    },
    "ResourceGuardProxyBaseResource": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ResourceGuardProxyBaseResource properties",
          "type": "object",
          "properties": {
            "resourceGuardResourceId": {
              "type": "string"
            },
            "resourceGuardOperationDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "vaultCriticalOperation": {
                    "type": "string"
                  },
                  "defaultResourceRequest": {
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "lastUpdatedTime": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "resourceGuardResourceId"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      }
    },
    "ResourceGuardProxyBaseResourceList": {
      "type": "object",
      "description": "List of ResourceGuardProxyBase resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ResourceGuardProxyBaseResource properties",
                "type": "object",
                "properties": {
                  "resourceGuardResourceId": {
                    "type": "string"
                  },
                  "resourceGuardOperationDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vaultCriticalOperation": {
                          "type": "string"
                        },
                        "defaultResourceRequest": {
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "lastUpdatedTime": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "resourceGuardResourceId"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              }
            }
          }
        }
      }
    },
    "ResourceHealthDetails": {
      "type": "object",
      "description": "Health Details for backup items.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Health Code",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Health Title",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Health Message",
          "readOnly": true
        },
        "recommendations": {
          "type": "array",
          "description": "Health Recommended Actions",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ResourceHealthStatus": {
      "type": "string",
      "description": "Resource Health Status",
      "enum": [
        "Healthy",
        "TransientDegraded",
        "PersistentDegraded",
        "TransientUnhealthy",
        "PersistentUnhealthy",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "ResourceHealthStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Healthy",
            "value": "Healthy"
          },
          {
            "name": "TransientDegraded",
            "value": "TransientDegraded"
          },
          {
            "name": "PersistentDegraded",
            "value": "PersistentDegraded"
          },
          {
            "name": "TransientUnhealthy",
            "value": "TransientUnhealthy"
          },
          {
            "name": "PersistentUnhealthy",
            "value": "PersistentUnhealthy"
          },
          {
            "name": "Invalid",
            "value": "Invalid"
          }
        ]
      }
    },
    "ResourceList": {
      "type": "object",
      "description": "Base for all lists of resources.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        }
      }
    },
    "RestoreFileSpecs": {
      "type": "object",
      "description": "Restore file specs like file path, type and target folder path info.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Source File/Folder path"
        },
        "fileSpecType": {
          "type": "string",
          "description": "Indicates what the Path variable stands for"
        },
        "targetFolderPath": {
          "type": "string",
          "description": "Destination folder path in target FileShare"
        }
      }
    },
    "RestorePointQueryType": {
      "type": "string",
      "description": "RestorePoint type",
      "enum": [
        "Invalid",
        "Full",
        "Log",
        "Differential",
        "FullAndDifferential",
        "All",
        "Incremental",
        "SnapshotFull",
        "SnapshotCopyOnlyFull"
      ],
      "x-ms-enum": {
        "name": "RestorePointQueryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Full",
            "value": "Full"
          },
          {
            "name": "Log",
            "value": "Log"
          },
          {
            "name": "Differential",
            "value": "Differential"
          },
          {
            "name": "FullAndDifferential",
            "value": "FullAndDifferential"
          },
          {
            "name": "All",
            "value": "All"
          },
          {
            "name": "Incremental",
            "value": "Incremental"
          },
          {
            "name": "SnapshotFull",
            "value": "SnapshotFull"
          },
          {
            "name": "SnapshotCopyOnlyFull",
            "value": "SnapshotCopyOnlyFull"
          }
        ]
      }
    },
    "RestorePointType": {
      "type": "string",
      "description": "Type of restore point",
      "enum": [
        "Invalid",
        "Full",
        "Log",
        "Differential",
        "Incremental",
        "SnapshotFull",
        "SnapshotCopyOnlyFull"
      ],
      "x-ms-enum": {
        "name": "RestorePointType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Full",
            "value": "Full"
          },
          {
            "name": "Log",
            "value": "Log"
          },
          {
            "name": "Differential",
            "value": "Differential"
          },
          {
            "name": "Incremental",
            "value": "Incremental"
          },
          {
            "name": "SnapshotFull",
            "value": "SnapshotFull"
          },
          {
            "name": "SnapshotCopyOnlyFull",
            "value": "SnapshotCopyOnlyFull"
          }
        ]
      }
    },
    "RestoreRequest": {
      "type": "object",
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "RestoreRequestResource": {
      "type": "object",
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "RestoreRequestResource properties",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      }
    },
    "RestoreRequestType": {
      "type": "string",
      "description": "Restore Type (FullShareRestore or ItemLevelRestore)",
      "enum": [
        "Invalid",
        "FullShareRestore",
        "ItemLevelRestore"
      ],
      "x-ms-enum": {
        "name": "RestoreRequestType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "FullShareRestore",
            "value": "FullShareRestore"
          },
          {
            "name": "ItemLevelRestore",
            "value": "ItemLevelRestore"
          }
        ]
      }
    },
    "RetentionDuration": {
      "type": "object",
      "description": "Retention duration.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
        },
        "durationType": {
          "description": "Retention duration type of retention policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "x-ms-enum": {
            "name": "RetentionDurationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Days",
                "value": "Days"
              },
              {
                "name": "Weeks",
                "value": "Weeks"
              },
              {
                "name": "Months",
                "value": "Months"
              },
              {
                "name": "Years",
                "value": "Years"
              }
            ]
          }
        }
      }
    },
    "RetentionDurationType": {
      "type": "string",
      "description": "Retention duration type of retention policy.",
      "enum": [
        "Invalid",
        "Days",
        "Weeks",
        "Months",
        "Years"
      ],
      "x-ms-enum": {
        "name": "RetentionDurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Days",
            "value": "Days"
          },
          {
            "name": "Weeks",
            "value": "Weeks"
          },
          {
            "name": "Months",
            "value": "Months"
          },
          {
            "name": "Years",
            "value": "Years"
          }
        ]
      }
    },
    "RetentionPolicy": {
      "type": "object",
      "description": "Base class for retention policy.",
      "properties": {
        "retentionPolicyType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "retentionPolicyType",
      "required": [
        "retentionPolicyType"
      ]
    },
    "RetentionScheduleFormat": {
      "type": "string",
      "description": "Retention schedule format type for monthly retention policy.",
      "enum": [
        "Invalid",
        "Daily",
        "Weekly"
      ],
      "x-ms-enum": {
        "name": "RetentionScheduleFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Daily",
            "value": "Daily"
          },
          {
            "name": "Weekly",
            "value": "Weekly"
          }
        ]
      }
    },
    "SQLDataDirectory": {
      "type": "object",
      "description": "SQLDataDirectory info",
      "properties": {
        "type": {
          "description": "Type of data directory mapping",
          "type": "string",
          "enum": [
            "Invalid",
            "Data",
            "Log"
          ],
          "x-ms-enum": {
            "name": "SQLDataDirectoryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Data",
                "value": "Data"
              },
              {
                "name": "Log",
                "value": "Log"
              }
            ]
          }
        },
        "path": {
          "type": "string",
          "description": "File path"
        },
        "logicalName": {
          "type": "string",
          "description": "Logical name of the file"
        }
      }
    },
    "SQLDataDirectoryMapping": {
      "type": "object",
      "description": "Encapsulates information regarding data directory",
      "properties": {
        "mappingType": {
          "description": "Type of data directory mapping",
          "type": "string",
          "enum": [
            "Invalid",
            "Data",
            "Log"
          ],
          "x-ms-enum": {
            "name": "SQLDataDirectoryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Data",
                "value": "Data"
              },
              {
                "name": "Log",
                "value": "Log"
              }
            ]
          }
        },
        "sourceLogicalName": {
          "type": "string",
          "description": "Restore source logical name path"
        },
        "sourcePath": {
          "type": "string",
          "description": "Restore source path"
        },
        "targetPath": {
          "type": "string",
          "description": "Target path"
        }
      }
    },
    "SQLDataDirectoryType": {
      "type": "string",
      "description": "Type of data directory mapping",
      "enum": [
        "Invalid",
        "Data",
        "Log"
      ],
      "x-ms-enum": {
        "name": "SQLDataDirectoryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Data",
            "value": "Data"
          },
          {
            "name": "Log",
            "value": "Log"
          }
        ]
      }
    },
    "SchedulePolicy": {
      "type": "object",
      "description": "Base class for backup schedule.",
      "properties": {
        "schedulePolicyType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "schedulePolicyType",
      "required": [
        "schedulePolicyType"
      ]
    },
    "ScheduleRunType": {
      "type": "string",
      "description": "Frequency of the schedule operation of this policy.",
      "enum": [
        "Invalid",
        "Daily",
        "Weekly",
        "Hourly"
      ],
      "x-ms-enum": {
        "name": "ScheduleRunType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Daily",
            "value": "Daily"
          },
          {
            "name": "Weekly",
            "value": "Weekly"
          },
          {
            "name": "Hourly",
            "value": "Hourly"
          }
        ]
      }
    },
    "SecuredVMDetails": {
      "type": "object",
      "description": "Restore request parameters for Secured VMs",
      "properties": {
        "securedVMOsDiskEncryptionSetId": {
          "type": "string",
          "description": "Gets or Sets Disk Encryption Set Id for Secured VM OS Disk"
        }
      }
    },
    "SecurityPinBase": {
      "type": "object",
      "description": "Base class for get security pin request body",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuard Operation Requests",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Settings": {
      "type": "object",
      "description": "Common settings field for backup management",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\"."
        },
        "issqlcompression": {
          "type": "boolean",
          "description": "SQL compression flag"
        },
        "isCompression": {
          "type": "boolean",
          "description": "Workload compression flag. This has been added so that 'isSqlCompression'\nwill be deprecated once clients upgrade to consider this flag."
        }
      }
    },
    "SimpleRetentionPolicy": {
      "type": "object",
      "description": "Simple policy retention.",
      "properties": {
        "retentionDuration": {
          "description": "Retention duration of the protection policy.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
            },
            "durationType": {
              "description": "Retention duration type of retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Days",
                "Weeks",
                "Months",
                "Years"
              ],
              "x-ms-enum": {
                "name": "RetentionDurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Days",
                    "value": "Days"
                  },
                  {
                    "name": "Weeks",
                    "value": "Weeks"
                  },
                  {
                    "name": "Months",
                    "value": "Months"
                  },
                  {
                    "name": "Years",
                    "value": "Years"
                  }
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for retention policy.",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "SimpleRetentionPolicy"
    },
    "SimpleSchedulePolicy": {
      "type": "object",
      "description": "Simple policy schedule.",
      "properties": {
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly",
            "Hourly"
          ],
          "x-ms-enum": {
            "name": "ScheduleRunType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Daily",
                "value": "Daily"
              },
              {
                "name": "Weekly",
                "value": "Weekly"
              },
              {
                "name": "Hourly",
                "value": "Hourly"
              }
            ]
          }
        },
        "scheduleRunDays": {
          "type": "array",
          "description": "List of days of week this schedule has to be run.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "scheduleRunTimes": {
          "type": "array",
          "description": "List of times of day this schedule has to be run.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "hourlySchedule": {
          "description": "Hourly Schedule of this Policy",
          "type": "object",
          "properties": {
            "interval": {
              "type": "integer",
              "format": "int32",
              "description": "Interval at which backup needs to be triggered. For hourly the value\ncan be 4/6/8/12"
            },
            "scheduleWindowStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "To specify start time of the backup window"
            },
            "scheduleWindowDuration": {
              "type": "integer",
              "format": "int32",
              "description": "To specify duration of the backup window"
            }
          }
        },
        "scheduleWeeklyFrequency": {
          "type": "integer",
          "format": "int32",
          "description": "At every number weeks this schedule has to be run."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup schedule.",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "SimpleSchedulePolicy"
    },
    "SimpleSchedulePolicyV2": {
      "type": "object",
      "description": "The V2 policy schedule for IaaS that supports hourly backups.",
      "properties": {
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly",
            "Hourly"
          ],
          "x-ms-enum": {
            "name": "ScheduleRunType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Daily",
                "value": "Daily"
              },
              {
                "name": "Weekly",
                "value": "Weekly"
              },
              {
                "name": "Hourly",
                "value": "Hourly"
              }
            ]
          }
        },
        "hourlySchedule": {
          "description": "hourly schedule of this policy",
          "type": "object",
          "properties": {
            "interval": {
              "type": "integer",
              "format": "int32",
              "description": "Interval at which backup needs to be triggered. For hourly the value\ncan be 4/6/8/12"
            },
            "scheduleWindowStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "To specify start time of the backup window"
            },
            "scheduleWindowDuration": {
              "type": "integer",
              "format": "int32",
              "description": "To specify duration of the backup window"
            }
          }
        },
        "dailySchedule": {
          "description": "Daily schedule of this policy",
          "type": "object",
          "properties": {
            "scheduleRunTimes": {
              "type": "array",
              "description": "List of times of day this schedule has to be run.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "weeklySchedule": {
          "description": "Weekly schedule of this policy",
          "type": "object",
          "properties": {
            "scheduleRunDays": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": false
                }
              }
            },
            "scheduleRunTimes": {
              "type": "array",
              "description": "List of times of day this schedule has to be run.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for backup schedule.",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        }
      ],
      "x-ms-discriminator-value": "SimpleSchedulePolicyV2"
    },
    "SnapshotBackupAdditionalDetails": {
      "type": "object",
      "description": "Snapshot Backup related fields for WorkloadType SaPHanaSystem",
      "properties": {
        "instantRpRetentionRangeInDays": {
          "type": "integer",
          "format": "int32"
        },
        "instantRPDetails": {
          "type": "string"
        },
        "userAssignedManagedIdentityDetails": {
          "description": "User assigned managed identity details",
          "type": "object",
          "properties": {
            "identityArmId": {
              "type": "string",
              "description": "The ARM id of the assigned identity."
            },
            "identityName": {
              "type": "string",
              "description": "The name of the assigned identity."
            },
            "userAssignedIdentityProperties": {
              "description": "User assigned managed identity properties",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "The client ID of the assigned identity."
                },
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of the assigned identity."
                }
              }
            }
          }
        }
      }
    },
    "SnapshotRestoreParameters": {
      "type": "object",
      "description": "Encapsulates information regarding snapshot recovery for SAP Hana",
      "properties": {
        "skipAttachAndMount": {
          "type": "boolean"
        },
        "logPointInTimeForDBRecovery": {
          "type": "string"
        }
      }
    },
    "SoftDeleteFeatureState": {
      "type": "string",
      "description": "Soft Delete feature state",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled",
        "AlwaysON"
      ],
      "x-ms-enum": {
        "name": "SoftDeleteFeatureState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "AlwaysON",
            "value": "AlwaysON"
          }
        ]
      }
    },
    "StorageType": {
      "type": "string",
      "description": "Storage type",
      "enum": [
        "Invalid",
        "GeoRedundant",
        "LocallyRedundant",
        "ZoneRedundant",
        "ReadAccessGeoZoneRedundant"
      ],
      "x-ms-enum": {
        "name": "StorageType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "GeoRedundant",
            "value": "GeoRedundant"
          },
          {
            "name": "LocallyRedundant",
            "value": "LocallyRedundant"
          },
          {
            "name": "ZoneRedundant",
            "value": "ZoneRedundant"
          },
          {
            "name": "ReadAccessGeoZoneRedundant",
            "value": "ReadAccessGeoZoneRedundant"
          }
        ]
      }
    },
    "StorageTypeState": {
      "type": "string",
      "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
      "enum": [
        "Invalid",
        "Locked",
        "Unlocked"
      ],
      "x-ms-enum": {
        "name": "StorageTypeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Locked",
            "value": "Locked"
          },
          {
            "name": "Unlocked",
            "value": "Unlocked"
          }
        ]
      }
    },
    "SubProtectionPolicy": {
      "type": "object",
      "description": "Sub-protection policy which includes schedule and retention",
      "properties": {
        "policyType": {
          "description": "Type of backup policy type",
          "type": "string",
          "enum": [
            "Invalid",
            "Full",
            "Differential",
            "Log",
            "CopyOnlyFull",
            "Incremental",
            "SnapshotFull",
            "SnapshotCopyOnlyFull"
          ],
          "x-ms-enum": {
            "name": "PolicyType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Full",
                "value": "Full"
              },
              {
                "name": "Differential",
                "value": "Differential"
              },
              {
                "name": "Log",
                "value": "Log"
              },
              {
                "name": "CopyOnlyFull",
                "value": "CopyOnlyFull"
              },
              {
                "name": "Incremental",
                "value": "Incremental"
              },
              {
                "name": "SnapshotFull",
                "value": "SnapshotFull"
              },
              {
                "name": "SnapshotCopyOnlyFull",
                "value": "SnapshotCopyOnlyFull"
              }
            ]
          }
        },
        "schedulePolicy": {
          "description": "Backup schedule specified as part of backup policy.",
          "type": "object",
          "properties": {
            "schedulePolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "schedulePolicyType",
          "required": [
            "schedulePolicyType"
          ]
        },
        "retentionPolicy": {
          "description": "Retention policy with the details on backup copy retention ranges.",
          "type": "object",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        },
        "tieringPolicy": {
          "type": "object",
          "description": "Tiering policy to automatically move RPs to another tier.\nKey is Target Tier, defined in RecoveryPointTierType enum.\nTiering policy specifies the criteria to move RP to the target tier.",
          "additionalProperties": {
            "type": "object",
            "description": "Tiering Policy for a target tier.\nIf the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier",
            "properties": {
              "tieringMode": {
                "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
                "type": "string",
                "enum": [
                  "Invalid",
                  "TierRecommended",
                  "TierAfter",
                  "DoNotTier"
                ],
                "x-ms-enum": {
                  "name": "TieringMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "TierRecommended",
                      "value": "TierRecommended"
                    },
                    {
                      "name": "TierAfter",
                      "value": "TierAfter"
                    },
                    {
                      "name": "DoNotTier",
                      "value": "DoNotTier"
                    }
                  ]
                }
              },
              "duration": {
                "type": "integer",
                "format": "int32",
                "description": "Number of days/weeks/months/years to retain backups in current tier before tiering.\nUsed only if TieringMode is set to TierAfter"
              },
              "durationType": {
                "description": "Retention duration type: days/weeks/months/years\nUsed only if TieringMode is set to TierAfter",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Days",
                  "Weeks",
                  "Months",
                  "Years"
                ],
                "x-ms-enum": {
                  "name": "RetentionDurationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Invalid",
                      "value": "Invalid"
                    },
                    {
                      "name": "Days",
                      "value": "Days"
                    },
                    {
                      "name": "Weeks",
                      "value": "Weeks"
                    },
                    {
                      "name": "Months",
                      "value": "Months"
                    },
                    {
                      "name": "Years",
                      "value": "Years"
                    }
                  ]
                }
              }
            }
          }
        },
        "snapshotBackupAdditionalDetails": {
          "description": "Snapshot Backup related fields for WorkloadType SaPHanaSystem",
          "type": "object",
          "properties": {
            "instantRpRetentionRangeInDays": {
              "type": "integer",
              "format": "int32"
            },
            "instantRPDetails": {
              "type": "string"
            },
            "userAssignedManagedIdentityDetails": {
              "description": "User assigned managed identity details",
              "type": "object",
              "properties": {
                "identityArmId": {
                  "type": "string",
                  "description": "The ARM id of the assigned identity."
                },
                "identityName": {
                  "type": "string",
                  "description": "The name of the assigned identity."
                },
                "userAssignedIdentityProperties": {
                  "description": "User assigned managed identity properties",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "The client ID of the assigned identity."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID of the assigned identity."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "SupportStatus": {
      "type": "string",
      "description": "Support status of feature",
      "enum": [
        "Invalid",
        "Supported",
        "DefaultOFF",
        "DefaultON",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "SupportStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Supported",
            "value": "Supported"
          },
          {
            "name": "DefaultOFF",
            "value": "DefaultOFF"
          },
          {
            "name": "DefaultON",
            "value": "DefaultON"
          },
          {
            "name": "NotSupported",
            "value": "NotSupported"
          }
        ]
      }
    },
    "TargetAFSRestoreInfo": {
      "type": "object",
      "description": "Target Azure File Share Info.",
      "properties": {
        "name": {
          "type": "string",
          "description": "File share name"
        },
        "targetResourceId": {
          "type": "string",
          "description": "Target file share resource ARM ID"
        }
      }
    },
    "TargetDiskNetworkAccessOption": {
      "type": "string",
      "description": "Network access settings to be used for restored disks",
      "enum": [
        "SameAsOnSourceDisks",
        "EnablePrivateAccessForAllDisks",
        "EnablePublicAccessForAllDisks"
      ],
      "x-ms-enum": {
        "name": "TargetDiskNetworkAccessOption",
        "modelAsString": false
      }
    },
    "TargetDiskNetworkAccessSettings": {
      "type": "object",
      "description": "Specifies target network access settings for disks of VM to be restored.",
      "properties": {
        "targetDiskNetworkAccessOption": {
          "description": "Network access settings to be used for restored disks",
          "type": "string",
          "enum": [
            "SameAsOnSourceDisks",
            "EnablePrivateAccessForAllDisks",
            "EnablePublicAccessForAllDisks"
          ],
          "x-ms-enum": {
            "name": "TargetDiskNetworkAccessOption",
            "modelAsString": false
          }
        },
        "targetDiskAccessId": {
          "type": "string",
          "description": "Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew"
        }
      }
    },
    "TargetRestoreInfo": {
      "type": "object",
      "description": "Details about target workload during restore operation.",
      "properties": {
        "overwriteOption": {
          "description": "Can Overwrite if Target DataBase already exists",
          "type": "string",
          "enum": [
            "Invalid",
            "FailOnConflict",
            "Overwrite"
          ],
          "x-ms-enum": {
            "name": "OverwriteOptions",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "FailOnConflict",
                "value": "FailOnConflict"
              },
              {
                "name": "Overwrite",
                "value": "Overwrite"
              }
            ]
          }
        },
        "containerId": {
          "type": "string",
          "description": "Resource Id name of the container in which Target DataBase resides"
        },
        "databaseName": {
          "type": "string",
          "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana"
        },
        "targetDirectoryForFileRestore": {
          "type": "string",
          "description": "Target directory location for restore as files."
        }
      }
    },
    "TieringCostInfo": {
      "type": "object",
      "description": "Base class for tiering cost response",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "TieringCostRehydrationInfo": {
      "type": "object",
      "description": "Response parameters for tiering cost info for rehydration",
      "properties": {
        "rehydrationSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Rehydration size in bytes"
        },
        "retailRehydrationCostPerGBPerMonth": {
          "type": "number",
          "format": "double",
          "description": "Source tier to target tier rehydration cost per GB per month"
        }
      },
      "required": [
        "rehydrationSizeInBytes",
        "retailRehydrationCostPerGBPerMonth"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost response",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "TieringCostRehydrationInfo"
    },
    "TieringCostSavingInfo": {
      "type": "object",
      "description": "Response parameters for tiering cost info for savings",
      "properties": {
        "sourceTierSizeReductionInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Source tier size reduction in bytes after moving all the recommended backup points to target tier"
        },
        "targetTierSizeIncreaseInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Target tier size increase in bytes after moving all the recommended backup points to target tier"
        },
        "retailSourceTierCostPerGBPerMonth": {
          "type": "number",
          "format": "double",
          "description": "Source tier retail cost per GB per month"
        },
        "retailTargetTierCostPerGBPerMonth": {
          "type": "number",
          "format": "double",
          "description": "Target tier retail cost per GB per month"
        }
      },
      "required": [
        "sourceTierSizeReductionInBytes",
        "targetTierSizeIncreaseInBytes",
        "retailSourceTierCostPerGBPerMonth",
        "retailTargetTierCostPerGBPerMonth"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Base class for tiering cost response",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "TieringCostSavingInfo"
    },
    "TieringMode": {
      "type": "string",
      "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
      "enum": [
        "Invalid",
        "TierRecommended",
        "TierAfter",
        "DoNotTier"
      ],
      "x-ms-enum": {
        "name": "TieringMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "TierRecommended",
            "value": "TierRecommended"
          },
          {
            "name": "TierAfter",
            "value": "TierAfter"
          },
          {
            "name": "DoNotTier",
            "value": "DoNotTier"
          }
        ]
      }
    },
    "TieringPolicy": {
      "type": "object",
      "description": "Tiering Policy for a target tier.\nIf the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier",
      "properties": {
        "tieringMode": {
          "description": "Tiering Mode to control automatic tiering of recovery points. Supported values are:\n1. TierRecommended: Tier all recovery points recommended to be tiered\n2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.\n3. DoNotTier: Do not tier any recovery points",
          "type": "string",
          "enum": [
            "Invalid",
            "TierRecommended",
            "TierAfter",
            "DoNotTier"
          ],
          "x-ms-enum": {
            "name": "TieringMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "TierRecommended",
                "value": "TierRecommended"
              },
              {
                "name": "TierAfter",
                "value": "TierAfter"
              },
              {
                "name": "DoNotTier",
                "value": "DoNotTier"
              }
            ]
          }
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Number of days/weeks/months/years to retain backups in current tier before tiering.\nUsed only if TieringMode is set to TierAfter"
        },
        "durationType": {
          "description": "Retention duration type: days/weeks/months/years\nUsed only if TieringMode is set to TierAfter",
          "type": "string",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "x-ms-enum": {
            "name": "RetentionDurationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Days",
                "value": "Days"
              },
              {
                "name": "Weeks",
                "value": "Weeks"
              },
              {
                "name": "Months",
                "value": "Months"
              },
              {
                "name": "Years",
                "value": "Years"
              }
            ]
          }
        }
      }
    },
    "TokenInformation": {
      "type": "object",
      "description": "The token information details.",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token value."
        },
        "expiryTimeInUtcTicks": {
          "type": "integer",
          "format": "int64",
          "description": "Expiry time of token."
        },
        "securityPIN": {
          "type": "string",
          "description": "Security PIN"
        }
      }
    },
    "TriggerDataMoveRequest": {
      "type": "object",
      "description": "Trigger DataMove Request",
      "properties": {
        "sourceResourceId": {
          "type": "string",
          "description": "ARM Id of source vault"
        },
        "sourceRegion": {
          "type": "string",
          "description": "Source Region"
        },
        "dataMoveLevel": {
          "description": "DataMove Level",
          "type": "string",
          "enum": [
            "Invalid",
            "Vault",
            "Container"
          ],
          "x-ms-enum": {
            "name": "DataMoveLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Vault",
                "value": "Vault"
              },
              {
                "name": "Container",
                "value": "Container"
              }
            ]
          }
        },
        "correlationId": {
          "type": "string",
          "description": "Correlation Id"
        },
        "sourceContainerArmIds": {
          "type": "array",
          "description": "Source Container ArmIds",
          "items": {
            "type": "string"
          }
        },
        "pauseGC": {
          "type": "boolean",
          "description": "Pause GC"
        }
      },
      "required": [
        "sourceResourceId",
        "sourceRegion",
        "dataMoveLevel",
        "correlationId"
      ]
    },
    "Type": {
      "type": "string",
      "description": "Backup management type for this container.",
      "enum": [
        "Invalid",
        "BackupProtectedItemCountSummary",
        "BackupProtectionContainerCountSummary"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "BackupProtectedItemCountSummary",
            "value": "BackupProtectedItemCountSummary"
          },
          {
            "name": "BackupProtectionContainerCountSummary",
            "value": "BackupProtectionContainerCountSummary"
          }
        ]
      }
    },
    "TypeSpec.Http.OkResponse": {
      "type": "object",
      "description": "The request has succeeded."
    },
    "UnlockDeleteRequest": {
      "type": "object",
      "description": "Request body of unlock delete API.",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceToBeDeleted": {
          "type": "string"
        }
      }
    },
    "UnlockDeleteResponse": {
      "type": "object",
      "description": "Response of Unlock Delete API.",
      "properties": {
        "unlockDeleteExpiryTime": {
          "type": "string",
          "description": "This is the time when unlock delete privileges will get expired."
        }
      }
    },
    "UserAssignedIdentityProperties": {
      "type": "object",
      "description": "User assigned managed identity properties",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID of the assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal ID of the assigned identity."
        }
      }
    },
    "UserAssignedManagedIdentityDetails": {
      "type": "object",
      "description": "User assigned managed identity details",
      "properties": {
        "identityArmId": {
          "type": "string",
          "description": "The ARM id of the assigned identity."
        },
        "identityName": {
          "type": "string",
          "description": "The name of the assigned identity."
        },
        "userAssignedIdentityProperties": {
          "description": "User assigned managed identity properties",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "The client ID of the assigned identity."
            },
            "principalId": {
              "type": "string",
              "description": "The principal ID of the assigned identity."
            }
          }
        }
      }
    },
    "ValidateIaasVMRestoreOperationRequest": {
      "type": "object",
      "description": "AzureRestoreValidation request.",
      "allOf": [
        {
          "type": "object",
          "description": "AzureRestoreValidation request.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "restoreRequest": {
              "type": "object",
              "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
              "properties": {
                "objectType": {
                  "type": "string",
                  "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
                },
                "resourceGuardOperationRequests": {
                  "type": "array",
                  "description": "ResourceGuardOperationRequests on which LAC check will be performed",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "discriminator": "objectType",
              "required": [
                "objectType"
              ]
            }
          },
          "x-ms-discriminator-value": "ValidateRestoreOperationRequest"
        }
      ],
      "x-ms-discriminator-value": "ValidateIaasVMRestoreOperationRequest"
    },
    "ValidateOperationRequest": {
      "type": "object",
      "description": "Base class for validate operation request.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "ValidateOperationRequestResource": {
      "type": "object",
      "description": "Base class for validate operation request.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Recovery point ID."
        },
        "properties": {
          "description": "ValidateOperationRequestResource properties",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      },
      "required": [
        "id",
        "properties"
      ]
    },
    "ValidateOperationResponse": {
      "type": "object",
      "description": "Base class for validate operation response.",
      "properties": {
        "validationResults": {
          "type": "array",
          "description": "Gets the validation result",
          "items": {
            "type": "object",
            "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code.",
                "readOnly": true
              },
              "message": {
                "type": "string",
                "description": "Error Message related to the Code.",
                "readOnly": true
              },
              "recommendations": {
                "type": "array",
                "description": "List of recommendation strings.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      }
    },
    "ValidateOperationsResponse": {
      "type": "object",
      "properties": {
        "validateOperationResponse": {
          "description": "Base class for validate operation response.",
          "type": "object",
          "properties": {
            "validationResults": {
              "type": "array",
              "description": "Gets the validation result",
              "items": {
                "type": "object",
                "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code.",
                    "readOnly": true
                  },
                  "message": {
                    "type": "string",
                    "description": "Error Message related to the Code.",
                    "readOnly": true
                  },
                  "recommendations": {
                    "type": "array",
                    "description": "List of recommendation strings.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "code"
              ]
            }
          }
        }
      }
    },
    "ValidateRestoreOperationRequest": {
      "type": "object",
      "description": "AzureRestoreValidation request.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        },
        "restoreRequest": {
          "type": "object",
          "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "description": "ResourceGuardOperationRequests on which LAC check will be performed",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      },
      "x-ms-discriminator-value": "ValidateRestoreOperationRequest"
    },
    "ValidationStatus": {
      "type": "string",
      "description": "Validation Status",
      "enum": [
        "Invalid",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "VaultJob": {
      "type": "object",
      "description": "Vault level Job",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Time elapsed during the execution of this job."
        },
        "actionsInfo": {
          "type": "array",
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details on execution of this job.",
          "items": {
            "type": "object",
            "description": "Vault Job specific error information",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int32",
                "description": "Error code."
              },
              "errorString": {
                "type": "string",
                "description": "Localized error string."
              },
              "recommendations": {
                "type": "array",
                "description": "List of localized recommendations for above error code.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "errorCode"
          ]
        },
        "extendedInfo": {
          "description": "Additional information about the job.",
          "type": "object",
          "properties": {
            "propertyBag": {
              "type": "object",
              "description": "Job properties.",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines workload agnostic properties for a job.",
          "properties": {
            "entityFriendlyName": {
              "type": "string",
              "description": "Friendly name of the entity on which the current job is executing."
            },
            "backupManagementType": {
              "description": "Backup management type to execute the current job.",
              "type": "string",
              "enum": [
                "Invalid",
                "AzureIaasVM",
                "MAB",
                "DPM",
                "AzureBackupServer",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DefaultBackup"
              ],
              "x-ms-enum": {
                "name": "BackupManagementType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "AzureIaasVM",
                    "value": "AzureIaasVM"
                  },
                  {
                    "name": "MAB",
                    "value": "MAB"
                  },
                  {
                    "name": "DPM",
                    "value": "DPM"
                  },
                  {
                    "name": "AzureBackupServer",
                    "value": "AzureBackupServer"
                  },
                  {
                    "name": "AzureSql",
                    "value": "AzureSql"
                  },
                  {
                    "name": "AzureStorage",
                    "value": "AzureStorage"
                  },
                  {
                    "name": "AzureWorkload",
                    "value": "AzureWorkload"
                  },
                  {
                    "name": "DefaultBackup",
                    "value": "DefaultBackup"
                  }
                ]
              }
            },
            "operation": {
              "type": "string",
              "description": "The operation name."
            },
            "status": {
              "type": "string",
              "description": "Job status."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time."
            },
            "activityId": {
              "type": "string",
              "description": "ActivityId of job."
            },
            "jobType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VaultJob"
    },
    "VaultJobErrorInfo": {
      "type": "object",
      "description": "Vault Job specific error information",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code."
        },
        "errorString": {
          "type": "string",
          "description": "Localized error string."
        },
        "recommendations": {
          "type": "array",
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VaultJobExtendedInfo": {
      "type": "object",
      "description": "Vault Job for CMK - has CMK specific info.",
      "properties": {
        "propertyBag": {
          "type": "object",
          "description": "Job properties.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VaultResource": {
      "type": "object",
      "description": "Vault resource in Recovery Service.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VaultResource",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "VaultRetentionPolicy": {
      "type": "object",
      "description": "Vault retention policy for AzureFileShare",
      "properties": {
        "vaultRetention": {
          "description": "Base class for retention policy.",
          "type": "object",
          "properties": {
            "retentionPolicyType": {
              "type": "string",
              "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
            }
          },
          "discriminator": "retentionPolicyType",
          "required": [
            "retentionPolicyType"
          ]
        },
        "snapshotRetentionInDays": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "vaultRetention",
        "snapshotRetentionInDays"
      ]
    },
    "VaultStorageConfigOperationResultResponse": {
      "type": "object",
      "description": "Operation result response for Vault Storage Config",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "WeekOfMonth": {
      "type": "string",
      "enum": [
        "First",
        "Second",
        "Third",
        "Fourth",
        "Last",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "WeekOfMonth",
        "modelAsString": false
      }
    },
    "WeeklyRetentionFormat": {
      "type": "object",
      "description": "Weekly retention format.",
      "properties": {
        "daysOfTheWeek": {
          "type": "array",
          "description": "List of days of the week.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "weeksOfTheMonth": {
          "type": "array",
          "description": "List of weeks of month.",
          "items": {
            "type": "string",
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last",
              "Invalid"
            ],
            "x-ms-enum": {
              "name": "WeekOfMonth",
              "modelAsString": false
            }
          }
        }
      }
    },
    "WeeklyRetentionSchedule": {
      "type": "object",
      "description": "Weekly retention schedule.",
      "properties": {
        "daysOfTheWeek": {
          "type": "array",
          "description": "List of days of week for weekly retention policy.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "retentionTimes": {
          "type": "array",
          "description": "Retention times of retention policy.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "retentionDuration": {
          "description": "Retention duration of retention Policy.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
            },
            "durationType": {
              "description": "Retention duration type of retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Days",
                "Weeks",
                "Months",
                "Years"
              ],
              "x-ms-enum": {
                "name": "RetentionDurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Days",
                    "value": "Days"
                  },
                  {
                    "name": "Weeks",
                    "value": "Weeks"
                  },
                  {
                    "name": "Months",
                    "value": "Months"
                  },
                  {
                    "name": "Years",
                    "value": "Years"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WeeklySchedule": {
      "type": "object",
      "properties": {
        "scheduleRunDays": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "scheduleRunTimes": {
          "type": "array",
          "description": "List of times of day this schedule has to be run.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "WorkloadInquiryDetails": {
      "type": "object",
      "description": "Details of an inquired protectable item.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the Workload such as SQL, Oracle etc."
        },
        "itemCount": {
          "type": "integer",
          "format": "int64",
          "description": "Contains the protectable item Count inside this Container."
        },
        "inquiryValidation": {
          "description": "Inquiry validation such as permissions and other backup validations.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status for the Inquiry Validation."
            },
            "errorDetail": {
              "type": "object",
              "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Error Message related to the Code.",
                  "readOnly": true
                },
                "recommendations": {
                  "type": "array",
                  "description": "List of recommendation strings.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            },
            "additionalDetail": {
              "type": "string",
              "description": "Error Additional Detail in case the status is non-success.",
              "readOnly": true
            },
            "protectableItemCount": {
              "description": "Dictionary to store the count of ProtectableItems with key POType.",
              "readOnly": true
            }
          }
        }
      }
    },
    "WorkloadItem": {
      "type": "object",
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "properties": {
        "backupManagementType": {
          "type": "string",
          "description": "Type of backup management to backup an item."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of workload for the backup management"
        },
        "workloadItemType": {
          "type": "string",
          "description": "Type of the backup item."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup item."
        },
        "protectionState": {
          "description": "State of the back up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      },
      "discriminator": "workloadItemType",
      "required": [
        "workloadItemType"
      ]
    },
    "WorkloadItemResource": {
      "type": "object",
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "WorkloadItemResource properties",
          "type": "object",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "workloadItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "workloadItemType",
          "required": [
            "workloadItemType"
          ]
        }
      }
    },
    "WorkloadItemResourceList": {
      "type": "object",
      "description": "List of WorkloadItem resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              },
              "properties": {
                "description": "WorkloadItemResource properties",
                "type": "object",
                "properties": {
                  "backupManagementType": {
                    "type": "string",
                    "description": "Type of backup management to backup an item."
                  },
                  "workloadType": {
                    "type": "string",
                    "description": "Type of workload for the backup management"
                  },
                  "workloadItemType": {
                    "type": "string",
                    "description": "Type of the backup item."
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly name of the backup item."
                  },
                  "protectionState": {
                    "description": "State of the back up item.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "NotProtected",
                      "Protecting",
                      "Protected",
                      "ProtectionFailed"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "NotProtected",
                          "value": "NotProtected"
                        },
                        {
                          "name": "Protecting",
                          "value": "Protecting"
                        },
                        {
                          "name": "Protected",
                          "value": "Protected"
                        },
                        {
                          "name": "ProtectionFailed",
                          "value": "ProtectionFailed"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "workloadItemType",
                "required": [
                  "workloadItemType"
                ]
              }
            }
          }
        }
      }
    },
    "WorkloadItemType": {
      "type": "string",
      "description": "Workload item type of the item for which intent is to be set",
      "enum": [
        "Invalid",
        "SQLInstance",
        "SQLDataBase",
        "SAPHanaSystem",
        "SAPHanaDatabase",
        "SAPAseSystem",
        "SAPAseDatabase",
        "SAPHanaDBInstance"
      ],
      "x-ms-enum": {
        "name": "WorkloadItemType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "SQLInstance",
            "value": "SQLInstance"
          },
          {
            "name": "SQLDataBase",
            "value": "SQLDataBase"
          },
          {
            "name": "SAPHanaSystem",
            "value": "SAPHanaSystem"
          },
          {
            "name": "SAPHanaDatabase",
            "value": "SAPHanaDatabase"
          },
          {
            "name": "SAPAseSystem",
            "value": "SAPAseSystem"
          },
          {
            "name": "SAPAseDatabase",
            "value": "SAPAseDatabase"
          },
          {
            "name": "SAPHanaDBInstance",
            "value": "SAPHanaDBInstance"
          }
        ]
      }
    },
    "WorkloadProtectableItem": {
      "type": "object",
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "properties": {
        "backupManagementType": {
          "type": "string",
          "description": "Type of backup management to backup an item."
        },
        "workloadType": {
          "type": "string",
          "description": "Type of workload for the backup management"
        },
        "protectableItemType": {
          "type": "string",
          "description": "Type of the backup item."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of the backup item."
        },
        "protectionState": {
          "description": "State of the back up item.",
          "type": "string",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected",
            "ProtectionFailed"
          ],
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "NotProtected",
                "value": "NotProtected"
              },
              {
                "name": "Protecting",
                "value": "Protecting"
              },
              {
                "name": "Protected",
                "value": "Protected"
              },
              {
                "name": "ProtectionFailed",
                "value": "ProtectionFailed"
              }
            ]
          }
        }
      },
      "discriminator": "protectableItemType",
      "required": [
        "protectableItemType"
      ]
    },
    "WorkloadProtectableItemResource": {
      "type": "object",
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "properties": {
          "description": "WorkloadProtectableItemResource properties",
          "type": "object",
          "properties": {
            "backupManagementType": {
              "type": "string",
              "description": "Type of backup management to backup an item."
            },
            "workloadType": {
              "type": "string",
              "description": "Type of workload for the backup management"
            },
            "protectableItemType": {
              "type": "string",
              "description": "Type of the backup item."
            },
            "friendlyName": {
              "type": "string",
              "description": "Friendly name of the backup item."
            },
            "protectionState": {
              "description": "State of the back up item.",
              "type": "string",
              "enum": [
                "Invalid",
                "NotProtected",
                "Protecting",
                "Protected",
                "ProtectionFailed"
              ],
              "x-ms-enum": {
                "name": "ProtectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "NotProtected",
                    "value": "NotProtected"
                  },
                  {
                    "name": "Protecting",
                    "value": "Protecting"
                  },
                  {
                    "name": "Protected",
                    "value": "Protected"
                  },
                  {
                    "name": "ProtectionFailed",
                    "value": "ProtectionFailed"
                  }
                ]
              }
            }
          },
          "discriminator": "protectableItemType",
          "required": [
            "protectableItemType"
          ]
        }
      }
    },
    "WorkloadProtectableItemResourceList": {
      "type": "object",
      "description": "List of WorkloadProtectableItem resources",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of resources, with each API call returning up to 200 resources per page. Use ListNext() to fetch the next page if the total number of resources exceeds 200."
        },
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "type": "object",
            "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "eTag": {
                "type": "string",
                "description": "Optional ETag."
              },
              "properties": {
                "description": "WorkloadProtectableItemResource properties",
                "type": "object",
                "properties": {
                  "backupManagementType": {
                    "type": "string",
                    "description": "Type of backup management to backup an item."
                  },
                  "workloadType": {
                    "type": "string",
                    "description": "Type of workload for the backup management"
                  },
                  "protectableItemType": {
                    "type": "string",
                    "description": "Type of the backup item."
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly name of the backup item."
                  },
                  "protectionState": {
                    "description": "State of the back up item.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "NotProtected",
                      "Protecting",
                      "Protected",
                      "ProtectionFailed"
                    ],
                    "x-ms-enum": {
                      "name": "ProtectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Invalid",
                          "value": "Invalid"
                        },
                        {
                          "name": "NotProtected",
                          "value": "NotProtected"
                        },
                        {
                          "name": "Protecting",
                          "value": "Protecting"
                        },
                        {
                          "name": "Protected",
                          "value": "Protected"
                        },
                        {
                          "name": "ProtectionFailed",
                          "value": "ProtectionFailed"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "protectableItemType",
                "required": [
                  "protectableItemType"
                ]
              }
            }
          }
        }
      }
    },
    "WorkloadType": {
      "type": "string",
      "description": "Type of workload for the backup management",
      "enum": [
        "Invalid",
        "VM",
        "FileFolder",
        "AzureSqlDb",
        "SQLDB",
        "Exchange",
        "Sharepoint",
        "VMwareVM",
        "SystemState",
        "Client",
        "GenericDataSource",
        "SQLDataBase",
        "AzureFileShare",
        "SAPHanaDatabase",
        "SAPAseDatabase",
        "SAPHanaDBInstance"
      ],
      "x-ms-enum": {
        "name": "WorkloadType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "VM",
            "value": "VM"
          },
          {
            "name": "FileFolder",
            "value": "FileFolder"
          },
          {
            "name": "AzureSqlDb",
            "value": "AzureSqlDb"
          },
          {
            "name": "SQLDB",
            "value": "SQLDB"
          },
          {
            "name": "Exchange",
            "value": "Exchange"
          },
          {
            "name": "Sharepoint",
            "value": "Sharepoint"
          },
          {
            "name": "VMwareVM",
            "value": "VMwareVM"
          },
          {
            "name": "SystemState",
            "value": "SystemState"
          },
          {
            "name": "Client",
            "value": "Client"
          },
          {
            "name": "GenericDataSource",
            "value": "GenericDataSource"
          },
          {
            "name": "SQLDataBase",
            "value": "SQLDataBase"
          },
          {
            "name": "AzureFileShare",
            "value": "AzureFileShare"
          },
          {
            "name": "SAPHanaDatabase",
            "value": "SAPHanaDatabase"
          },
          {
            "name": "SAPAseDatabase",
            "value": "SAPAseDatabase"
          },
          {
            "name": "SAPHanaDBInstance",
            "value": "SAPHanaDBInstance"
          }
        ]
      }
    },
    "XcoolState": {
      "type": "string",
      "description": "Vault x-cool state",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "XcoolState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "YearlyRetentionSchedule": {
      "type": "object",
      "description": "Yearly retention schedule.",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format for yearly retention policy.",
          "type": "string",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "Daily",
                "value": "Daily"
              },
              {
                "name": "Weekly",
                "value": "Weekly"
              }
            ]
          }
        },
        "monthsOfYear": {
          "type": "array",
          "description": "List of months of year of yearly retention policy.",
          "items": {
            "type": "string",
            "enum": [
              "Invalid",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "x-ms-enum": {
              "name": "MonthOfYear",
              "modelAsString": false
            }
          }
        },
        "retentionScheduleDaily": {
          "description": "Daily retention format for yearly retention policy.",
          "type": "object",
          "properties": {
            "daysOfTheMonth": {
              "type": "array",
              "description": "List of days of the month.",
              "items": {
                "type": "object",
                "description": "Day of the week.",
                "properties": {
                  "date": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Date of the month"
                  },
                  "isLast": {
                    "type": "boolean",
                    "description": "Whether Date is last date of month"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "retentionScheduleWeekly": {
          "description": "Weekly retention format for yearly retention policy.",
          "type": "object",
          "properties": {
            "daysOfTheWeek": {
              "type": "array",
              "description": "List of days of the week.",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": false
                }
              }
            },
            "weeksOfTheMonth": {
              "type": "array",
              "description": "List of weeks of month.",
              "items": {
                "type": "string",
                "enum": [
                  "First",
                  "Second",
                  "Third",
                  "Fourth",
                  "Last",
                  "Invalid"
                ],
                "x-ms-enum": {
                  "name": "WeekOfMonth",
                  "modelAsString": false
                }
              }
            }
          }
        },
        "retentionTimes": {
          "type": "array",
          "description": "Retention times of retention policy.",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "retentionDuration": {
          "description": "Retention duration of retention Policy.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks."
            },
            "durationType": {
              "description": "Retention duration type of retention policy.",
              "type": "string",
              "enum": [
                "Invalid",
                "Days",
                "Weeks",
                "Months",
                "Years"
              ],
              "x-ms-enum": {
                "name": "RetentionDurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "Days",
                    "value": "Days"
                  },
                  {
                    "name": "Weeks",
                    "value": "Weeks"
                  },
                  {
                    "name": "Months",
                    "value": "Months"
                  },
                  {
                    "name": "Years",
                    "value": "Years"
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "parameters": {}
}