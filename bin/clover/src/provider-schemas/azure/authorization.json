{
  "swagger": "2.0",
  "info": {
    "title": "Azure authorization",
    "version": "2025-07-01",
    "description": "Azure authorization service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/denyAssignments": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_ListForResource",
        "description": "Gets deny assignments for a resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type of the resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to get deny assignments for."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deny assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Deny assignment properties.",
                        "properties": {
                          "denyAssignmentName": {
                            "type": "string",
                            "description": "The display name of the deny assignment."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the deny assignment."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to which the deny assignment does not grant access."
                                },
                                "notActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to exclude from that the deny assignment does not grant access."
                                },
                                "dataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to which the deny assignment does not grant access."
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to exclude from that the deny assignment does not grant access."
                                },
                                "condition": {
                                  "type": "string",
                                  "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                                },
                                "conditionVersion": {
                                  "type": "string",
                                  "description": "Version of the condition."
                                }
                              },
                              "type": "object",
                              "description": "Deny assignment permissions."
                            },
                            "x-ms-identifiers": [],
                            "description": "An array of permissions that are denied by the deny assignment."
                          },
                          "scope": {
                            "type": "string",
                            "description": "The deny assignment scope."
                          },
                          "doNotApplyToChildScopes": {
                            "type": "boolean",
                            "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                          },
                          "principals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment applies."
                          },
                          "excludePrincipals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment does not apply."
                          },
                          "isSystemProtected": {
                            "type": "boolean",
                            "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Deny Assignment"
                  },
                  "description": "Deny assignment list."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Deny assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/DenyAssignmentFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/denyAssignments": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_ListForResourceGroup",
        "description": "Gets deny assignments for a resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deny assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Deny assignment properties.",
                        "properties": {
                          "denyAssignmentName": {
                            "type": "string",
                            "description": "The display name of the deny assignment."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the deny assignment."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to which the deny assignment does not grant access."
                                },
                                "notActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to exclude from that the deny assignment does not grant access."
                                },
                                "dataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to which the deny assignment does not grant access."
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to exclude from that the deny assignment does not grant access."
                                },
                                "condition": {
                                  "type": "string",
                                  "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                                },
                                "conditionVersion": {
                                  "type": "string",
                                  "description": "Version of the condition."
                                }
                              },
                              "type": "object",
                              "description": "Deny assignment permissions."
                            },
                            "x-ms-identifiers": [],
                            "description": "An array of permissions that are denied by the deny assignment."
                          },
                          "scope": {
                            "type": "string",
                            "description": "The deny assignment scope."
                          },
                          "doNotApplyToChildScopes": {
                            "type": "boolean",
                            "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                          },
                          "principals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment applies."
                          },
                          "excludePrincipals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment does not apply."
                          },
                          "isSystemProtected": {
                            "type": "boolean",
                            "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Deny Assignment"
                  },
                  "description": "Deny assignment list."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Deny assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/DenyAssignmentFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/denyAssignments": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_List",
        "description": "Gets all deny assignments for the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deny assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Deny assignment properties.",
                        "properties": {
                          "denyAssignmentName": {
                            "type": "string",
                            "description": "The display name of the deny assignment."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the deny assignment."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to which the deny assignment does not grant access."
                                },
                                "notActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to exclude from that the deny assignment does not grant access."
                                },
                                "dataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to which the deny assignment does not grant access."
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to exclude from that the deny assignment does not grant access."
                                },
                                "condition": {
                                  "type": "string",
                                  "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                                },
                                "conditionVersion": {
                                  "type": "string",
                                  "description": "Version of the condition."
                                }
                              },
                              "type": "object",
                              "description": "Deny assignment permissions."
                            },
                            "x-ms-identifiers": [],
                            "description": "An array of permissions that are denied by the deny assignment."
                          },
                          "scope": {
                            "type": "string",
                            "description": "The deny assignment scope."
                          },
                          "doNotApplyToChildScopes": {
                            "type": "boolean",
                            "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                          },
                          "principals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment applies."
                          },
                          "excludePrincipals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment does not apply."
                          },
                          "isSystemProtected": {
                            "type": "boolean",
                            "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Deny Assignment"
                  },
                  "description": "Deny assignment list."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Deny assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/DenyAssignmentFilter"
      }
    },
    "/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_Get",
        "description": "Get the specified deny assignment.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the deny assignment.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "denyAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the deny assignment to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deny assignment.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Deny assignment properties.",
                  "properties": {
                    "denyAssignmentName": {
                      "type": "string",
                      "description": "The display name of the deny assignment."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the deny assignment."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Actions to which the deny assignment does not grant access."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Actions to exclude from that the deny assignment does not grant access."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Data actions to which the deny assignment does not grant access."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Data actions to exclude from that the deny assignment does not grant access."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          }
                        },
                        "type": "object",
                        "description": "Deny assignment permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "An array of permissions that are denied by the deny assignment."
                    },
                    "scope": {
                      "type": "string",
                      "description": "The deny assignment scope."
                    },
                    "doNotApplyToChildScopes": {
                      "type": "boolean",
                      "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "readOnly": true,
                        "type": "object",
                        "description": "The name of the entity last modified it",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the principal made changes"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The name of the principal made changes"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of principal such as user , group etc"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of principal"
                          }
                        }
                      },
                      "description": "Array of principals to which the deny assignment applies."
                    },
                    "excludePrincipals": {
                      "type": "array",
                      "items": {
                        "readOnly": true,
                        "type": "object",
                        "description": "The name of the entity last modified it",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the principal made changes"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The name of the principal made changes"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of principal such as user , group etc"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of principal"
                          }
                        }
                      },
                      "description": "Array of principals to which the deny assignment does not apply."
                    },
                    "isSystemProtected": {
                      "type": "boolean",
                      "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Deny Assignment"
            }
          }
        }
      }
    },
    "/{denyAssignmentId}": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_GetById",
        "description": "Gets a deny assignment by ID.",
        "parameters": [
          {
            "name": "denyAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified deny assignment ID. For example, use the format, /subscriptions/{guid}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for subscription level deny assignments, or /providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for tenant level deny assignments.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the deny assignment.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The deny assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Deny assignment properties.",
                  "properties": {
                    "denyAssignmentName": {
                      "type": "string",
                      "description": "The display name of the deny assignment."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the deny assignment."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Actions to which the deny assignment does not grant access."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Actions to exclude from that the deny assignment does not grant access."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Data actions to which the deny assignment does not grant access."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Data actions to exclude from that the deny assignment does not grant access."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          }
                        },
                        "type": "object",
                        "description": "Deny assignment permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "An array of permissions that are denied by the deny assignment."
                    },
                    "scope": {
                      "type": "string",
                      "description": "The deny assignment scope."
                    },
                    "doNotApplyToChildScopes": {
                      "type": "boolean",
                      "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "readOnly": true,
                        "type": "object",
                        "description": "The name of the entity last modified it",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the principal made changes"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The name of the principal made changes"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of principal such as user , group etc"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of principal"
                          }
                        }
                      },
                      "description": "Array of principals to which the deny assignment applies."
                    },
                    "excludePrincipals": {
                      "type": "array",
                      "items": {
                        "readOnly": true,
                        "type": "object",
                        "description": "The name of the entity last modified it",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the principal made changes"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The name of the principal made changes"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of principal such as user , group etc"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of principal"
                          }
                        }
                      },
                      "description": "Array of principals to which the deny assignment does not apply."
                    },
                    "isSystemProtected": {
                      "type": "boolean",
                      "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Deny Assignment"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/denyAssignments": {
      "get": {
        "tags": [
          "DenyAssignments"
        ],
        "operationId": "DenyAssignments_ListForScope",
        "description": "Gets deny assignments for a scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the deny assignments.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deny assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The deny assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Deny assignment properties.",
                        "properties": {
                          "denyAssignmentName": {
                            "type": "string",
                            "description": "The display name of the deny assignment."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the deny assignment."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to which the deny assignment does not grant access."
                                },
                                "notActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Actions to exclude from that the deny assignment does not grant access."
                                },
                                "dataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to which the deny assignment does not grant access."
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Data actions to exclude from that the deny assignment does not grant access."
                                },
                                "condition": {
                                  "type": "string",
                                  "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                                },
                                "conditionVersion": {
                                  "type": "string",
                                  "description": "Version of the condition."
                                }
                              },
                              "type": "object",
                              "description": "Deny assignment permissions."
                            },
                            "x-ms-identifiers": [],
                            "description": "An array of permissions that are denied by the deny assignment."
                          },
                          "scope": {
                            "type": "string",
                            "description": "The deny assignment scope."
                          },
                          "doNotApplyToChildScopes": {
                            "type": "boolean",
                            "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                          },
                          "principals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment applies."
                          },
                          "excludePrincipals": {
                            "type": "array",
                            "items": {
                              "readOnly": true,
                              "type": "object",
                              "description": "The name of the entity last modified it",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The id of the principal made changes"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The name of the principal made changes"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of principal such as user , group etc"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email of principal"
                                }
                              }
                            },
                            "description": "Array of principals to which the deny assignment does not apply."
                          },
                          "isSystemProtected": {
                            "type": "boolean",
                            "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition."
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Deny Assignment"
                  },
                  "description": "Deny assignment list."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Deny assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/DenyAssignmentFilter"
      }
    },
    "/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "ProviderOperationsMetadata"
        ],
        "operationId": "ProviderOperationsMetadata_Get",
        "description": "Gets provider operations metadata for the specified resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "resourceTypes",
            "description": "Specifies whether to expand the values."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the operations metadata.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The provider id."
                },
                "name": {
                  "type": "string",
                  "description": "The provider name."
                },
                "type": {
                  "type": "string",
                  "description": "The provider type."
                },
                "displayName": {
                  "type": "string",
                  "description": "The provider display name."
                },
                "resourceTypes": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The resource type name."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The resource type display name."
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The operation name."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The operation display name."
                            },
                            "description": {
                              "type": "string",
                              "description": "The operation description."
                            },
                            "origin": {
                              "type": "string",
                              "description": "The operation origin."
                            },
                            "properties": {
                              "type": "object",
                              "x-ms-client-flatten": true,
                              "description": "The operation properties."
                            },
                            "isDataAction": {
                              "type": "boolean",
                              "description": "The dataAction flag to specify the operation type."
                            }
                          },
                          "type": "object",
                          "description": "Operation"
                        },
                        "x-ms-identifiers": [],
                        "description": "The resource type operations."
                      }
                    },
                    "type": "object",
                    "description": "Resource Type"
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "The provider resource types"
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The operation name."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The operation display name."
                      },
                      "description": {
                        "type": "string",
                        "description": "The operation description."
                      },
                      "origin": {
                        "type": "string",
                        "description": "The operation origin."
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The operation properties."
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "The dataAction flag to specify the operation type."
                      }
                    },
                    "type": "object",
                    "description": "Operation"
                  },
                  "x-ms-identifiers": [],
                  "description": "The provider operations."
                }
              },
              "type": "object",
              "description": "Provider Operations metadata"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Authorization/providerOperations": {
      "get": {
        "tags": [
          "ProviderOperationsMetadata"
        ],
        "operationId": "ProviderOperationsMetadata_List",
        "description": "Gets provider operations metadata for all resource providers.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "resourceTypes",
            "description": "Specifies whether to expand the values."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of the operations metadata.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The provider id."
                      },
                      "name": {
                        "type": "string",
                        "description": "The provider name."
                      },
                      "type": {
                        "type": "string",
                        "description": "The provider type."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The provider display name."
                      },
                      "resourceTypes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The resource type name."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The resource type display name."
                            },
                            "operations": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The operation name."
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "The operation display name."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The operation description."
                                  },
                                  "origin": {
                                    "type": "string",
                                    "description": "The operation origin."
                                  },
                                  "properties": {
                                    "type": "object",
                                    "x-ms-client-flatten": true,
                                    "description": "The operation properties."
                                  },
                                  "isDataAction": {
                                    "type": "boolean",
                                    "description": "The dataAction flag to specify the operation type."
                                  }
                                },
                                "type": "object",
                                "description": "Operation"
                              },
                              "x-ms-identifiers": [],
                              "description": "The resource type operations."
                            }
                          },
                          "type": "object",
                          "description": "Resource Type"
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "description": "The provider resource types"
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The operation name."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The operation display name."
                            },
                            "description": {
                              "type": "string",
                              "description": "The operation description."
                            },
                            "origin": {
                              "type": "string",
                              "description": "The operation origin."
                            },
                            "properties": {
                              "type": "object",
                              "x-ms-client-flatten": true,
                              "description": "The operation properties."
                            },
                            "isDataAction": {
                              "type": "boolean",
                              "description": "The dataAction flag to specify the operation type."
                            }
                          },
                          "type": "object",
                          "description": "Operation"
                        },
                        "x-ms-identifiers": [],
                        "description": "The provider operations."
                      }
                    },
                    "type": "object",
                    "description": "Provider Operations metadata"
                  },
                  "description": "The list of providers."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Provider operations metadata list"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_ListForSubscription",
        "description": "List all role assignments that apply to a subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Tenant ID for cross-tenant request",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Role assignment properties.",
                        "properties": {
                          "scope": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The role assignment scope."
                          },
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "The role definition ID."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The principal type of the assigned principal ID.",
                            "enum": [
                              "User",
                              "Group",
                              "ServicePrincipal",
                              "ForeignGroup",
                              "Device"
                            ],
                            "default": "User",
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of role assignment"
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition. Currently the only accepted value is '2.0'"
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          },
                          "delegatedManagedIdentityResourceId": {
                            "type": "string",
                            "description": "Id of the delegated managed identity resource"
                          }
                        },
                        "required": [
                          "roleDefinitionId",
                          "principalId"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Role Assignments"
                  },
                  "description": "Role assignment list."
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The skipToken to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Role assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleAssignmentFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_ListForResourceGroup",
        "description": "List all role assignments that apply to a resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Tenant ID for cross-tenant request",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Role assignment properties.",
                        "properties": {
                          "scope": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The role assignment scope."
                          },
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "The role definition ID."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The principal type of the assigned principal ID.",
                            "enum": [
                              "User",
                              "Group",
                              "ServicePrincipal",
                              "ForeignGroup",
                              "Device"
                            ],
                            "default": "User",
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of role assignment"
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition. Currently the only accepted value is '2.0'"
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          },
                          "delegatedManagedIdentityResourceId": {
                            "type": "string",
                            "description": "Id of the delegated managed identity resource"
                          }
                        },
                        "required": [
                          "roleDefinitionId",
                          "principalId"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Role Assignments"
                  },
                  "description": "Role assignment list."
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The skipToken to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Role assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleAssignmentFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_ListForResource",
        "description": "List all role assignments that apply to a resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites).",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource name.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Tenant ID for cross-tenant request",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role assignments.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment ID."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment name."
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role assignment type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Role assignment properties.",
                        "properties": {
                          "scope": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The role assignment scope."
                          },
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "The role definition ID."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The principal type of the assigned principal ID.",
                            "enum": [
                              "User",
                              "Group",
                              "ServicePrincipal",
                              "ForeignGroup",
                              "Device"
                            ],
                            "default": "User",
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of role assignment"
                          },
                          "condition": {
                            "type": "string",
                            "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                          },
                          "conditionVersion": {
                            "type": "string",
                            "description": "Version of the condition. Currently the only accepted value is '2.0'"
                          },
                          "createdOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was created",
                            "format": "date-time"
                          },
                          "updatedOn": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Time it was updated",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who created the assignment"
                          },
                          "updatedBy": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Id of the user who updated the assignment"
                          },
                          "delegatedManagedIdentityResourceId": {
                            "type": "string",
                            "description": "Id of the delegated managed identity resource"
                          }
                        },
                        "required": [
                          "roleDefinitionId",
                          "principalId"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Role Assignments"
                  },
                  "description": "Role assignment list."
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The skipToken to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Role assignment list operation result."
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleAssignmentFilter"
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}": {
      "get": {
        "operationId": "RoleAssignments_Get",
        "description": "Get the specified role assignment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role assignment.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleAssignmentName",
            "in": "path",
            "description": "The name of the role assignment to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role Assignments",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role assignment ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role assignment name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The role assignment type.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Role assignment properties.",
                  "type": "object",
                  "properties": {
                    "scope": {
                      "description": "The role scope.",
                      "type": "string",
                      "enum": [
                        "/",
                        "/keys"
                      ],
                      "x-ms-enum": {
                        "name": "RoleScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Global",
                            "value": "/",
                            "description": "Global scope"
                          },
                          {
                            "name": "Keys",
                            "value": "/keys",
                            "description": "Keys scope"
                          }
                        ]
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "RoleAssignments_Create",
        "description": "Creates a role assignment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role assignment to create.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleAssignmentName",
            "in": "path",
            "description": "The name of the role assignment to create. It can be any valid GUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the role assignment.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Role assignment create parameters.",
              "properties": {
                "properties": {
                  "description": "Role assignment properties.",
                  "type": "object",
                  "properties": {
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID used in the role assignment."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group."
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "type": "object",
              "description": "Role Assignments",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role assignment ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role assignment name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The role assignment type.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Role assignment properties.",
                  "type": "object",
                  "properties": {
                    "scope": {
                      "description": "The role scope.",
                      "type": "string",
                      "enum": [
                        "/",
                        "/keys"
                      ],
                      "x-ms-enum": {
                        "name": "RoleScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Global",
                            "value": "/",
                            "description": "Global scope"
                          },
                          {
                            "name": "Keys",
                            "value": "/keys",
                            "description": "Keys scope"
                          }
                        ]
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "RoleAssignments_Delete",
        "description": "Deletes a role assignment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role assignment to delete.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleAssignmentName",
            "in": "path",
            "description": "The name of the role assignment to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role Assignments",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role assignment ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role assignment name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The role assignment type.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Role assignment properties.",
                  "type": "object",
                  "properties": {
                    "scope": {
                      "description": "The role scope.",
                      "type": "string",
                      "enum": [
                        "/",
                        "/keys"
                      ],
                      "x-ms-enum": {
                        "name": "RoleScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Global",
                            "value": "/",
                            "description": "Global scope"
                          },
                          {
                            "name": "Keys",
                            "value": "/keys",
                            "description": "Keys scope"
                          }
                        ]
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "operationId": "RoleAssignments_ListForScope",
        "description": "Gets role assignments for a scope.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role assignments.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role assignment list operation result.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Role assignment list.",
                  "items": {
                    "type": "object",
                    "description": "Role Assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The role assignment ID.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The role assignment name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The role assignment type.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Role assignment properties.",
                        "type": "object",
                        "properties": {
                          "scope": {
                            "description": "The role scope.",
                            "type": "string",
                            "enum": [
                              "/",
                              "/keys"
                            ],
                            "x-ms-enum": {
                              "name": "RoleScope",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Global",
                                  "value": "/",
                                  "description": "Global scope"
                                },
                                {
                                  "name": "Keys",
                                  "value": "/keys",
                                  "description": "Keys scope"
                                }
                              ]
                            }
                          },
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "The role definition ID."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/{roleAssignmentId}": {
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_GetById",
        "description": "Get a role assignment by ID.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the role assignment including scope, resource name, and resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Tenant ID for cross-tenant request",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the role assignment.",
            "schema": {
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role assignment properties.",
                  "properties": {
                    "scope": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role assignment scope."
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    },
                    "principalType": {
                      "type": "string",
                      "description": "The principal type of the assigned principal ID.",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal",
                        "ForeignGroup",
                        "Device"
                      ],
                      "default": "User",
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of role assignment"
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition. Currently the only accepted value is '2.0'"
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "description": "Id of the delegated managed identity resource"
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ],
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role Assignments"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_CreateById",
        "description": "Create or update a role assignment by ID.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the role assignment including scope, resource name, and resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role assignment properties.",
                  "properties": {
                    "scope": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role assignment scope."
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    },
                    "principalType": {
                      "type": "string",
                      "description": "The principal type of the assigned principal ID.",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal",
                        "ForeignGroup",
                        "Device"
                      ],
                      "default": "User",
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of role assignment"
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition. Currently the only accepted value is '2.0'"
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "description": "Id of the delegated managed identity resource"
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "Role assignment create parameters."
            },
            "description": "Parameters for the role assignment.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the role assignment.",
            "schema": {
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role assignment properties.",
                  "properties": {
                    "scope": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role assignment scope."
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    },
                    "principalType": {
                      "type": "string",
                      "description": "The principal type of the assigned principal ID.",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal",
                        "ForeignGroup",
                        "Device"
                      ],
                      "default": "User",
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of role assignment"
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition. Currently the only accepted value is '2.0'"
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "description": "Id of the delegated managed identity resource"
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ],
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role Assignments"
            }
          },
          "201": {
            "description": "Returns the role assignment.",
            "schema": {
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role assignment properties.",
                  "properties": {
                    "scope": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role assignment scope."
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    },
                    "principalType": {
                      "type": "string",
                      "description": "The principal type of the assigned principal ID.",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal",
                        "ForeignGroup",
                        "Device"
                      ],
                      "default": "User",
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of role assignment"
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition. Currently the only accepted value is '2.0'"
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "description": "Id of the delegated managed identity resource"
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ],
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role Assignments"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_DeleteById",
        "description": "Delete a role assignment by ID.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the role assignment including scope, resource name, and resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Tenant ID for cross-tenant request",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted role assignment.",
            "schema": {
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role assignment type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role assignment properties.",
                  "properties": {
                    "scope": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role assignment scope."
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The role definition ID."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID."
                    },
                    "principalType": {
                      "type": "string",
                      "description": "The principal type of the assigned principal ID.",
                      "enum": [
                        "User",
                        "Group",
                        "ServicePrincipal",
                        "ForeignGroup",
                        "Device"
                      ],
                      "default": "User",
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of role assignment"
                    },
                    "condition": {
                      "type": "string",
                      "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                    },
                    "conditionVersion": {
                      "type": "string",
                      "description": "Version of the condition. Currently the only accepted value is '2.0'"
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "description": "Id of the delegated managed identity resource"
                    }
                  },
                  "required": [
                    "roleDefinitionId",
                    "principalId"
                  ],
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role Assignments"
            }
          },
          "204": {
            "description": "Role assignment already deleted or does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "operationId": "Permissions_ListForResourceGroup",
        "description": "Gets all permissions the caller has for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of permissions.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "actions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed actions."
                      },
                      "notActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Denied actions."
                      },
                      "dataActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed Data actions."
                      },
                      "notDataActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Denied Data actions."
                      }
                    },
                    "type": "object",
                    "description": "Role definition permissions."
                  },
                  "x-ms-identifiers": [],
                  "description": "An array of permissions."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Permissions information."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "operationId": "Permissions_ListForResource",
        "description": "Gets all permissions the caller has for a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type of the resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "pattern": ".+",
            "type": "string",
            "description": "The name of the resource to get the permissions for."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of permissions.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "actions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed actions."
                      },
                      "notActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Denied actions."
                      },
                      "dataActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed Data actions."
                      },
                      "notDataActions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Denied Data actions."
                      }
                    },
                    "type": "object",
                    "description": "Role definition permissions."
                  },
                  "x-ms-identifiers": [],
                  "description": "An array of permissions."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "type": "object",
              "description": "Permissions information."
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}": {
      "delete": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_Delete",
        "description": "Deletes a role definition.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role definition.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the role definition to delete."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the role definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role definition properties.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "type": "string",
                      "description": "The role type.",
                      "x-ms-client-name": "roleType"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "type": "object",
                        "description": "Role definition permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "Role definition permissions."
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role definition."
            }
          },
          "204": {
            "description": "Role definition already deleted or does not exist."
          }
        }
      },
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_Get",
        "description": "Get role definition by name (GUID).",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role definition.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the role definition."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the role definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role definition properties.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "type": "string",
                      "description": "The role type.",
                      "x-ms-client-name": "roleType"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "type": "object",
                        "description": "Role definition permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "Role definition permissions."
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role definition."
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_CreateOrUpdate",
        "description": "Creates or updates a role definition.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role definition.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the role definition."
          },
          {
            "name": "roleDefinition",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role definition properties.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "type": "string",
                      "description": "The role type.",
                      "x-ms-client-name": "roleType"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "type": "object",
                        "description": "Role definition permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "Role definition permissions."
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role definition."
            },
            "description": "The values for the role definition."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "201": {
            "description": "OK - Returns information about the role definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition ID."
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition name."
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The role definition type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Role definition properties.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "type": "string",
                      "description": "The role type.",
                      "x-ms-client-name": "roleType"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed actions."
                          },
                          "notActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied actions."
                          },
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allowed Data actions."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Denied Data actions."
                          }
                        },
                        "type": "object",
                        "description": "Role definition permissions."
                      },
                      "x-ms-identifiers": [],
                      "description": "Role definition permissions."
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Role definition assignable scopes."
                    },
                    "createdOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was created",
                      "format": "date-time"
                    },
                    "updatedOn": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Time it was updated",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who created the assignment"
                    },
                    "updatedBy": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Id of the user who updated the assignment"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Role definition."
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "operationId": "RoleDefinitions_List",
        "description": "Get all role definitions that are applicable at scope and above.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role definition.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role definition list operation result.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Role definition list.",
                  "items": {
                    "type": "object",
                    "description": "Role definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The role definition ID.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The role definition name.",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The role definition type.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Microsoft.Authorization/roleDefinitions"
                        ],
                        "x-ms-enum": {
                          "name": "RoleDefinitionType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Microsoft.Authorization/roleDefinitions",
                              "value": "Microsoft.Authorization/roleDefinitions",
                              "description": "Microsoft-defined role definitions."
                            }
                          ]
                        }
                      },
                      "properties": {
                        "description": "Role definition properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "roleName": {
                            "type": "string",
                            "description": "The role name."
                          },
                          "description": {
                            "type": "string",
                            "description": "The role definition description."
                          },
                          "type": {
                            "description": "The role type.",
                            "x-ms-client-name": "roleType",
                            "type": "string",
                            "enum": [
                              "AKVBuiltInRole",
                              "CustomRole"
                            ],
                            "x-ms-enum": {
                              "name": "RoleType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BuiltInRole",
                                  "value": "AKVBuiltInRole",
                                  "description": "Built in role."
                                },
                                {
                                  "name": "CustomRole",
                                  "value": "CustomRole",
                                  "description": "Custom role."
                                }
                              ]
                            }
                          },
                          "permissions": {
                            "type": "array",
                            "description": "Role definition permissions.",
                            "items": {
                              "type": "object",
                              "description": "Role definition permissions.",
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Action permissions that are granted.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "notActions": {
                                  "type": "array",
                                  "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "dataActions": {
                                  "type": "array",
                                  "description": "Data action permissions that are granted.",
                                  "items": {
                                    "type": "string",
                                    "description": "Supported permissions for data actions.",
                                    "enum": [
                                      "Microsoft.KeyVault/managedHsm/keys/read/action",
                                      "Microsoft.KeyVault/managedHsm/keys/write/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                      "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                      "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                      "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                      "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                      "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                      "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                      "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                      "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                      "Microsoft.KeyVault/managedHsm/keys/create",
                                      "Microsoft.KeyVault/managedHsm/keys/delete",
                                      "Microsoft.KeyVault/managedHsm/keys/export/action",
                                      "Microsoft.KeyVault/managedHsm/keys/release/action",
                                      "Microsoft.KeyVault/managedHsm/keys/import/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                      "Microsoft.KeyVault/managedHsm/backup/start/action",
                                      "Microsoft.KeyVault/managedHsm/restore/start/action",
                                      "Microsoft.KeyVault/managedHsm/backup/status/action",
                                      "Microsoft.KeyVault/managedHsm/restore/status/action",
                                      "Microsoft.KeyVault/managedHsm/rng/action"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataAction",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ReadHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                          "description": "Read HSM key metadata."
                                        },
                                        {
                                          "name": "WriteHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                          "description": "Update an HSM key."
                                        },
                                        {
                                          "name": "ReadDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                          "description": "Read deleted HSM key."
                                        },
                                        {
                                          "name": "RecoverDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                          "description": "Recover deleted HSM key."
                                        },
                                        {
                                          "name": "BackupHsmKeys",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                          "description": "Backup HSM keys."
                                        },
                                        {
                                          "name": "RestoreHsmKeys",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                          "description": "Restore HSM keys."
                                        },
                                        {
                                          "name": "DeleteRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                          "description": "Delete role assignment."
                                        },
                                        {
                                          "name": "GetRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                          "description": "Get role assignment."
                                        },
                                        {
                                          "name": "WriteRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                          "description": "Create or update role assignment."
                                        },
                                        {
                                          "name": "ReadRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                          "description": "Get role definition."
                                        },
                                        {
                                          "name": "WriteRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                          "description": "Create or update role definition."
                                        },
                                        {
                                          "name": "DeleteRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                          "description": "Delete role definition."
                                        },
                                        {
                                          "name": "EncryptHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                          "description": "Encrypt using an HSM key."
                                        },
                                        {
                                          "name": "DecryptHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                          "description": "Decrypt using an HSM key."
                                        },
                                        {
                                          "name": "WrapHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                          "description": "Wrap using an HSM key."
                                        },
                                        {
                                          "name": "UnwrapHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                          "description": "Unwrap using an HSM key."
                                        },
                                        {
                                          "name": "SignHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                          "description": "Sign using an HSM key."
                                        },
                                        {
                                          "name": "VerifyHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                          "description": "Verify using an HSM key."
                                        },
                                        {
                                          "name": "CreateHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                          "description": "Create an HSM key."
                                        },
                                        {
                                          "name": "DeleteHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                          "description": "Delete an HSM key."
                                        },
                                        {
                                          "name": "ExportHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                          "description": "Export an HSM key."
                                        },
                                        {
                                          "name": "ReleaseKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                          "description": "Release an HSM key using Secure Key Release."
                                        },
                                        {
                                          "name": "ImportHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                          "description": "Import an HSM key."
                                        },
                                        {
                                          "name": "PurgeDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                          "description": "Purge a deleted HSM key."
                                        },
                                        {
                                          "name": "DownloadHsmSecurityDomain",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                          "description": "Download an HSM security domain."
                                        },
                                        {
                                          "name": "DownloadHsmSecurityDomainStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                          "description": "Check status of HSM security domain download."
                                        },
                                        {
                                          "name": "UploadHsmSecurityDomain",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                          "description": "Upload an HSM security domain."
                                        },
                                        {
                                          "name": "ReadHsmSecurityDomainStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                          "description": "Check the status of the HSM security domain exchange file."
                                        },
                                        {
                                          "name": "ReadHsmSecurityDomainTransferKey",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                          "description": "Download an HSM security domain transfer key."
                                        },
                                        {
                                          "name": "StartHsmBackup",
                                          "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                          "description": "Start an HSM backup."
                                        },
                                        {
                                          "name": "StartHsmRestore",
                                          "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                          "description": "Start an HSM restore."
                                        },
                                        {
                                          "name": "ReadHsmBackupStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                          "description": "Read an HSM backup status."
                                        },
                                        {
                                          "name": "ReadHsmRestoreStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                          "description": "Read an HSM restore status."
                                        },
                                        {
                                          "name": "RandomNumbersGenerate",
                                          "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                          "description": "Generate random numbers."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                                  "items": {
                                    "type": "string",
                                    "description": "Supported permissions for data actions.",
                                    "enum": [
                                      "Microsoft.KeyVault/managedHsm/keys/read/action",
                                      "Microsoft.KeyVault/managedHsm/keys/write/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                      "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                      "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                      "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                      "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                      "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                      "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                      "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                      "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                      "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                      "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                      "Microsoft.KeyVault/managedHsm/keys/create",
                                      "Microsoft.KeyVault/managedHsm/keys/delete",
                                      "Microsoft.KeyVault/managedHsm/keys/export/action",
                                      "Microsoft.KeyVault/managedHsm/keys/release/action",
                                      "Microsoft.KeyVault/managedHsm/keys/import/action",
                                      "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                      "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                      "Microsoft.KeyVault/managedHsm/backup/start/action",
                                      "Microsoft.KeyVault/managedHsm/restore/start/action",
                                      "Microsoft.KeyVault/managedHsm/backup/status/action",
                                      "Microsoft.KeyVault/managedHsm/restore/status/action",
                                      "Microsoft.KeyVault/managedHsm/rng/action"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataAction",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ReadHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                          "description": "Read HSM key metadata."
                                        },
                                        {
                                          "name": "WriteHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                          "description": "Update an HSM key."
                                        },
                                        {
                                          "name": "ReadDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                          "description": "Read deleted HSM key."
                                        },
                                        {
                                          "name": "RecoverDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                          "description": "Recover deleted HSM key."
                                        },
                                        {
                                          "name": "BackupHsmKeys",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                          "description": "Backup HSM keys."
                                        },
                                        {
                                          "name": "RestoreHsmKeys",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                          "description": "Restore HSM keys."
                                        },
                                        {
                                          "name": "DeleteRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                          "description": "Delete role assignment."
                                        },
                                        {
                                          "name": "GetRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                          "description": "Get role assignment."
                                        },
                                        {
                                          "name": "WriteRoleAssignment",
                                          "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                          "description": "Create or update role assignment."
                                        },
                                        {
                                          "name": "ReadRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                          "description": "Get role definition."
                                        },
                                        {
                                          "name": "WriteRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                          "description": "Create or update role definition."
                                        },
                                        {
                                          "name": "DeleteRoleDefinition",
                                          "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                          "description": "Delete role definition."
                                        },
                                        {
                                          "name": "EncryptHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                          "description": "Encrypt using an HSM key."
                                        },
                                        {
                                          "name": "DecryptHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                          "description": "Decrypt using an HSM key."
                                        },
                                        {
                                          "name": "WrapHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                          "description": "Wrap using an HSM key."
                                        },
                                        {
                                          "name": "UnwrapHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                          "description": "Unwrap using an HSM key."
                                        },
                                        {
                                          "name": "SignHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                          "description": "Sign using an HSM key."
                                        },
                                        {
                                          "name": "VerifyHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                          "description": "Verify using an HSM key."
                                        },
                                        {
                                          "name": "CreateHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                          "description": "Create an HSM key."
                                        },
                                        {
                                          "name": "DeleteHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                          "description": "Delete an HSM key."
                                        },
                                        {
                                          "name": "ExportHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                          "description": "Export an HSM key."
                                        },
                                        {
                                          "name": "ReleaseKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                          "description": "Release an HSM key using Secure Key Release."
                                        },
                                        {
                                          "name": "ImportHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                          "description": "Import an HSM key."
                                        },
                                        {
                                          "name": "PurgeDeletedHsmKey",
                                          "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                          "description": "Purge a deleted HSM key."
                                        },
                                        {
                                          "name": "DownloadHsmSecurityDomain",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                          "description": "Download an HSM security domain."
                                        },
                                        {
                                          "name": "DownloadHsmSecurityDomainStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                          "description": "Check status of HSM security domain download."
                                        },
                                        {
                                          "name": "UploadHsmSecurityDomain",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                          "description": "Upload an HSM security domain."
                                        },
                                        {
                                          "name": "ReadHsmSecurityDomainStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                          "description": "Check the status of the HSM security domain exchange file."
                                        },
                                        {
                                          "name": "ReadHsmSecurityDomainTransferKey",
                                          "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                          "description": "Download an HSM security domain transfer key."
                                        },
                                        {
                                          "name": "StartHsmBackup",
                                          "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                          "description": "Start an HSM backup."
                                        },
                                        {
                                          "name": "StartHsmRestore",
                                          "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                          "description": "Start an HSM restore."
                                        },
                                        {
                                          "name": "ReadHsmBackupStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                          "description": "Read an HSM backup status."
                                        },
                                        {
                                          "name": "ReadHsmRestoreStatus",
                                          "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                          "description": "Read an HSM restore status."
                                        },
                                        {
                                          "name": "RandomNumbersGenerate",
                                          "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                          "description": "Generate random numbers."
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "assignableScopes": {
                            "type": "array",
                            "description": "Role definition assignable scopes.",
                            "items": {
                              "type": "string",
                              "description": "The role scope.",
                              "enum": [
                                "/",
                                "/keys"
                              ],
                              "x-ms-enum": {
                                "name": "RoleScope",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Global",
                                    "value": "/",
                                    "description": "Global scope"
                                  },
                                  {
                                    "name": "Keys",
                                    "value": "/keys",
                                    "description": "Keys scope"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionName}": {
      "get": {
        "operationId": "RoleDefinitions_Get",
        "description": "Get the specified role definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role definition to get. Managed HSM only supports '/'.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionName",
            "in": "path",
            "description": "The name of the role definition to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role definition ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role definition name.",
                  "readOnly": true
                },
                "type": {
                  "description": "The role definition type.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Microsoft.Authorization/roleDefinitions"
                  ],
                  "x-ms-enum": {
                    "name": "RoleDefinitionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Microsoft.Authorization/roleDefinitions",
                        "value": "Microsoft.Authorization/roleDefinitions",
                        "description": "Microsoft-defined role definitions."
                      }
                    ]
                  }
                },
                "properties": {
                  "description": "Role definition properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "description": "The role type.",
                      "x-ms-client-name": "roleType",
                      "type": "string",
                      "enum": [
                        "AKVBuiltInRole",
                        "CustomRole"
                      ],
                      "x-ms-enum": {
                        "name": "RoleType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "BuiltInRole",
                            "value": "AKVBuiltInRole",
                            "description": "Built in role."
                          },
                          {
                            "name": "CustomRole",
                            "value": "CustomRole",
                            "description": "Custom role."
                          }
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Role definition permissions.",
                      "items": {
                        "type": "object",
                        "description": "Role definition permissions.",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "description": "Action permissions that are granted.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "notActions": {
                            "type": "array",
                            "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataActions": {
                            "type": "array",
                            "description": "Data action permissions that are granted.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          },
                          "notDataActions": {
                            "type": "array",
                            "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "description": "Role definition assignable scopes.",
                      "items": {
                        "type": "string",
                        "description": "The role scope.",
                        "enum": [
                          "/",
                          "/keys"
                        ],
                        "x-ms-enum": {
                          "name": "RoleScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Global",
                              "value": "/",
                              "description": "Global scope"
                            },
                            {
                              "name": "Keys",
                              "value": "/keys",
                              "description": "Keys scope"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "RoleDefinitions_CreateOrUpdate",
        "description": "Creates or updates a custom role definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role definition to create or update. Managed HSM only supports '/'.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionName",
            "in": "path",
            "description": "The name of the role definition to create or update. It can be any valid GUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the role definition.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Role definition create parameters.",
              "properties": {
                "properties": {
                  "description": "Role definition properties.",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "description": "The role type.",
                      "x-ms-client-name": "roleType",
                      "type": "string",
                      "enum": [
                        "AKVBuiltInRole",
                        "CustomRole"
                      ],
                      "x-ms-enum": {
                        "name": "RoleType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "BuiltInRole",
                            "value": "AKVBuiltInRole",
                            "description": "Built in role."
                          },
                          {
                            "name": "CustomRole",
                            "value": "CustomRole",
                            "description": "Custom role."
                          }
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Role definition permissions.",
                      "items": {
                        "type": "object",
                        "description": "Role definition permissions.",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "description": "Action permissions that are granted.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "notActions": {
                            "type": "array",
                            "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataActions": {
                            "type": "array",
                            "description": "Data action permissions that are granted.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          },
                          "notDataActions": {
                            "type": "array",
                            "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "description": "Role definition assignable scopes.",
                      "items": {
                        "type": "string",
                        "description": "The role scope.",
                        "enum": [
                          "/",
                          "/keys"
                        ],
                        "x-ms-enum": {
                          "name": "RoleScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Global",
                              "value": "/",
                              "description": "Global scope"
                            },
                            {
                              "name": "Keys",
                              "value": "/keys",
                              "description": "Keys scope"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "type": "object",
              "description": "Role definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role definition ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role definition name.",
                  "readOnly": true
                },
                "type": {
                  "description": "The role definition type.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Microsoft.Authorization/roleDefinitions"
                  ],
                  "x-ms-enum": {
                    "name": "RoleDefinitionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Microsoft.Authorization/roleDefinitions",
                        "value": "Microsoft.Authorization/roleDefinitions",
                        "description": "Microsoft-defined role definitions."
                      }
                    ]
                  }
                },
                "properties": {
                  "description": "Role definition properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "description": "The role type.",
                      "x-ms-client-name": "roleType",
                      "type": "string",
                      "enum": [
                        "AKVBuiltInRole",
                        "CustomRole"
                      ],
                      "x-ms-enum": {
                        "name": "RoleType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "BuiltInRole",
                            "value": "AKVBuiltInRole",
                            "description": "Built in role."
                          },
                          {
                            "name": "CustomRole",
                            "value": "CustomRole",
                            "description": "Custom role."
                          }
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Role definition permissions.",
                      "items": {
                        "type": "object",
                        "description": "Role definition permissions.",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "description": "Action permissions that are granted.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "notActions": {
                            "type": "array",
                            "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataActions": {
                            "type": "array",
                            "description": "Data action permissions that are granted.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          },
                          "notDataActions": {
                            "type": "array",
                            "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "description": "Role definition assignable scopes.",
                      "items": {
                        "type": "string",
                        "description": "The role scope.",
                        "enum": [
                          "/",
                          "/keys"
                        ],
                        "x-ms-enum": {
                          "name": "RoleScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Global",
                              "value": "/",
                              "description": "Global scope"
                            },
                            {
                              "name": "Keys",
                              "value": "/keys",
                              "description": "Keys scope"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "RoleDefinitions_Delete",
        "description": "Deletes a custom role definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the role definition to delete. Managed HSM only supports '/'.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleDefinitionName",
            "in": "path",
            "description": "The name (GUID) of the role definition to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Role definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The role definition ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The role definition name.",
                  "readOnly": true
                },
                "type": {
                  "description": "The role definition type.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Microsoft.Authorization/roleDefinitions"
                  ],
                  "x-ms-enum": {
                    "name": "RoleDefinitionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Microsoft.Authorization/roleDefinitions",
                        "value": "Microsoft.Authorization/roleDefinitions",
                        "description": "Microsoft-defined role definitions."
                      }
                    ]
                  }
                },
                "properties": {
                  "description": "Role definition properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "The role name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The role definition description."
                    },
                    "type": {
                      "description": "The role type.",
                      "x-ms-client-name": "roleType",
                      "type": "string",
                      "enum": [
                        "AKVBuiltInRole",
                        "CustomRole"
                      ],
                      "x-ms-enum": {
                        "name": "RoleType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "BuiltInRole",
                            "value": "AKVBuiltInRole",
                            "description": "Built in role."
                          },
                          {
                            "name": "CustomRole",
                            "value": "CustomRole",
                            "description": "Custom role."
                          }
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Role definition permissions.",
                      "items": {
                        "type": "object",
                        "description": "Role definition permissions.",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "description": "Action permissions that are granted.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "notActions": {
                            "type": "array",
                            "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataActions": {
                            "type": "array",
                            "description": "Data action permissions that are granted.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          },
                          "notDataActions": {
                            "type": "array",
                            "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                            "items": {
                              "type": "string",
                              "description": "Supported permissions for data actions.",
                              "enum": [
                                "Microsoft.KeyVault/managedHsm/keys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/write/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                "Microsoft.KeyVault/managedHsm/keys/create",
                                "Microsoft.KeyVault/managedHsm/keys/delete",
                                "Microsoft.KeyVault/managedHsm/keys/export/action",
                                "Microsoft.KeyVault/managedHsm/keys/release/action",
                                "Microsoft.KeyVault/managedHsm/keys/import/action",
                                "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                "Microsoft.KeyVault/managedHsm/backup/start/action",
                                "Microsoft.KeyVault/managedHsm/restore/start/action",
                                "Microsoft.KeyVault/managedHsm/backup/status/action",
                                "Microsoft.KeyVault/managedHsm/restore/status/action",
                                "Microsoft.KeyVault/managedHsm/rng/action"
                              ],
                              "x-ms-enum": {
                                "name": "DataAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                    "description": "Read HSM key metadata."
                                  },
                                  {
                                    "name": "WriteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                    "description": "Update an HSM key."
                                  },
                                  {
                                    "name": "ReadDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                    "description": "Read deleted HSM key."
                                  },
                                  {
                                    "name": "RecoverDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                    "description": "Recover deleted HSM key."
                                  },
                                  {
                                    "name": "BackupHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                    "description": "Backup HSM keys."
                                  },
                                  {
                                    "name": "RestoreHsmKeys",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                    "description": "Restore HSM keys."
                                  },
                                  {
                                    "name": "DeleteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                    "description": "Delete role assignment."
                                  },
                                  {
                                    "name": "GetRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                    "description": "Get role assignment."
                                  },
                                  {
                                    "name": "WriteRoleAssignment",
                                    "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                    "description": "Create or update role assignment."
                                  },
                                  {
                                    "name": "ReadRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                    "description": "Get role definition."
                                  },
                                  {
                                    "name": "WriteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                    "description": "Create or update role definition."
                                  },
                                  {
                                    "name": "DeleteRoleDefinition",
                                    "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                    "description": "Delete role definition."
                                  },
                                  {
                                    "name": "EncryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                    "description": "Encrypt using an HSM key."
                                  },
                                  {
                                    "name": "DecryptHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                    "description": "Decrypt using an HSM key."
                                  },
                                  {
                                    "name": "WrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                    "description": "Wrap using an HSM key."
                                  },
                                  {
                                    "name": "UnwrapHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                    "description": "Unwrap using an HSM key."
                                  },
                                  {
                                    "name": "SignHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                    "description": "Sign using an HSM key."
                                  },
                                  {
                                    "name": "VerifyHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                    "description": "Verify using an HSM key."
                                  },
                                  {
                                    "name": "CreateHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                    "description": "Create an HSM key."
                                  },
                                  {
                                    "name": "DeleteHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                    "description": "Delete an HSM key."
                                  },
                                  {
                                    "name": "ExportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                    "description": "Export an HSM key."
                                  },
                                  {
                                    "name": "ReleaseKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                    "description": "Release an HSM key using Secure Key Release."
                                  },
                                  {
                                    "name": "ImportHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                    "description": "Import an HSM key."
                                  },
                                  {
                                    "name": "PurgeDeletedHsmKey",
                                    "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                    "description": "Purge a deleted HSM key."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                    "description": "Download an HSM security domain."
                                  },
                                  {
                                    "name": "DownloadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                    "description": "Check status of HSM security domain download."
                                  },
                                  {
                                    "name": "UploadHsmSecurityDomain",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                    "description": "Upload an HSM security domain."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                    "description": "Check the status of the HSM security domain exchange file."
                                  },
                                  {
                                    "name": "ReadHsmSecurityDomainTransferKey",
                                    "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                    "description": "Download an HSM security domain transfer key."
                                  },
                                  {
                                    "name": "StartHsmBackup",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                    "description": "Start an HSM backup."
                                  },
                                  {
                                    "name": "StartHsmRestore",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                    "description": "Start an HSM restore."
                                  },
                                  {
                                    "name": "ReadHsmBackupStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                    "description": "Read an HSM backup status."
                                  },
                                  {
                                    "name": "ReadHsmRestoreStatus",
                                    "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                    "description": "Read an HSM restore status."
                                  },
                                  {
                                    "name": "RandomNumbersGenerate",
                                    "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                    "description": "Generate random numbers."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "description": "Role definition assignable scopes.",
                      "items": {
                        "type": "string",
                        "description": "The role scope.",
                        "enum": [
                          "/",
                          "/keys"
                        ],
                        "x-ms-enum": {
                          "name": "RoleScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Global",
                              "value": "/",
                              "description": "Global scope"
                            },
                            {
                              "name": "Keys",
                              "value": "/keys",
                              "description": "Keys scope"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DenyAssignmentFilter": {
      "properties": {
        "denyAssignmentName": {
          "type": "string",
          "description": "Return deny assignment with specified name."
        },
        "principalId": {
          "type": "string",
          "description": "Return all deny assignments where the specified principal is listed in the principals list of deny assignments."
        },
        "gdprExportPrincipalId": {
          "type": "string",
          "description": "Return all deny assignments where the specified principal is listed either in the principals list or exclude principals list of deny assignments."
        }
      },
      "type": "object",
      "description": "Deny Assignments filter"
    },
    "DenyAssignmentProperties": {
      "properties": {
        "denyAssignmentName": {
          "type": "string",
          "description": "The display name of the deny assignment."
        },
        "description": {
          "type": "string",
          "description": "The description of the deny assignment."
        },
        "permissions": {
          "type": "array",
          "items": {
            "properties": {
              "actions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Actions to which the deny assignment does not grant access."
              },
              "notActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Actions to exclude from that the deny assignment does not grant access."
              },
              "dataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Data actions to which the deny assignment does not grant access."
              },
              "notDataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Data actions to exclude from that the deny assignment does not grant access."
              },
              "condition": {
                "type": "string",
                "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
              },
              "conditionVersion": {
                "type": "string",
                "description": "Version of the condition."
              }
            },
            "type": "object",
            "description": "Deny assignment permissions."
          },
          "x-ms-identifiers": [],
          "description": "An array of permissions that are denied by the deny assignment."
        },
        "scope": {
          "type": "string",
          "description": "The deny assignment scope."
        },
        "doNotApplyToChildScopes": {
          "type": "boolean",
          "description": "Determines if the deny assignment applies to child scopes. Default value is false."
        },
        "principals": {
          "type": "array",
          "items": {
            "readOnly": true,
            "type": "object",
            "description": "The name of the entity last modified it",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of the principal made changes"
              },
              "displayName": {
                "type": "string",
                "description": "The name of the principal made changes"
              },
              "type": {
                "type": "string",
                "description": "Type of principal such as user , group etc"
              },
              "email": {
                "type": "string",
                "description": "Email of principal"
              }
            }
          },
          "description": "Array of principals to which the deny assignment applies."
        },
        "excludePrincipals": {
          "type": "array",
          "items": {
            "readOnly": true,
            "type": "object",
            "description": "The name of the entity last modified it",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of the principal made changes"
              },
              "displayName": {
                "type": "string",
                "description": "The name of the principal made changes"
              },
              "type": {
                "type": "string",
                "description": "Type of principal such as user , group etc"
              },
              "email": {
                "type": "string",
                "description": "Email of principal"
              }
            }
          },
          "description": "Array of principals to which the deny assignment does not apply."
        },
        "isSystemProtected": {
          "type": "boolean",
          "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
        },
        "condition": {
          "type": "string",
          "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
        },
        "conditionVersion": {
          "type": "string",
          "description": "Version of the condition."
        },
        "createdOn": {
          "readOnly": true,
          "type": "string",
          "description": "Time it was created",
          "format": "date-time"
        },
        "updatedOn": {
          "readOnly": true,
          "type": "string",
          "description": "Time it was updated",
          "format": "date-time"
        },
        "createdBy": {
          "readOnly": true,
          "type": "string",
          "description": "Id of the user who created the assignment"
        },
        "updatedBy": {
          "readOnly": true,
          "type": "string",
          "description": "Id of the user who updated the assignment"
        }
      },
      "type": "object",
      "description": "Deny assignment properties."
    },
    "DenyAssignment": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The deny assignment ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The deny assignment name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The deny assignment type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Deny assignment properties.",
          "properties": {
            "denyAssignmentName": {
              "type": "string",
              "description": "The display name of the deny assignment."
            },
            "description": {
              "type": "string",
              "description": "The description of the deny assignment."
            },
            "permissions": {
              "type": "array",
              "items": {
                "properties": {
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Actions to which the deny assignment does not grant access."
                  },
                  "notActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Actions to exclude from that the deny assignment does not grant access."
                  },
                  "dataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Data actions to which the deny assignment does not grant access."
                  },
                  "notDataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Data actions to exclude from that the deny assignment does not grant access."
                  },
                  "condition": {
                    "type": "string",
                    "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                  },
                  "conditionVersion": {
                    "type": "string",
                    "description": "Version of the condition."
                  }
                },
                "type": "object",
                "description": "Deny assignment permissions."
              },
              "x-ms-identifiers": [],
              "description": "An array of permissions that are denied by the deny assignment."
            },
            "scope": {
              "type": "string",
              "description": "The deny assignment scope."
            },
            "doNotApplyToChildScopes": {
              "type": "boolean",
              "description": "Determines if the deny assignment applies to child scopes. Default value is false."
            },
            "principals": {
              "type": "array",
              "items": {
                "readOnly": true,
                "type": "object",
                "description": "The name of the entity last modified it",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the principal made changes"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The name of the principal made changes"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of principal such as user , group etc"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of principal"
                  }
                }
              },
              "description": "Array of principals to which the deny assignment applies."
            },
            "excludePrincipals": {
              "type": "array",
              "items": {
                "readOnly": true,
                "type": "object",
                "description": "The name of the entity last modified it",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the principal made changes"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The name of the principal made changes"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of principal such as user , group etc"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of principal"
                  }
                }
              },
              "description": "Array of principals to which the deny assignment does not apply."
            },
            "isSystemProtected": {
              "type": "boolean",
              "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
            },
            "condition": {
              "type": "string",
              "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
            },
            "conditionVersion": {
              "type": "string",
              "description": "Version of the condition."
            },
            "createdOn": {
              "readOnly": true,
              "type": "string",
              "description": "Time it was created",
              "format": "date-time"
            },
            "updatedOn": {
              "readOnly": true,
              "type": "string",
              "description": "Time it was updated",
              "format": "date-time"
            },
            "createdBy": {
              "readOnly": true,
              "type": "string",
              "description": "Id of the user who created the assignment"
            },
            "updatedBy": {
              "readOnly": true,
              "type": "string",
              "description": "Id of the user who updated the assignment"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Deny Assignment"
    },
    "DenyAssignmentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The deny assignment ID."
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "The deny assignment name."
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "The deny assignment type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Deny assignment properties.",
                "properties": {
                  "denyAssignmentName": {
                    "type": "string",
                    "description": "The display name of the deny assignment."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the deny assignment."
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Actions to which the deny assignment does not grant access."
                        },
                        "notActions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Actions to exclude from that the deny assignment does not grant access."
                        },
                        "dataActions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Data actions to which the deny assignment does not grant access."
                        },
                        "notDataActions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Data actions to exclude from that the deny assignment does not grant access."
                        },
                        "condition": {
                          "type": "string",
                          "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
                        },
                        "conditionVersion": {
                          "type": "string",
                          "description": "Version of the condition."
                        }
                      },
                      "type": "object",
                      "description": "Deny assignment permissions."
                    },
                    "x-ms-identifiers": [],
                    "description": "An array of permissions that are denied by the deny assignment."
                  },
                  "scope": {
                    "type": "string",
                    "description": "The deny assignment scope."
                  },
                  "doNotApplyToChildScopes": {
                    "type": "boolean",
                    "description": "Determines if the deny assignment applies to child scopes. Default value is false."
                  },
                  "principals": {
                    "type": "array",
                    "items": {
                      "readOnly": true,
                      "type": "object",
                      "description": "The name of the entity last modified it",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the principal made changes"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The name of the principal made changes"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of principal such as user , group etc"
                        },
                        "email": {
                          "type": "string",
                          "description": "Email of principal"
                        }
                      }
                    },
                    "description": "Array of principals to which the deny assignment applies."
                  },
                  "excludePrincipals": {
                    "type": "array",
                    "items": {
                      "readOnly": true,
                      "type": "object",
                      "description": "The name of the entity last modified it",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the principal made changes"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The name of the principal made changes"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of principal such as user , group etc"
                        },
                        "email": {
                          "type": "string",
                          "description": "Email of principal"
                        }
                      }
                    },
                    "description": "Array of principals to which the deny assignment does not apply."
                  },
                  "isSystemProtected": {
                    "type": "boolean",
                    "description": "Specifies whether this deny assignment was created by Azure and cannot be edited or deleted."
                  },
                  "condition": {
                    "type": "string",
                    "description": "The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
                  },
                  "conditionVersion": {
                    "type": "string",
                    "description": "Version of the condition."
                  },
                  "createdOn": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Time it was created",
                    "format": "date-time"
                  },
                  "updatedOn": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Time it was updated",
                    "format": "date-time"
                  },
                  "createdBy": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Id of the user who created the assignment"
                  },
                  "updatedBy": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Id of the user who updated the assignment"
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "Deny Assignment"
          },
          "description": "Deny assignment list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Deny assignment list operation result."
    },
    "DenyAssignmentPermission": {
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Actions to which the deny assignment does not grant access."
        },
        "notActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Actions to exclude from that the deny assignment does not grant access."
        },
        "dataActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Data actions to which the deny assignment does not grant access."
        },
        "notDataActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Data actions to exclude from that the deny assignment does not grant access."
        },
        "condition": {
          "type": "string",
          "description": "The conditions on the Deny assignment permission. This limits the resources it applies to."
        },
        "conditionVersion": {
          "type": "string",
          "description": "Version of the condition."
        }
      },
      "type": "object",
      "description": "Deny assignment permissions."
    },
    "ResourceType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource type name."
        },
        "displayName": {
          "type": "string",
          "description": "The resource type display name."
        },
        "operations": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The operation name."
              },
              "displayName": {
                "type": "string",
                "description": "The operation display name."
              },
              "description": {
                "type": "string",
                "description": "The operation description."
              },
              "origin": {
                "type": "string",
                "description": "The operation origin."
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The operation properties."
              },
              "isDataAction": {
                "type": "boolean",
                "description": "The dataAction flag to specify the operation type."
              }
            },
            "type": "object",
            "description": "Operation"
          },
          "x-ms-identifiers": [],
          "description": "The resource type operations."
        }
      },
      "type": "object",
      "description": "Resource Type"
    },
    "ProviderOperation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "displayName": {
          "type": "string",
          "description": "The operation display name."
        },
        "description": {
          "type": "string",
          "description": "The operation description."
        },
        "origin": {
          "type": "string",
          "description": "The operation origin."
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The operation properties."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "The dataAction flag to specify the operation type."
        }
      },
      "type": "object",
      "description": "Operation"
    },
    "ProviderOperationsMetadata": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The provider id."
        },
        "name": {
          "type": "string",
          "description": "The provider name."
        },
        "type": {
          "type": "string",
          "description": "The provider type."
        },
        "displayName": {
          "type": "string",
          "description": "The provider display name."
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The resource type name."
              },
              "displayName": {
                "type": "string",
                "description": "The resource type display name."
              },
              "operations": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The operation name."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The operation display name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The operation description."
                    },
                    "origin": {
                      "type": "string",
                      "description": "The operation origin."
                    },
                    "properties": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "description": "The operation properties."
                    },
                    "isDataAction": {
                      "type": "boolean",
                      "description": "The dataAction flag to specify the operation type."
                    }
                  },
                  "type": "object",
                  "description": "Operation"
                },
                "x-ms-identifiers": [],
                "description": "The resource type operations."
              }
            },
            "type": "object",
            "description": "Resource Type"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The provider resource types"
        },
        "operations": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The operation name."
              },
              "displayName": {
                "type": "string",
                "description": "The operation display name."
              },
              "description": {
                "type": "string",
                "description": "The operation description."
              },
              "origin": {
                "type": "string",
                "description": "The operation origin."
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The operation properties."
              },
              "isDataAction": {
                "type": "boolean",
                "description": "The dataAction flag to specify the operation type."
              }
            },
            "type": "object",
            "description": "Operation"
          },
          "x-ms-identifiers": [],
          "description": "The provider operations."
        }
      },
      "type": "object",
      "description": "Provider Operations metadata"
    },
    "ProviderOperationsMetadataListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The provider id."
              },
              "name": {
                "type": "string",
                "description": "The provider name."
              },
              "type": {
                "type": "string",
                "description": "The provider type."
              },
              "displayName": {
                "type": "string",
                "description": "The provider display name."
              },
              "resourceTypes": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The resource type name."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The resource type display name."
                    },
                    "operations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The operation name."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The operation display name."
                          },
                          "description": {
                            "type": "string",
                            "description": "The operation description."
                          },
                          "origin": {
                            "type": "string",
                            "description": "The operation origin."
                          },
                          "properties": {
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "description": "The operation properties."
                          },
                          "isDataAction": {
                            "type": "boolean",
                            "description": "The dataAction flag to specify the operation type."
                          }
                        },
                        "type": "object",
                        "description": "Operation"
                      },
                      "x-ms-identifiers": [],
                      "description": "The resource type operations."
                    }
                  },
                  "type": "object",
                  "description": "Resource Type"
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "The provider resource types"
              },
              "operations": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The operation name."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The operation display name."
                    },
                    "description": {
                      "type": "string",
                      "description": "The operation description."
                    },
                    "origin": {
                      "type": "string",
                      "description": "The operation origin."
                    },
                    "properties": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "description": "The operation properties."
                    },
                    "isDataAction": {
                      "type": "boolean",
                      "description": "The dataAction flag to specify the operation type."
                    }
                  },
                  "type": "object",
                  "description": "Operation"
                },
                "x-ms-identifiers": [],
                "description": "The provider operations."
              }
            },
            "type": "object",
            "description": "Provider Operations metadata"
          },
          "description": "The list of providers."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Provider operations metadata list"
    },
    "ValidationResponseErrorInfo": {
      "type": "object",
      "description": "Failed validation result details",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "Error code indicating why validation failed"
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "Message indicating why validation failed"
        }
      }
    },
    "ValidationResponse": {
      "type": "object",
      "description": "Validation response",
      "properties": {
        "isValid": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether or not validation succeeded"
        },
        "errorInfo": {
          "description": "Failed validation result details",
          "type": "object",
          "properties": {
            "code": {
              "readOnly": true,
              "type": "string",
              "description": "Error code indicating why validation failed"
            },
            "message": {
              "readOnly": true,
              "type": "string",
              "description": "Message indicating why validation failed"
            }
          }
        }
      }
    },
    "RoleAssignmentFilter": {
      "type": "object",
      "description": "Role Assignments filter",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Returns role assignment of the specific principal."
        }
      }
    },
    "RoleAssignmentListResult": {
      "type": "object",
      "description": "Role assignment list operation result.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Role assignment list.",
          "items": {
            "type": "object",
            "description": "Role Assignments",
            "properties": {
              "id": {
                "type": "string",
                "description": "The role assignment ID.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The role assignment name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The role assignment type.",
                "readOnly": true
              },
              "properties": {
                "description": "Role assignment properties.",
                "type": "object",
                "properties": {
                  "scope": {
                    "description": "The role scope.",
                    "type": "string",
                    "enum": [
                      "/",
                      "/keys"
                    ],
                    "x-ms-enum": {
                      "name": "RoleScope",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Global",
                          "value": "/",
                          "description": "Global scope"
                        },
                        {
                          "name": "Keys",
                          "value": "/keys",
                          "description": "Keys scope"
                        }
                      ]
                    }
                  },
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "The role definition ID."
                  },
                  "principalId": {
                    "type": "string",
                    "description": "The principal ID."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      }
    },
    "RoleAssignmentProperties": {
      "type": "object",
      "description": "Role assignment properties.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition ID used in the role assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group."
        }
      },
      "required": [
        "roleDefinitionId",
        "principalId"
      ]
    },
    "RoleAssignment": {
      "type": "object",
      "description": "Role Assignments",
      "properties": {
        "id": {
          "type": "string",
          "description": "The role assignment ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The role assignment name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The role assignment type.",
          "readOnly": true
        },
        "properties": {
          "description": "Role assignment properties.",
          "type": "object",
          "properties": {
            "scope": {
              "description": "The role scope.",
              "type": "string",
              "enum": [
                "/",
                "/keys"
              ],
              "x-ms-enum": {
                "name": "RoleScope",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Global",
                    "value": "/",
                    "description": "Global scope"
                  },
                  {
                    "name": "Keys",
                    "value": "/keys",
                    "description": "Keys scope"
                  }
                ]
              }
            },
            "roleDefinitionId": {
              "type": "string",
              "description": "The role definition ID."
            },
            "principalId": {
              "type": "string",
              "description": "The principal ID."
            }
          }
        }
      }
    },
    "RoleAssignmentCreateParameters": {
      "type": "object",
      "description": "Role assignment create parameters.",
      "properties": {
        "properties": {
          "description": "Role assignment properties.",
          "type": "object",
          "properties": {
            "roleDefinitionId": {
              "type": "string",
              "description": "The role definition ID used in the role assignment."
            },
            "principalId": {
              "type": "string",
              "description": "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group."
            }
          },
          "required": [
            "roleDefinitionId",
            "principalId"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "RoleDefinitionFilter": {
      "type": "object",
      "description": "Role Definitions filter",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "Returns role definition with the specific name."
        }
      }
    },
    "RoleDefinitionProperties": {
      "type": "object",
      "description": "Role definition properties.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "The role name."
        },
        "description": {
          "type": "string",
          "description": "The role definition description."
        },
        "type": {
          "description": "The role type.",
          "x-ms-client-name": "roleType",
          "type": "string",
          "enum": [
            "AKVBuiltInRole",
            "CustomRole"
          ],
          "x-ms-enum": {
            "name": "RoleType",
            "modelAsString": true,
            "values": [
              {
                "name": "BuiltInRole",
                "value": "AKVBuiltInRole",
                "description": "Built in role."
              },
              {
                "name": "CustomRole",
                "value": "CustomRole",
                "description": "Custom role."
              }
            ]
          }
        },
        "permissions": {
          "type": "array",
          "description": "Role definition permissions.",
          "items": {
            "type": "object",
            "description": "Role definition permissions.",
            "properties": {
              "actions": {
                "type": "array",
                "description": "Action permissions that are granted.",
                "items": {
                  "type": "string"
                }
              },
              "notActions": {
                "type": "array",
                "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                "items": {
                  "type": "string"
                }
              },
              "dataActions": {
                "type": "array",
                "description": "Data action permissions that are granted.",
                "items": {
                  "type": "string",
                  "description": "Supported permissions for data actions.",
                  "enum": [
                    "Microsoft.KeyVault/managedHsm/keys/read/action",
                    "Microsoft.KeyVault/managedHsm/keys/write/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                    "Microsoft.KeyVault/managedHsm/keys/backup/action",
                    "Microsoft.KeyVault/managedHsm/keys/restore/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                    "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                    "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                    "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                    "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                    "Microsoft.KeyVault/managedHsm/keys/sign/action",
                    "Microsoft.KeyVault/managedHsm/keys/verify/action",
                    "Microsoft.KeyVault/managedHsm/keys/create",
                    "Microsoft.KeyVault/managedHsm/keys/delete",
                    "Microsoft.KeyVault/managedHsm/keys/export/action",
                    "Microsoft.KeyVault/managedHsm/keys/release/action",
                    "Microsoft.KeyVault/managedHsm/keys/import/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                    "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                    "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                    "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                    "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                    "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                    "Microsoft.KeyVault/managedHsm/backup/start/action",
                    "Microsoft.KeyVault/managedHsm/restore/start/action",
                    "Microsoft.KeyVault/managedHsm/backup/status/action",
                    "Microsoft.KeyVault/managedHsm/restore/status/action",
                    "Microsoft.KeyVault/managedHsm/rng/action"
                  ],
                  "x-ms-enum": {
                    "name": "DataAction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ReadHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "description": "Read HSM key metadata."
                      },
                      {
                        "name": "WriteHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "description": "Update an HSM key."
                      },
                      {
                        "name": "ReadDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "description": "Read deleted HSM key."
                      },
                      {
                        "name": "RecoverDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "description": "Recover deleted HSM key."
                      },
                      {
                        "name": "BackupHsmKeys",
                        "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "description": "Backup HSM keys."
                      },
                      {
                        "name": "RestoreHsmKeys",
                        "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "description": "Restore HSM keys."
                      },
                      {
                        "name": "DeleteRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "description": "Delete role assignment."
                      },
                      {
                        "name": "GetRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "description": "Get role assignment."
                      },
                      {
                        "name": "WriteRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "description": "Create or update role assignment."
                      },
                      {
                        "name": "ReadRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "description": "Get role definition."
                      },
                      {
                        "name": "WriteRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "description": "Create or update role definition."
                      },
                      {
                        "name": "DeleteRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "description": "Delete role definition."
                      },
                      {
                        "name": "EncryptHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "description": "Encrypt using an HSM key."
                      },
                      {
                        "name": "DecryptHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "description": "Decrypt using an HSM key."
                      },
                      {
                        "name": "WrapHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "description": "Wrap using an HSM key."
                      },
                      {
                        "name": "UnwrapHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "description": "Unwrap using an HSM key."
                      },
                      {
                        "name": "SignHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "description": "Sign using an HSM key."
                      },
                      {
                        "name": "VerifyHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "description": "Verify using an HSM key."
                      },
                      {
                        "name": "CreateHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/create",
                        "description": "Create an HSM key."
                      },
                      {
                        "name": "DeleteHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                        "description": "Delete an HSM key."
                      },
                      {
                        "name": "ExportHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "description": "Export an HSM key."
                      },
                      {
                        "name": "ReleaseKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "description": "Release an HSM key using Secure Key Release."
                      },
                      {
                        "name": "ImportHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "description": "Import an HSM key."
                      },
                      {
                        "name": "PurgeDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "description": "Purge a deleted HSM key."
                      },
                      {
                        "name": "DownloadHsmSecurityDomain",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "description": "Download an HSM security domain."
                      },
                      {
                        "name": "DownloadHsmSecurityDomainStatus",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "description": "Check status of HSM security domain download."
                      },
                      {
                        "name": "UploadHsmSecurityDomain",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "description": "Upload an HSM security domain."
                      },
                      {
                        "name": "ReadHsmSecurityDomainStatus",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "description": "Check the status of the HSM security domain exchange file."
                      },
                      {
                        "name": "ReadHsmSecurityDomainTransferKey",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "description": "Download an HSM security domain transfer key."
                      },
                      {
                        "name": "StartHsmBackup",
                        "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "description": "Start an HSM backup."
                      },
                      {
                        "name": "StartHsmRestore",
                        "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "description": "Start an HSM restore."
                      },
                      {
                        "name": "ReadHsmBackupStatus",
                        "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "description": "Read an HSM backup status."
                      },
                      {
                        "name": "ReadHsmRestoreStatus",
                        "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "description": "Read an HSM restore status."
                      },
                      {
                        "name": "RandomNumbersGenerate",
                        "value": "Microsoft.KeyVault/managedHsm/rng/action",
                        "description": "Generate random numbers."
                      }
                    ]
                  }
                }
              },
              "notDataActions": {
                "type": "array",
                "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                "items": {
                  "type": "string",
                  "description": "Supported permissions for data actions.",
                  "enum": [
                    "Microsoft.KeyVault/managedHsm/keys/read/action",
                    "Microsoft.KeyVault/managedHsm/keys/write/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                    "Microsoft.KeyVault/managedHsm/keys/backup/action",
                    "Microsoft.KeyVault/managedHsm/keys/restore/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                    "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                    "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                    "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                    "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                    "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                    "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                    "Microsoft.KeyVault/managedHsm/keys/sign/action",
                    "Microsoft.KeyVault/managedHsm/keys/verify/action",
                    "Microsoft.KeyVault/managedHsm/keys/create",
                    "Microsoft.KeyVault/managedHsm/keys/delete",
                    "Microsoft.KeyVault/managedHsm/keys/export/action",
                    "Microsoft.KeyVault/managedHsm/keys/release/action",
                    "Microsoft.KeyVault/managedHsm/keys/import/action",
                    "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                    "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                    "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                    "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                    "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                    "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                    "Microsoft.KeyVault/managedHsm/backup/start/action",
                    "Microsoft.KeyVault/managedHsm/restore/start/action",
                    "Microsoft.KeyVault/managedHsm/backup/status/action",
                    "Microsoft.KeyVault/managedHsm/restore/status/action",
                    "Microsoft.KeyVault/managedHsm/rng/action"
                  ],
                  "x-ms-enum": {
                    "name": "DataAction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ReadHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "description": "Read HSM key metadata."
                      },
                      {
                        "name": "WriteHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "description": "Update an HSM key."
                      },
                      {
                        "name": "ReadDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "description": "Read deleted HSM key."
                      },
                      {
                        "name": "RecoverDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "description": "Recover deleted HSM key."
                      },
                      {
                        "name": "BackupHsmKeys",
                        "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "description": "Backup HSM keys."
                      },
                      {
                        "name": "RestoreHsmKeys",
                        "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "description": "Restore HSM keys."
                      },
                      {
                        "name": "DeleteRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "description": "Delete role assignment."
                      },
                      {
                        "name": "GetRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "description": "Get role assignment."
                      },
                      {
                        "name": "WriteRoleAssignment",
                        "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "description": "Create or update role assignment."
                      },
                      {
                        "name": "ReadRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "description": "Get role definition."
                      },
                      {
                        "name": "WriteRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "description": "Create or update role definition."
                      },
                      {
                        "name": "DeleteRoleDefinition",
                        "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "description": "Delete role definition."
                      },
                      {
                        "name": "EncryptHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "description": "Encrypt using an HSM key."
                      },
                      {
                        "name": "DecryptHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "description": "Decrypt using an HSM key."
                      },
                      {
                        "name": "WrapHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "description": "Wrap using an HSM key."
                      },
                      {
                        "name": "UnwrapHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "description": "Unwrap using an HSM key."
                      },
                      {
                        "name": "SignHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "description": "Sign using an HSM key."
                      },
                      {
                        "name": "VerifyHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "description": "Verify using an HSM key."
                      },
                      {
                        "name": "CreateHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/create",
                        "description": "Create an HSM key."
                      },
                      {
                        "name": "DeleteHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                        "description": "Delete an HSM key."
                      },
                      {
                        "name": "ExportHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "description": "Export an HSM key."
                      },
                      {
                        "name": "ReleaseKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "description": "Release an HSM key using Secure Key Release."
                      },
                      {
                        "name": "ImportHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "description": "Import an HSM key."
                      },
                      {
                        "name": "PurgeDeletedHsmKey",
                        "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "description": "Purge a deleted HSM key."
                      },
                      {
                        "name": "DownloadHsmSecurityDomain",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "description": "Download an HSM security domain."
                      },
                      {
                        "name": "DownloadHsmSecurityDomainStatus",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "description": "Check status of HSM security domain download."
                      },
                      {
                        "name": "UploadHsmSecurityDomain",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "description": "Upload an HSM security domain."
                      },
                      {
                        "name": "ReadHsmSecurityDomainStatus",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "description": "Check the status of the HSM security domain exchange file."
                      },
                      {
                        "name": "ReadHsmSecurityDomainTransferKey",
                        "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "description": "Download an HSM security domain transfer key."
                      },
                      {
                        "name": "StartHsmBackup",
                        "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "description": "Start an HSM backup."
                      },
                      {
                        "name": "StartHsmRestore",
                        "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "description": "Start an HSM restore."
                      },
                      {
                        "name": "ReadHsmBackupStatus",
                        "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "description": "Read an HSM backup status."
                      },
                      {
                        "name": "ReadHsmRestoreStatus",
                        "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "description": "Read an HSM restore status."
                      },
                      {
                        "name": "RandomNumbersGenerate",
                        "value": "Microsoft.KeyVault/managedHsm/rng/action",
                        "description": "Generate random numbers."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "assignableScopes": {
          "type": "array",
          "description": "Role definition assignable scopes.",
          "items": {
            "type": "string",
            "description": "The role scope.",
            "enum": [
              "/",
              "/keys"
            ],
            "x-ms-enum": {
              "name": "RoleScope",
              "modelAsString": true,
              "values": [
                {
                  "name": "Global",
                  "value": "/",
                  "description": "Global scope"
                },
                {
                  "name": "Keys",
                  "value": "/keys",
                  "description": "Keys scope"
                }
              ]
            }
          }
        }
      }
    },
    "RoleDefinition": {
      "type": "object",
      "description": "Role definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The role definition ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The role definition name.",
          "readOnly": true
        },
        "type": {
          "description": "The role definition type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Microsoft.Authorization/roleDefinitions"
          ],
          "x-ms-enum": {
            "name": "RoleDefinitionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Microsoft.Authorization/roleDefinitions",
                "value": "Microsoft.Authorization/roleDefinitions",
                "description": "Microsoft-defined role definitions."
              }
            ]
          }
        },
        "properties": {
          "description": "Role definition properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "The role name."
            },
            "description": {
              "type": "string",
              "description": "The role definition description."
            },
            "type": {
              "description": "The role type.",
              "x-ms-client-name": "roleType",
              "type": "string",
              "enum": [
                "AKVBuiltInRole",
                "CustomRole"
              ],
              "x-ms-enum": {
                "name": "RoleType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BuiltInRole",
                    "value": "AKVBuiltInRole",
                    "description": "Built in role."
                  },
                  {
                    "name": "CustomRole",
                    "value": "CustomRole",
                    "description": "Custom role."
                  }
                ]
              }
            },
            "permissions": {
              "type": "array",
              "description": "Role definition permissions.",
              "items": {
                "type": "object",
                "description": "Role definition permissions.",
                "properties": {
                  "actions": {
                    "type": "array",
                    "description": "Action permissions that are granted.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "notActions": {
                    "type": "array",
                    "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dataActions": {
                    "type": "array",
                    "description": "Data action permissions that are granted.",
                    "items": {
                      "type": "string",
                      "description": "Supported permissions for data actions.",
                      "enum": [
                        "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "Microsoft.KeyVault/managedHsm/keys/create",
                        "Microsoft.KeyVault/managedHsm/keys/delete",
                        "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "Microsoft.KeyVault/managedHsm/rng/action"
                      ],
                      "x-ms-enum": {
                        "name": "DataAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ReadHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                            "description": "Read HSM key metadata."
                          },
                          {
                            "name": "WriteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                            "description": "Update an HSM key."
                          },
                          {
                            "name": "ReadDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                            "description": "Read deleted HSM key."
                          },
                          {
                            "name": "RecoverDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                            "description": "Recover deleted HSM key."
                          },
                          {
                            "name": "BackupHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                            "description": "Backup HSM keys."
                          },
                          {
                            "name": "RestoreHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                            "description": "Restore HSM keys."
                          },
                          {
                            "name": "DeleteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                            "description": "Delete role assignment."
                          },
                          {
                            "name": "GetRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                            "description": "Get role assignment."
                          },
                          {
                            "name": "WriteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                            "description": "Create or update role assignment."
                          },
                          {
                            "name": "ReadRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                            "description": "Get role definition."
                          },
                          {
                            "name": "WriteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                            "description": "Create or update role definition."
                          },
                          {
                            "name": "DeleteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                            "description": "Delete role definition."
                          },
                          {
                            "name": "EncryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                            "description": "Encrypt using an HSM key."
                          },
                          {
                            "name": "DecryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                            "description": "Decrypt using an HSM key."
                          },
                          {
                            "name": "WrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                            "description": "Wrap using an HSM key."
                          },
                          {
                            "name": "UnwrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                            "description": "Unwrap using an HSM key."
                          },
                          {
                            "name": "SignHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                            "description": "Sign using an HSM key."
                          },
                          {
                            "name": "VerifyHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                            "description": "Verify using an HSM key."
                          },
                          {
                            "name": "CreateHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/create",
                            "description": "Create an HSM key."
                          },
                          {
                            "name": "DeleteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                            "description": "Delete an HSM key."
                          },
                          {
                            "name": "ExportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                            "description": "Export an HSM key."
                          },
                          {
                            "name": "ReleaseKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                            "description": "Release an HSM key using Secure Key Release."
                          },
                          {
                            "name": "ImportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                            "description": "Import an HSM key."
                          },
                          {
                            "name": "PurgeDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                            "description": "Purge a deleted HSM key."
                          },
                          {
                            "name": "DownloadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                            "description": "Download an HSM security domain."
                          },
                          {
                            "name": "DownloadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                            "description": "Check status of HSM security domain download."
                          },
                          {
                            "name": "UploadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                            "description": "Upload an HSM security domain."
                          },
                          {
                            "name": "ReadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                            "description": "Check the status of the HSM security domain exchange file."
                          },
                          {
                            "name": "ReadHsmSecurityDomainTransferKey",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                            "description": "Download an HSM security domain transfer key."
                          },
                          {
                            "name": "StartHsmBackup",
                            "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                            "description": "Start an HSM backup."
                          },
                          {
                            "name": "StartHsmRestore",
                            "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                            "description": "Start an HSM restore."
                          },
                          {
                            "name": "ReadHsmBackupStatus",
                            "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                            "description": "Read an HSM backup status."
                          },
                          {
                            "name": "ReadHsmRestoreStatus",
                            "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                            "description": "Read an HSM restore status."
                          },
                          {
                            "name": "RandomNumbersGenerate",
                            "value": "Microsoft.KeyVault/managedHsm/rng/action",
                            "description": "Generate random numbers."
                          }
                        ]
                      }
                    }
                  },
                  "notDataActions": {
                    "type": "array",
                    "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                    "items": {
                      "type": "string",
                      "description": "Supported permissions for data actions.",
                      "enum": [
                        "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "Microsoft.KeyVault/managedHsm/keys/create",
                        "Microsoft.KeyVault/managedHsm/keys/delete",
                        "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "Microsoft.KeyVault/managedHsm/rng/action"
                      ],
                      "x-ms-enum": {
                        "name": "DataAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ReadHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                            "description": "Read HSM key metadata."
                          },
                          {
                            "name": "WriteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                            "description": "Update an HSM key."
                          },
                          {
                            "name": "ReadDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                            "description": "Read deleted HSM key."
                          },
                          {
                            "name": "RecoverDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                            "description": "Recover deleted HSM key."
                          },
                          {
                            "name": "BackupHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                            "description": "Backup HSM keys."
                          },
                          {
                            "name": "RestoreHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                            "description": "Restore HSM keys."
                          },
                          {
                            "name": "DeleteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                            "description": "Delete role assignment."
                          },
                          {
                            "name": "GetRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                            "description": "Get role assignment."
                          },
                          {
                            "name": "WriteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                            "description": "Create or update role assignment."
                          },
                          {
                            "name": "ReadRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                            "description": "Get role definition."
                          },
                          {
                            "name": "WriteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                            "description": "Create or update role definition."
                          },
                          {
                            "name": "DeleteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                            "description": "Delete role definition."
                          },
                          {
                            "name": "EncryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                            "description": "Encrypt using an HSM key."
                          },
                          {
                            "name": "DecryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                            "description": "Decrypt using an HSM key."
                          },
                          {
                            "name": "WrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                            "description": "Wrap using an HSM key."
                          },
                          {
                            "name": "UnwrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                            "description": "Unwrap using an HSM key."
                          },
                          {
                            "name": "SignHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                            "description": "Sign using an HSM key."
                          },
                          {
                            "name": "VerifyHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                            "description": "Verify using an HSM key."
                          },
                          {
                            "name": "CreateHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/create",
                            "description": "Create an HSM key."
                          },
                          {
                            "name": "DeleteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                            "description": "Delete an HSM key."
                          },
                          {
                            "name": "ExportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                            "description": "Export an HSM key."
                          },
                          {
                            "name": "ReleaseKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                            "description": "Release an HSM key using Secure Key Release."
                          },
                          {
                            "name": "ImportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                            "description": "Import an HSM key."
                          },
                          {
                            "name": "PurgeDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                            "description": "Purge a deleted HSM key."
                          },
                          {
                            "name": "DownloadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                            "description": "Download an HSM security domain."
                          },
                          {
                            "name": "DownloadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                            "description": "Check status of HSM security domain download."
                          },
                          {
                            "name": "UploadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                            "description": "Upload an HSM security domain."
                          },
                          {
                            "name": "ReadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                            "description": "Check the status of the HSM security domain exchange file."
                          },
                          {
                            "name": "ReadHsmSecurityDomainTransferKey",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                            "description": "Download an HSM security domain transfer key."
                          },
                          {
                            "name": "StartHsmBackup",
                            "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                            "description": "Start an HSM backup."
                          },
                          {
                            "name": "StartHsmRestore",
                            "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                            "description": "Start an HSM restore."
                          },
                          {
                            "name": "ReadHsmBackupStatus",
                            "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                            "description": "Read an HSM backup status."
                          },
                          {
                            "name": "ReadHsmRestoreStatus",
                            "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                            "description": "Read an HSM restore status."
                          },
                          {
                            "name": "RandomNumbersGenerate",
                            "value": "Microsoft.KeyVault/managedHsm/rng/action",
                            "description": "Generate random numbers."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "assignableScopes": {
              "type": "array",
              "description": "Role definition assignable scopes.",
              "items": {
                "type": "string",
                "description": "The role scope.",
                "enum": [
                  "/",
                  "/keys"
                ],
                "x-ms-enum": {
                  "name": "RoleScope",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Global",
                      "value": "/",
                      "description": "Global scope"
                    },
                    {
                      "name": "Keys",
                      "value": "/keys",
                      "description": "Keys scope"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "RoleDefinitionListResult": {
      "type": "object",
      "description": "Role definition list operation result.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Role definition list.",
          "items": {
            "type": "object",
            "description": "Role definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The role definition ID.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The role definition name.",
                "readOnly": true
              },
              "type": {
                "description": "The role definition type.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Microsoft.Authorization/roleDefinitions"
                ],
                "x-ms-enum": {
                  "name": "RoleDefinitionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Microsoft.Authorization/roleDefinitions",
                      "value": "Microsoft.Authorization/roleDefinitions",
                      "description": "Microsoft-defined role definitions."
                    }
                  ]
                }
              },
              "properties": {
                "description": "Role definition properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "The role name."
                  },
                  "description": {
                    "type": "string",
                    "description": "The role definition description."
                  },
                  "type": {
                    "description": "The role type.",
                    "x-ms-client-name": "roleType",
                    "type": "string",
                    "enum": [
                      "AKVBuiltInRole",
                      "CustomRole"
                    ],
                    "x-ms-enum": {
                      "name": "RoleType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "BuiltInRole",
                          "value": "AKVBuiltInRole",
                          "description": "Built in role."
                        },
                        {
                          "name": "CustomRole",
                          "value": "CustomRole",
                          "description": "Custom role."
                        }
                      ]
                    }
                  },
                  "permissions": {
                    "type": "array",
                    "description": "Role definition permissions.",
                    "items": {
                      "type": "object",
                      "description": "Role definition permissions.",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "description": "Action permissions that are granted.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "notActions": {
                          "type": "array",
                          "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataActions": {
                          "type": "array",
                          "description": "Data action permissions that are granted.",
                          "items": {
                            "type": "string",
                            "description": "Supported permissions for data actions.",
                            "enum": [
                              "Microsoft.KeyVault/managedHsm/keys/read/action",
                              "Microsoft.KeyVault/managedHsm/keys/write/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                              "Microsoft.KeyVault/managedHsm/keys/backup/action",
                              "Microsoft.KeyVault/managedHsm/keys/restore/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                              "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                              "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                              "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                              "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                              "Microsoft.KeyVault/managedHsm/keys/sign/action",
                              "Microsoft.KeyVault/managedHsm/keys/verify/action",
                              "Microsoft.KeyVault/managedHsm/keys/create",
                              "Microsoft.KeyVault/managedHsm/keys/delete",
                              "Microsoft.KeyVault/managedHsm/keys/export/action",
                              "Microsoft.KeyVault/managedHsm/keys/release/action",
                              "Microsoft.KeyVault/managedHsm/keys/import/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                              "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                              "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                              "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                              "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                              "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                              "Microsoft.KeyVault/managedHsm/backup/start/action",
                              "Microsoft.KeyVault/managedHsm/restore/start/action",
                              "Microsoft.KeyVault/managedHsm/backup/status/action",
                              "Microsoft.KeyVault/managedHsm/restore/status/action",
                              "Microsoft.KeyVault/managedHsm/rng/action"
                            ],
                            "x-ms-enum": {
                              "name": "DataAction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ReadHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                  "description": "Read HSM key metadata."
                                },
                                {
                                  "name": "WriteHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                  "description": "Update an HSM key."
                                },
                                {
                                  "name": "ReadDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                  "description": "Read deleted HSM key."
                                },
                                {
                                  "name": "RecoverDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                  "description": "Recover deleted HSM key."
                                },
                                {
                                  "name": "BackupHsmKeys",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                  "description": "Backup HSM keys."
                                },
                                {
                                  "name": "RestoreHsmKeys",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                  "description": "Restore HSM keys."
                                },
                                {
                                  "name": "DeleteRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                  "description": "Delete role assignment."
                                },
                                {
                                  "name": "GetRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                  "description": "Get role assignment."
                                },
                                {
                                  "name": "WriteRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                  "description": "Create or update role assignment."
                                },
                                {
                                  "name": "ReadRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                  "description": "Get role definition."
                                },
                                {
                                  "name": "WriteRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                  "description": "Create or update role definition."
                                },
                                {
                                  "name": "DeleteRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                  "description": "Delete role definition."
                                },
                                {
                                  "name": "EncryptHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                  "description": "Encrypt using an HSM key."
                                },
                                {
                                  "name": "DecryptHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                  "description": "Decrypt using an HSM key."
                                },
                                {
                                  "name": "WrapHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                  "description": "Wrap using an HSM key."
                                },
                                {
                                  "name": "UnwrapHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                  "description": "Unwrap using an HSM key."
                                },
                                {
                                  "name": "SignHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                  "description": "Sign using an HSM key."
                                },
                                {
                                  "name": "VerifyHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                  "description": "Verify using an HSM key."
                                },
                                {
                                  "name": "CreateHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                  "description": "Create an HSM key."
                                },
                                {
                                  "name": "DeleteHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                  "description": "Delete an HSM key."
                                },
                                {
                                  "name": "ExportHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                  "description": "Export an HSM key."
                                },
                                {
                                  "name": "ReleaseKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                  "description": "Release an HSM key using Secure Key Release."
                                },
                                {
                                  "name": "ImportHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                  "description": "Import an HSM key."
                                },
                                {
                                  "name": "PurgeDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                  "description": "Purge a deleted HSM key."
                                },
                                {
                                  "name": "DownloadHsmSecurityDomain",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                  "description": "Download an HSM security domain."
                                },
                                {
                                  "name": "DownloadHsmSecurityDomainStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                  "description": "Check status of HSM security domain download."
                                },
                                {
                                  "name": "UploadHsmSecurityDomain",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                  "description": "Upload an HSM security domain."
                                },
                                {
                                  "name": "ReadHsmSecurityDomainStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                  "description": "Check the status of the HSM security domain exchange file."
                                },
                                {
                                  "name": "ReadHsmSecurityDomainTransferKey",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                  "description": "Download an HSM security domain transfer key."
                                },
                                {
                                  "name": "StartHsmBackup",
                                  "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                  "description": "Start an HSM backup."
                                },
                                {
                                  "name": "StartHsmRestore",
                                  "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                  "description": "Start an HSM restore."
                                },
                                {
                                  "name": "ReadHsmBackupStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                  "description": "Read an HSM backup status."
                                },
                                {
                                  "name": "ReadHsmRestoreStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                  "description": "Read an HSM restore status."
                                },
                                {
                                  "name": "RandomNumbersGenerate",
                                  "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                  "description": "Generate random numbers."
                                }
                              ]
                            }
                          }
                        },
                        "notDataActions": {
                          "type": "array",
                          "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                          "items": {
                            "type": "string",
                            "description": "Supported permissions for data actions.",
                            "enum": [
                              "Microsoft.KeyVault/managedHsm/keys/read/action",
                              "Microsoft.KeyVault/managedHsm/keys/write/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                              "Microsoft.KeyVault/managedHsm/keys/backup/action",
                              "Microsoft.KeyVault/managedHsm/keys/restore/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                              "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                              "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                              "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                              "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                              "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                              "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                              "Microsoft.KeyVault/managedHsm/keys/sign/action",
                              "Microsoft.KeyVault/managedHsm/keys/verify/action",
                              "Microsoft.KeyVault/managedHsm/keys/create",
                              "Microsoft.KeyVault/managedHsm/keys/delete",
                              "Microsoft.KeyVault/managedHsm/keys/export/action",
                              "Microsoft.KeyVault/managedHsm/keys/release/action",
                              "Microsoft.KeyVault/managedHsm/keys/import/action",
                              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                              "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                              "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                              "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                              "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                              "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                              "Microsoft.KeyVault/managedHsm/backup/start/action",
                              "Microsoft.KeyVault/managedHsm/restore/start/action",
                              "Microsoft.KeyVault/managedHsm/backup/status/action",
                              "Microsoft.KeyVault/managedHsm/restore/status/action",
                              "Microsoft.KeyVault/managedHsm/rng/action"
                            ],
                            "x-ms-enum": {
                              "name": "DataAction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ReadHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                                  "description": "Read HSM key metadata."
                                },
                                {
                                  "name": "WriteHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                                  "description": "Update an HSM key."
                                },
                                {
                                  "name": "ReadDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                                  "description": "Read deleted HSM key."
                                },
                                {
                                  "name": "RecoverDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                                  "description": "Recover deleted HSM key."
                                },
                                {
                                  "name": "BackupHsmKeys",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                                  "description": "Backup HSM keys."
                                },
                                {
                                  "name": "RestoreHsmKeys",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                                  "description": "Restore HSM keys."
                                },
                                {
                                  "name": "DeleteRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                                  "description": "Delete role assignment."
                                },
                                {
                                  "name": "GetRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                                  "description": "Get role assignment."
                                },
                                {
                                  "name": "WriteRoleAssignment",
                                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                                  "description": "Create or update role assignment."
                                },
                                {
                                  "name": "ReadRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                                  "description": "Get role definition."
                                },
                                {
                                  "name": "WriteRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                                  "description": "Create or update role definition."
                                },
                                {
                                  "name": "DeleteRoleDefinition",
                                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                                  "description": "Delete role definition."
                                },
                                {
                                  "name": "EncryptHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                                  "description": "Encrypt using an HSM key."
                                },
                                {
                                  "name": "DecryptHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                                  "description": "Decrypt using an HSM key."
                                },
                                {
                                  "name": "WrapHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                                  "description": "Wrap using an HSM key."
                                },
                                {
                                  "name": "UnwrapHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                                  "description": "Unwrap using an HSM key."
                                },
                                {
                                  "name": "SignHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                                  "description": "Sign using an HSM key."
                                },
                                {
                                  "name": "VerifyHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                                  "description": "Verify using an HSM key."
                                },
                                {
                                  "name": "CreateHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/create",
                                  "description": "Create an HSM key."
                                },
                                {
                                  "name": "DeleteHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                                  "description": "Delete an HSM key."
                                },
                                {
                                  "name": "ExportHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                                  "description": "Export an HSM key."
                                },
                                {
                                  "name": "ReleaseKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                                  "description": "Release an HSM key using Secure Key Release."
                                },
                                {
                                  "name": "ImportHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                                  "description": "Import an HSM key."
                                },
                                {
                                  "name": "PurgeDeletedHsmKey",
                                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                                  "description": "Purge a deleted HSM key."
                                },
                                {
                                  "name": "DownloadHsmSecurityDomain",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                                  "description": "Download an HSM security domain."
                                },
                                {
                                  "name": "DownloadHsmSecurityDomainStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                                  "description": "Check status of HSM security domain download."
                                },
                                {
                                  "name": "UploadHsmSecurityDomain",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                                  "description": "Upload an HSM security domain."
                                },
                                {
                                  "name": "ReadHsmSecurityDomainStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                                  "description": "Check the status of the HSM security domain exchange file."
                                },
                                {
                                  "name": "ReadHsmSecurityDomainTransferKey",
                                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                                  "description": "Download an HSM security domain transfer key."
                                },
                                {
                                  "name": "StartHsmBackup",
                                  "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                                  "description": "Start an HSM backup."
                                },
                                {
                                  "name": "StartHsmRestore",
                                  "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                                  "description": "Start an HSM restore."
                                },
                                {
                                  "name": "ReadHsmBackupStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                                  "description": "Read an HSM backup status."
                                },
                                {
                                  "name": "ReadHsmRestoreStatus",
                                  "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                                  "description": "Read an HSM restore status."
                                },
                                {
                                  "name": "RandomNumbersGenerate",
                                  "value": "Microsoft.KeyVault/managedHsm/rng/action",
                                  "description": "Generate random numbers."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "assignableScopes": {
                    "type": "array",
                    "description": "Role definition assignable scopes.",
                    "items": {
                      "type": "string",
                      "description": "The role scope.",
                      "enum": [
                        "/",
                        "/keys"
                      ],
                      "x-ms-enum": {
                        "name": "RoleScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Global",
                            "value": "/",
                            "description": "Global scope"
                          },
                          {
                            "name": "Keys",
                            "value": "/keys",
                            "description": "Keys scope"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      }
    },
    "PermissionGetResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "actions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Allowed actions."
              },
              "notActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Denied actions."
              },
              "dataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Allowed Data actions."
              },
              "notDataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Denied Data actions."
              }
            },
            "type": "object",
            "description": "Role definition permissions."
          },
          "x-ms-identifiers": [],
          "description": "An array of permissions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Permissions information."
    },
    "Permission": {
      "type": "object",
      "description": "Role definition permissions.",
      "properties": {
        "actions": {
          "type": "array",
          "description": "Action permissions that are granted.",
          "items": {
            "type": "string"
          }
        },
        "notActions": {
          "type": "array",
          "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
          "items": {
            "type": "string"
          }
        },
        "dataActions": {
          "type": "array",
          "description": "Data action permissions that are granted.",
          "items": {
            "type": "string",
            "description": "Supported permissions for data actions.",
            "enum": [
              "Microsoft.KeyVault/managedHsm/keys/read/action",
              "Microsoft.KeyVault/managedHsm/keys/write/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
              "Microsoft.KeyVault/managedHsm/keys/backup/action",
              "Microsoft.KeyVault/managedHsm/keys/restore/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
              "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
              "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
              "Microsoft.KeyVault/managedHsm/keys/wrap/action",
              "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
              "Microsoft.KeyVault/managedHsm/keys/sign/action",
              "Microsoft.KeyVault/managedHsm/keys/verify/action",
              "Microsoft.KeyVault/managedHsm/keys/create",
              "Microsoft.KeyVault/managedHsm/keys/delete",
              "Microsoft.KeyVault/managedHsm/keys/export/action",
              "Microsoft.KeyVault/managedHsm/keys/release/action",
              "Microsoft.KeyVault/managedHsm/keys/import/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
              "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
              "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
              "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
              "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
              "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
              "Microsoft.KeyVault/managedHsm/backup/start/action",
              "Microsoft.KeyVault/managedHsm/restore/start/action",
              "Microsoft.KeyVault/managedHsm/backup/status/action",
              "Microsoft.KeyVault/managedHsm/restore/status/action",
              "Microsoft.KeyVault/managedHsm/rng/action"
            ],
            "x-ms-enum": {
              "name": "DataAction",
              "modelAsString": true,
              "values": [
                {
                  "name": "ReadHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                  "description": "Read HSM key metadata."
                },
                {
                  "name": "WriteHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                  "description": "Update an HSM key."
                },
                {
                  "name": "ReadDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                  "description": "Read deleted HSM key."
                },
                {
                  "name": "RecoverDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                  "description": "Recover deleted HSM key."
                },
                {
                  "name": "BackupHsmKeys",
                  "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                  "description": "Backup HSM keys."
                },
                {
                  "name": "RestoreHsmKeys",
                  "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                  "description": "Restore HSM keys."
                },
                {
                  "name": "DeleteRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                  "description": "Delete role assignment."
                },
                {
                  "name": "GetRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                  "description": "Get role assignment."
                },
                {
                  "name": "WriteRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                  "description": "Create or update role assignment."
                },
                {
                  "name": "ReadRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                  "description": "Get role definition."
                },
                {
                  "name": "WriteRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                  "description": "Create or update role definition."
                },
                {
                  "name": "DeleteRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                  "description": "Delete role definition."
                },
                {
                  "name": "EncryptHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                  "description": "Encrypt using an HSM key."
                },
                {
                  "name": "DecryptHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                  "description": "Decrypt using an HSM key."
                },
                {
                  "name": "WrapHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                  "description": "Wrap using an HSM key."
                },
                {
                  "name": "UnwrapHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                  "description": "Unwrap using an HSM key."
                },
                {
                  "name": "SignHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                  "description": "Sign using an HSM key."
                },
                {
                  "name": "VerifyHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                  "description": "Verify using an HSM key."
                },
                {
                  "name": "CreateHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/create",
                  "description": "Create an HSM key."
                },
                {
                  "name": "DeleteHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                  "description": "Delete an HSM key."
                },
                {
                  "name": "ExportHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                  "description": "Export an HSM key."
                },
                {
                  "name": "ReleaseKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                  "description": "Release an HSM key using Secure Key Release."
                },
                {
                  "name": "ImportHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                  "description": "Import an HSM key."
                },
                {
                  "name": "PurgeDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                  "description": "Purge a deleted HSM key."
                },
                {
                  "name": "DownloadHsmSecurityDomain",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                  "description": "Download an HSM security domain."
                },
                {
                  "name": "DownloadHsmSecurityDomainStatus",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                  "description": "Check status of HSM security domain download."
                },
                {
                  "name": "UploadHsmSecurityDomain",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                  "description": "Upload an HSM security domain."
                },
                {
                  "name": "ReadHsmSecurityDomainStatus",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                  "description": "Check the status of the HSM security domain exchange file."
                },
                {
                  "name": "ReadHsmSecurityDomainTransferKey",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                  "description": "Download an HSM security domain transfer key."
                },
                {
                  "name": "StartHsmBackup",
                  "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                  "description": "Start an HSM backup."
                },
                {
                  "name": "StartHsmRestore",
                  "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                  "description": "Start an HSM restore."
                },
                {
                  "name": "ReadHsmBackupStatus",
                  "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                  "description": "Read an HSM backup status."
                },
                {
                  "name": "ReadHsmRestoreStatus",
                  "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                  "description": "Read an HSM restore status."
                },
                {
                  "name": "RandomNumbersGenerate",
                  "value": "Microsoft.KeyVault/managedHsm/rng/action",
                  "description": "Generate random numbers."
                }
              ]
            }
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
          "items": {
            "type": "string",
            "description": "Supported permissions for data actions.",
            "enum": [
              "Microsoft.KeyVault/managedHsm/keys/read/action",
              "Microsoft.KeyVault/managedHsm/keys/write/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
              "Microsoft.KeyVault/managedHsm/keys/backup/action",
              "Microsoft.KeyVault/managedHsm/keys/restore/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
              "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
              "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
              "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
              "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
              "Microsoft.KeyVault/managedHsm/keys/wrap/action",
              "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
              "Microsoft.KeyVault/managedHsm/keys/sign/action",
              "Microsoft.KeyVault/managedHsm/keys/verify/action",
              "Microsoft.KeyVault/managedHsm/keys/create",
              "Microsoft.KeyVault/managedHsm/keys/delete",
              "Microsoft.KeyVault/managedHsm/keys/export/action",
              "Microsoft.KeyVault/managedHsm/keys/release/action",
              "Microsoft.KeyVault/managedHsm/keys/import/action",
              "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
              "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
              "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
              "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
              "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
              "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
              "Microsoft.KeyVault/managedHsm/backup/start/action",
              "Microsoft.KeyVault/managedHsm/restore/start/action",
              "Microsoft.KeyVault/managedHsm/backup/status/action",
              "Microsoft.KeyVault/managedHsm/restore/status/action",
              "Microsoft.KeyVault/managedHsm/rng/action"
            ],
            "x-ms-enum": {
              "name": "DataAction",
              "modelAsString": true,
              "values": [
                {
                  "name": "ReadHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                  "description": "Read HSM key metadata."
                },
                {
                  "name": "WriteHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                  "description": "Update an HSM key."
                },
                {
                  "name": "ReadDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                  "description": "Read deleted HSM key."
                },
                {
                  "name": "RecoverDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                  "description": "Recover deleted HSM key."
                },
                {
                  "name": "BackupHsmKeys",
                  "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                  "description": "Backup HSM keys."
                },
                {
                  "name": "RestoreHsmKeys",
                  "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                  "description": "Restore HSM keys."
                },
                {
                  "name": "DeleteRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                  "description": "Delete role assignment."
                },
                {
                  "name": "GetRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                  "description": "Get role assignment."
                },
                {
                  "name": "WriteRoleAssignment",
                  "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                  "description": "Create or update role assignment."
                },
                {
                  "name": "ReadRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                  "description": "Get role definition."
                },
                {
                  "name": "WriteRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                  "description": "Create or update role definition."
                },
                {
                  "name": "DeleteRoleDefinition",
                  "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                  "description": "Delete role definition."
                },
                {
                  "name": "EncryptHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                  "description": "Encrypt using an HSM key."
                },
                {
                  "name": "DecryptHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                  "description": "Decrypt using an HSM key."
                },
                {
                  "name": "WrapHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                  "description": "Wrap using an HSM key."
                },
                {
                  "name": "UnwrapHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                  "description": "Unwrap using an HSM key."
                },
                {
                  "name": "SignHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                  "description": "Sign using an HSM key."
                },
                {
                  "name": "VerifyHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                  "description": "Verify using an HSM key."
                },
                {
                  "name": "CreateHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/create",
                  "description": "Create an HSM key."
                },
                {
                  "name": "DeleteHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                  "description": "Delete an HSM key."
                },
                {
                  "name": "ExportHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                  "description": "Export an HSM key."
                },
                {
                  "name": "ReleaseKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                  "description": "Release an HSM key using Secure Key Release."
                },
                {
                  "name": "ImportHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                  "description": "Import an HSM key."
                },
                {
                  "name": "PurgeDeletedHsmKey",
                  "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                  "description": "Purge a deleted HSM key."
                },
                {
                  "name": "DownloadHsmSecurityDomain",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                  "description": "Download an HSM security domain."
                },
                {
                  "name": "DownloadHsmSecurityDomainStatus",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                  "description": "Check status of HSM security domain download."
                },
                {
                  "name": "UploadHsmSecurityDomain",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                  "description": "Upload an HSM security domain."
                },
                {
                  "name": "ReadHsmSecurityDomainStatus",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                  "description": "Check the status of the HSM security domain exchange file."
                },
                {
                  "name": "ReadHsmSecurityDomainTransferKey",
                  "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                  "description": "Download an HSM security domain transfer key."
                },
                {
                  "name": "StartHsmBackup",
                  "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                  "description": "Start an HSM backup."
                },
                {
                  "name": "StartHsmRestore",
                  "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                  "description": "Start an HSM restore."
                },
                {
                  "name": "ReadHsmBackupStatus",
                  "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                  "description": "Read an HSM backup status."
                },
                {
                  "name": "ReadHsmRestoreStatus",
                  "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                  "description": "Read an HSM restore status."
                },
                {
                  "name": "RandomNumbersGenerate",
                  "value": "Microsoft.KeyVault/managedHsm/rng/action",
                  "description": "Generate random numbers."
                }
              ]
            }
          }
        }
      }
    },
    "Principal": {
      "readOnly": true,
      "type": "object",
      "description": "The name of the entity last modified it",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the principal made changes"
        },
        "displayName": {
          "type": "string",
          "description": "The name of the principal made changes"
        },
        "type": {
          "type": "string",
          "description": "Type of principal such as user , group etc"
        },
        "email": {
          "type": "string",
          "description": "Email of principal"
        }
      }
    },
    "RoleManagementPolicyRule": {
      "description": "The role management policy rule.",
      "type": "object",
      "required": [
        "ruleType"
      ],
      "discriminator": "ruleType",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the rule."
        },
        "ruleType": {
          "description": "The type of rule",
          "type": "string",
          "enum": [
            "RoleManagementPolicyApprovalRule",
            "RoleManagementPolicyAuthenticationContextRule",
            "RoleManagementPolicyEnablementRule",
            "RoleManagementPolicyExpirationRule",
            "RoleManagementPolicyNotificationRule"
          ],
          "x-ms-enum": {
            "name": "RoleManagementPolicyRuleType",
            "modelAsString": true
          }
        },
        "target": {
          "description": "The target of the current rule.",
          "type": "object",
          "properties": {
            "caller": {
              "type": "string",
              "description": "The caller of the setting."
            },
            "operations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The type of operation."
            },
            "level": {
              "type": "string",
              "description": "The assignment level to which rule is applied."
            },
            "targetObjects": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of target objects."
            },
            "inheritableSettings": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of inheritable settings."
            },
            "enforcedSettings": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of enforced settings."
            }
          }
        }
      }
    },
    "RoleManagementPolicyApprovalRule": {
      "description": "The role management policy approval rule.",
      "allOf": [
        {
          "description": "The role management policy rule.",
          "type": "object",
          "required": [
            "ruleType"
          ],
          "discriminator": "ruleType",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the rule."
            },
            "ruleType": {
              "description": "The type of rule",
              "type": "string",
              "enum": [
                "RoleManagementPolicyApprovalRule",
                "RoleManagementPolicyAuthenticationContextRule",
                "RoleManagementPolicyEnablementRule",
                "RoleManagementPolicyExpirationRule",
                "RoleManagementPolicyNotificationRule"
              ],
              "x-ms-enum": {
                "name": "RoleManagementPolicyRuleType",
                "modelAsString": true
              }
            },
            "target": {
              "description": "The target of the current rule.",
              "type": "object",
              "properties": {
                "caller": {
                  "type": "string",
                  "description": "The caller of the setting."
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The type of operation."
                },
                "level": {
                  "type": "string",
                  "description": "The assignment level to which rule is applied."
                },
                "targetObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of target objects."
                },
                "inheritableSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of inheritable settings."
                },
                "enforcedSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of enforced settings."
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "setting": {
          "description": "The approval setting",
          "type": "object",
          "properties": {
            "isApprovalRequired": {
              "type": "boolean",
              "description": "Determines whether approval is required or not."
            },
            "isApprovalRequiredForExtension": {
              "type": "boolean",
              "description": "Determines whether approval is required for assignment extension."
            },
            "isRequestorJustificationRequired": {
              "type": "boolean",
              "description": "Determine whether requestor justification is required."
            },
            "approvalMode": {
              "type": "string",
              "description": "The type of rule",
              "enum": [
                "SingleStage",
                "Serial",
                "Parallel",
                "NoApproval"
              ],
              "x-ms-enum": {
                "name": "ApprovalMode",
                "modelAsString": true
              }
            },
            "approvalStages": {
              "type": "array",
              "items": {
                "description": "The approval stage.",
                "type": "object",
                "properties": {
                  "approvalStageTimeOutInDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The time in days when approval request would be timed out"
                  },
                  "isApproverJustificationRequired": {
                    "type": "boolean",
                    "description": "Determines whether approver need to provide justification for his decision."
                  },
                  "escalationTimeInMinutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The time in minutes when the approval request would be escalated if the primary approver does not approve"
                  },
                  "primaryApprovers": {
                    "type": "array",
                    "description": "The primary approver of the request.",
                    "items": {
                      "description": "The detail of a user.",
                      "type": "object",
                      "properties": {
                        "userType": {
                          "type": "string",
                          "description": "The type of user.",
                          "enum": [
                            "User",
                            "Group"
                          ],
                          "x-ms-enum": {
                            "name": "UserType",
                            "modelAsString": true
                          }
                        },
                        "isBackup": {
                          "type": "boolean",
                          "description": "The value indicating whether the user is a backup fallback approver"
                        },
                        "id": {
                          "type": "string",
                          "description": "The object id of the user."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the user."
                        }
                      }
                    }
                  },
                  "isEscalationEnabled": {
                    "type": "boolean",
                    "description": "The value determine whether escalation feature is enabled."
                  },
                  "escalationApprovers": {
                    "type": "array",
                    "description": "The escalation approver of the request.",
                    "items": {
                      "description": "The detail of a user.",
                      "type": "object",
                      "properties": {
                        "userType": {
                          "type": "string",
                          "description": "The type of user.",
                          "enum": [
                            "User",
                            "Group"
                          ],
                          "x-ms-enum": {
                            "name": "UserType",
                            "modelAsString": true
                          }
                        },
                        "isBackup": {
                          "type": "boolean",
                          "description": "The value indicating whether the user is a backup fallback approver"
                        },
                        "id": {
                          "type": "string",
                          "description": "The object id of the user."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the user."
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The approval stages of the request."
            }
          }
        }
      }
    },
    "ApprovalSettings": {
      "description": "The approval settings.",
      "type": "object",
      "properties": {
        "isApprovalRequired": {
          "type": "boolean",
          "description": "Determines whether approval is required or not."
        },
        "isApprovalRequiredForExtension": {
          "type": "boolean",
          "description": "Determines whether approval is required for assignment extension."
        },
        "isRequestorJustificationRequired": {
          "type": "boolean",
          "description": "Determine whether requestor justification is required."
        },
        "approvalMode": {
          "type": "string",
          "description": "The type of rule",
          "enum": [
            "SingleStage",
            "Serial",
            "Parallel",
            "NoApproval"
          ],
          "x-ms-enum": {
            "name": "ApprovalMode",
            "modelAsString": true
          }
        },
        "approvalStages": {
          "type": "array",
          "items": {
            "description": "The approval stage.",
            "type": "object",
            "properties": {
              "approvalStageTimeOutInDays": {
                "type": "integer",
                "format": "int32",
                "description": "The time in days when approval request would be timed out"
              },
              "isApproverJustificationRequired": {
                "type": "boolean",
                "description": "Determines whether approver need to provide justification for his decision."
              },
              "escalationTimeInMinutes": {
                "type": "integer",
                "format": "int32",
                "description": "The time in minutes when the approval request would be escalated if the primary approver does not approve"
              },
              "primaryApprovers": {
                "type": "array",
                "description": "The primary approver of the request.",
                "items": {
                  "description": "The detail of a user.",
                  "type": "object",
                  "properties": {
                    "userType": {
                      "type": "string",
                      "description": "The type of user.",
                      "enum": [
                        "User",
                        "Group"
                      ],
                      "x-ms-enum": {
                        "name": "UserType",
                        "modelAsString": true
                      }
                    },
                    "isBackup": {
                      "type": "boolean",
                      "description": "The value indicating whether the user is a backup fallback approver"
                    },
                    "id": {
                      "type": "string",
                      "description": "The object id of the user."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the user."
                    }
                  }
                }
              },
              "isEscalationEnabled": {
                "type": "boolean",
                "description": "The value determine whether escalation feature is enabled."
              },
              "escalationApprovers": {
                "type": "array",
                "description": "The escalation approver of the request.",
                "items": {
                  "description": "The detail of a user.",
                  "type": "object",
                  "properties": {
                    "userType": {
                      "type": "string",
                      "description": "The type of user.",
                      "enum": [
                        "User",
                        "Group"
                      ],
                      "x-ms-enum": {
                        "name": "UserType",
                        "modelAsString": true
                      }
                    },
                    "isBackup": {
                      "type": "boolean",
                      "description": "The value indicating whether the user is a backup fallback approver"
                    },
                    "id": {
                      "type": "string",
                      "description": "The object id of the user."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the user."
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "The approval stages of the request."
        }
      }
    },
    "ApprovalStage": {
      "description": "The approval stage.",
      "type": "object",
      "properties": {
        "approvalStageTimeOutInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The time in days when approval request would be timed out"
        },
        "isApproverJustificationRequired": {
          "type": "boolean",
          "description": "Determines whether approver need to provide justification for his decision."
        },
        "escalationTimeInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes when the approval request would be escalated if the primary approver does not approve"
        },
        "primaryApprovers": {
          "type": "array",
          "description": "The primary approver of the request.",
          "items": {
            "description": "The detail of a user.",
            "type": "object",
            "properties": {
              "userType": {
                "type": "string",
                "description": "The type of user.",
                "enum": [
                  "User",
                  "Group"
                ],
                "x-ms-enum": {
                  "name": "UserType",
                  "modelAsString": true
                }
              },
              "isBackup": {
                "type": "boolean",
                "description": "The value indicating whether the user is a backup fallback approver"
              },
              "id": {
                "type": "string",
                "description": "The object id of the user."
              },
              "description": {
                "type": "string",
                "description": "The description of the user."
              }
            }
          }
        },
        "isEscalationEnabled": {
          "type": "boolean",
          "description": "The value determine whether escalation feature is enabled."
        },
        "escalationApprovers": {
          "type": "array",
          "description": "The escalation approver of the request.",
          "items": {
            "description": "The detail of a user.",
            "type": "object",
            "properties": {
              "userType": {
                "type": "string",
                "description": "The type of user.",
                "enum": [
                  "User",
                  "Group"
                ],
                "x-ms-enum": {
                  "name": "UserType",
                  "modelAsString": true
                }
              },
              "isBackup": {
                "type": "boolean",
                "description": "The value indicating whether the user is a backup fallback approver"
              },
              "id": {
                "type": "string",
                "description": "The object id of the user."
              },
              "description": {
                "type": "string",
                "description": "The description of the user."
              }
            }
          }
        }
      }
    },
    "UserSet": {
      "description": "The detail of a user.",
      "type": "object",
      "properties": {
        "userType": {
          "type": "string",
          "description": "The type of user.",
          "enum": [
            "User",
            "Group"
          ],
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": true
          }
        },
        "isBackup": {
          "type": "boolean",
          "description": "The value indicating whether the user is a backup fallback approver"
        },
        "id": {
          "type": "string",
          "description": "The object id of the user."
        },
        "description": {
          "type": "string",
          "description": "The description of the user."
        }
      }
    },
    "RoleManagementPolicyAuthenticationContextRule": {
      "description": "The role management policy authentication context rule.",
      "allOf": [
        {
          "description": "The role management policy rule.",
          "type": "object",
          "required": [
            "ruleType"
          ],
          "discriminator": "ruleType",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the rule."
            },
            "ruleType": {
              "description": "The type of rule",
              "type": "string",
              "enum": [
                "RoleManagementPolicyApprovalRule",
                "RoleManagementPolicyAuthenticationContextRule",
                "RoleManagementPolicyEnablementRule",
                "RoleManagementPolicyExpirationRule",
                "RoleManagementPolicyNotificationRule"
              ],
              "x-ms-enum": {
                "name": "RoleManagementPolicyRuleType",
                "modelAsString": true
              }
            },
            "target": {
              "description": "The target of the current rule.",
              "type": "object",
              "properties": {
                "caller": {
                  "type": "string",
                  "description": "The caller of the setting."
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The type of operation."
                },
                "level": {
                  "type": "string",
                  "description": "The assignment level to which rule is applied."
                },
                "targetObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of target objects."
                },
                "inheritableSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of inheritable settings."
                },
                "enforcedSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of enforced settings."
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "The value indicating if rule is enabled."
        },
        "claimValue": {
          "type": "string",
          "description": "The claim value."
        }
      }
    },
    "RoleManagementPolicyEnablementRule": {
      "description": "The role management policy enablement rule.",
      "allOf": [
        {
          "description": "The role management policy rule.",
          "type": "object",
          "required": [
            "ruleType"
          ],
          "discriminator": "ruleType",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the rule."
            },
            "ruleType": {
              "description": "The type of rule",
              "type": "string",
              "enum": [
                "RoleManagementPolicyApprovalRule",
                "RoleManagementPolicyAuthenticationContextRule",
                "RoleManagementPolicyEnablementRule",
                "RoleManagementPolicyExpirationRule",
                "RoleManagementPolicyNotificationRule"
              ],
              "x-ms-enum": {
                "name": "RoleManagementPolicyRuleType",
                "modelAsString": true
              }
            },
            "target": {
              "description": "The target of the current rule.",
              "type": "object",
              "properties": {
                "caller": {
                  "type": "string",
                  "description": "The caller of the setting."
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The type of operation."
                },
                "level": {
                  "type": "string",
                  "description": "The assignment level to which rule is applied."
                },
                "targetObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of target objects."
                },
                "inheritableSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of inheritable settings."
                },
                "enforcedSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of enforced settings."
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "enabledRules": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The type of enablement rule",
            "enum": [
              "MultiFactorAuthentication",
              "Justification",
              "Ticketing"
            ],
            "x-ms-enum": {
              "name": "EnablementRules",
              "modelAsString": true
            }
          },
          "description": "The list of enabled rules."
        }
      }
    },
    "RoleManagementPolicyExpirationRule": {
      "description": "The role management policy expiration rule.",
      "allOf": [
        {
          "description": "The role management policy rule.",
          "type": "object",
          "required": [
            "ruleType"
          ],
          "discriminator": "ruleType",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the rule."
            },
            "ruleType": {
              "description": "The type of rule",
              "type": "string",
              "enum": [
                "RoleManagementPolicyApprovalRule",
                "RoleManagementPolicyAuthenticationContextRule",
                "RoleManagementPolicyEnablementRule",
                "RoleManagementPolicyExpirationRule",
                "RoleManagementPolicyNotificationRule"
              ],
              "x-ms-enum": {
                "name": "RoleManagementPolicyRuleType",
                "modelAsString": true
              }
            },
            "target": {
              "description": "The target of the current rule.",
              "type": "object",
              "properties": {
                "caller": {
                  "type": "string",
                  "description": "The caller of the setting."
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The type of operation."
                },
                "level": {
                  "type": "string",
                  "description": "The assignment level to which rule is applied."
                },
                "targetObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of target objects."
                },
                "inheritableSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of inheritable settings."
                },
                "enforcedSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of enforced settings."
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "isExpirationRequired": {
          "type": "boolean",
          "description": "The value indicating whether expiration is required."
        },
        "maximumDuration": {
          "type": "string",
          "description": "The maximum duration of expiration in timespan."
        }
      }
    },
    "RoleManagementPolicyNotificationRule": {
      "description": "The role management policy notification rule.",
      "allOf": [
        {
          "description": "The role management policy rule.",
          "type": "object",
          "required": [
            "ruleType"
          ],
          "discriminator": "ruleType",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the rule."
            },
            "ruleType": {
              "description": "The type of rule",
              "type": "string",
              "enum": [
                "RoleManagementPolicyApprovalRule",
                "RoleManagementPolicyAuthenticationContextRule",
                "RoleManagementPolicyEnablementRule",
                "RoleManagementPolicyExpirationRule",
                "RoleManagementPolicyNotificationRule"
              ],
              "x-ms-enum": {
                "name": "RoleManagementPolicyRuleType",
                "modelAsString": true
              }
            },
            "target": {
              "description": "The target of the current rule.",
              "type": "object",
              "properties": {
                "caller": {
                  "type": "string",
                  "description": "The caller of the setting."
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The type of operation."
                },
                "level": {
                  "type": "string",
                  "description": "The assignment level to which rule is applied."
                },
                "targetObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of target objects."
                },
                "inheritableSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of inheritable settings."
                },
                "enforcedSettings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of enforced settings."
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "notificationType": {
          "type": "string",
          "description": "The type of notification.",
          "enum": [
            "Email"
          ],
          "x-ms-enum": {
            "name": "NotificationDeliveryMechanism",
            "modelAsString": true
          }
        },
        "notificationLevel": {
          "type": "string",
          "description": "The notification level.",
          "enum": [
            "None",
            "Critical",
            "All"
          ],
          "x-ms-enum": {
            "name": "NotificationLevel",
            "modelAsString": true
          }
        },
        "recipientType": {
          "type": "string",
          "description": "The recipient type.",
          "enum": [
            "Requestor",
            "Approver",
            "Admin"
          ],
          "x-ms-enum": {
            "name": "RecipientType",
            "modelAsString": true
          }
        },
        "notificationRecipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of notification recipients."
        },
        "isDefaultRecipientsEnabled": {
          "type": "boolean",
          "description": "Determines if the notification will be sent to the recipient type specified in the policy rule."
        }
      }
    },
    "RoleManagementPolicyRuleTarget": {
      "description": "The role management policy rule target.",
      "type": "object",
      "properties": {
        "caller": {
          "type": "string",
          "description": "The caller of the setting."
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The type of operation."
        },
        "level": {
          "type": "string",
          "description": "The assignment level to which rule is applied."
        },
        "targetObjects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of target objects."
        },
        "inheritableSettings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of inheritable settings."
        },
        "enforcedSettings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of enforced settings."
        }
      }
    },
    "RoleManagementPolicyRuleType": {
      "type": "string",
      "description": "The type of rule",
      "enum": [
        "RoleManagementPolicyApprovalRule",
        "RoleManagementPolicyAuthenticationContextRule",
        "RoleManagementPolicyEnablementRule",
        "RoleManagementPolicyExpirationRule",
        "RoleManagementPolicyNotificationRule"
      ],
      "x-ms-enum": {
        "name": "RoleManagementPolicyRuleType",
        "modelAsString": true
      }
    },
    "DataAction": {
      "type": "string",
      "description": "Supported permissions for data actions.",
      "enum": [
        "Microsoft.KeyVault/managedHsm/keys/read/action",
        "Microsoft.KeyVault/managedHsm/keys/write/action",
        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
        "Microsoft.KeyVault/managedHsm/keys/backup/action",
        "Microsoft.KeyVault/managedHsm/keys/restore/action",
        "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
        "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
        "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
        "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
        "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
        "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
        "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
        "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
        "Microsoft.KeyVault/managedHsm/keys/wrap/action",
        "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
        "Microsoft.KeyVault/managedHsm/keys/sign/action",
        "Microsoft.KeyVault/managedHsm/keys/verify/action",
        "Microsoft.KeyVault/managedHsm/keys/create",
        "Microsoft.KeyVault/managedHsm/keys/delete",
        "Microsoft.KeyVault/managedHsm/keys/export/action",
        "Microsoft.KeyVault/managedHsm/keys/release/action",
        "Microsoft.KeyVault/managedHsm/keys/import/action",
        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
        "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
        "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
        "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
        "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
        "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
        "Microsoft.KeyVault/managedHsm/backup/start/action",
        "Microsoft.KeyVault/managedHsm/restore/start/action",
        "Microsoft.KeyVault/managedHsm/backup/status/action",
        "Microsoft.KeyVault/managedHsm/restore/status/action",
        "Microsoft.KeyVault/managedHsm/rng/action"
      ],
      "x-ms-enum": {
        "name": "DataAction",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
            "description": "Read HSM key metadata."
          },
          {
            "name": "WriteHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
            "description": "Update an HSM key."
          },
          {
            "name": "ReadDeletedHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
            "description": "Read deleted HSM key."
          },
          {
            "name": "RecoverDeletedHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
            "description": "Recover deleted HSM key."
          },
          {
            "name": "BackupHsmKeys",
            "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
            "description": "Backup HSM keys."
          },
          {
            "name": "RestoreHsmKeys",
            "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
            "description": "Restore HSM keys."
          },
          {
            "name": "DeleteRoleAssignment",
            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
            "description": "Delete role assignment."
          },
          {
            "name": "GetRoleAssignment",
            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
            "description": "Get role assignment."
          },
          {
            "name": "WriteRoleAssignment",
            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
            "description": "Create or update role assignment."
          },
          {
            "name": "ReadRoleDefinition",
            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
            "description": "Get role definition."
          },
          {
            "name": "WriteRoleDefinition",
            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
            "description": "Create or update role definition."
          },
          {
            "name": "DeleteRoleDefinition",
            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
            "description": "Delete role definition."
          },
          {
            "name": "EncryptHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
            "description": "Encrypt using an HSM key."
          },
          {
            "name": "DecryptHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
            "description": "Decrypt using an HSM key."
          },
          {
            "name": "WrapHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
            "description": "Wrap using an HSM key."
          },
          {
            "name": "UnwrapHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
            "description": "Unwrap using an HSM key."
          },
          {
            "name": "SignHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
            "description": "Sign using an HSM key."
          },
          {
            "name": "VerifyHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
            "description": "Verify using an HSM key."
          },
          {
            "name": "CreateHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/create",
            "description": "Create an HSM key."
          },
          {
            "name": "DeleteHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/delete",
            "description": "Delete an HSM key."
          },
          {
            "name": "ExportHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
            "description": "Export an HSM key."
          },
          {
            "name": "ReleaseKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
            "description": "Release an HSM key using Secure Key Release."
          },
          {
            "name": "ImportHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
            "description": "Import an HSM key."
          },
          {
            "name": "PurgeDeletedHsmKey",
            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
            "description": "Purge a deleted HSM key."
          },
          {
            "name": "DownloadHsmSecurityDomain",
            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
            "description": "Download an HSM security domain."
          },
          {
            "name": "DownloadHsmSecurityDomainStatus",
            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
            "description": "Check status of HSM security domain download."
          },
          {
            "name": "UploadHsmSecurityDomain",
            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
            "description": "Upload an HSM security domain."
          },
          {
            "name": "ReadHsmSecurityDomainStatus",
            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
            "description": "Check the status of the HSM security domain exchange file."
          },
          {
            "name": "ReadHsmSecurityDomainTransferKey",
            "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
            "description": "Download an HSM security domain transfer key."
          },
          {
            "name": "StartHsmBackup",
            "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
            "description": "Start an HSM backup."
          },
          {
            "name": "StartHsmRestore",
            "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
            "description": "Start an HSM restore."
          },
          {
            "name": "ReadHsmBackupStatus",
            "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
            "description": "Read an HSM backup status."
          },
          {
            "name": "ReadHsmRestoreStatus",
            "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
            "description": "Read an HSM restore status."
          },
          {
            "name": "RandomNumbersGenerate",
            "value": "Microsoft.KeyVault/managedHsm/rng/action",
            "description": "Generate random numbers."
          }
        ]
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "innererror": {
          "$ref": "#/definitions/Error",
          "description": "The key vault server error.",
          "readOnly": true,
          "x-ms-client-name": "innerError"
        }
      },
      "x-nullable": true
    },
    "KeyVaultError": {
      "type": "object",
      "description": "The key vault error exception.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The key vault server error.",
          "readOnly": true
        }
      }
    },
    "RoleAssignmentPropertiesWithScope": {
      "type": "object",
      "description": "Role assignment properties with scope.",
      "properties": {
        "scope": {
          "description": "The role scope.",
          "type": "string",
          "enum": [
            "/",
            "/keys"
          ],
          "x-ms-enum": {
            "name": "RoleScope",
            "modelAsString": true,
            "values": [
              {
                "name": "Global",
                "value": "/",
                "description": "Global scope"
              },
              {
                "name": "Keys",
                "value": "/keys",
                "description": "Keys scope"
              }
            ]
          }
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition ID."
        },
        "principalId": {
          "type": "string",
          "description": "The principal ID."
        }
      }
    },
    "RoleDefinitionCreateParameters": {
      "type": "object",
      "description": "Role definition create parameters.",
      "properties": {
        "properties": {
          "description": "Role definition properties.",
          "type": "object",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "The role name."
            },
            "description": {
              "type": "string",
              "description": "The role definition description."
            },
            "type": {
              "description": "The role type.",
              "x-ms-client-name": "roleType",
              "type": "string",
              "enum": [
                "AKVBuiltInRole",
                "CustomRole"
              ],
              "x-ms-enum": {
                "name": "RoleType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BuiltInRole",
                    "value": "AKVBuiltInRole",
                    "description": "Built in role."
                  },
                  {
                    "name": "CustomRole",
                    "value": "CustomRole",
                    "description": "Custom role."
                  }
                ]
              }
            },
            "permissions": {
              "type": "array",
              "description": "Role definition permissions.",
              "items": {
                "type": "object",
                "description": "Role definition permissions.",
                "properties": {
                  "actions": {
                    "type": "array",
                    "description": "Action permissions that are granted.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "notActions": {
                    "type": "array",
                    "description": "Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dataActions": {
                    "type": "array",
                    "description": "Data action permissions that are granted.",
                    "items": {
                      "type": "string",
                      "description": "Supported permissions for data actions.",
                      "enum": [
                        "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "Microsoft.KeyVault/managedHsm/keys/create",
                        "Microsoft.KeyVault/managedHsm/keys/delete",
                        "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "Microsoft.KeyVault/managedHsm/rng/action"
                      ],
                      "x-ms-enum": {
                        "name": "DataAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ReadHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                            "description": "Read HSM key metadata."
                          },
                          {
                            "name": "WriteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                            "description": "Update an HSM key."
                          },
                          {
                            "name": "ReadDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                            "description": "Read deleted HSM key."
                          },
                          {
                            "name": "RecoverDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                            "description": "Recover deleted HSM key."
                          },
                          {
                            "name": "BackupHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                            "description": "Backup HSM keys."
                          },
                          {
                            "name": "RestoreHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                            "description": "Restore HSM keys."
                          },
                          {
                            "name": "DeleteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                            "description": "Delete role assignment."
                          },
                          {
                            "name": "GetRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                            "description": "Get role assignment."
                          },
                          {
                            "name": "WriteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                            "description": "Create or update role assignment."
                          },
                          {
                            "name": "ReadRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                            "description": "Get role definition."
                          },
                          {
                            "name": "WriteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                            "description": "Create or update role definition."
                          },
                          {
                            "name": "DeleteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                            "description": "Delete role definition."
                          },
                          {
                            "name": "EncryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                            "description": "Encrypt using an HSM key."
                          },
                          {
                            "name": "DecryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                            "description": "Decrypt using an HSM key."
                          },
                          {
                            "name": "WrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                            "description": "Wrap using an HSM key."
                          },
                          {
                            "name": "UnwrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                            "description": "Unwrap using an HSM key."
                          },
                          {
                            "name": "SignHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                            "description": "Sign using an HSM key."
                          },
                          {
                            "name": "VerifyHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                            "description": "Verify using an HSM key."
                          },
                          {
                            "name": "CreateHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/create",
                            "description": "Create an HSM key."
                          },
                          {
                            "name": "DeleteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                            "description": "Delete an HSM key."
                          },
                          {
                            "name": "ExportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                            "description": "Export an HSM key."
                          },
                          {
                            "name": "ReleaseKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                            "description": "Release an HSM key using Secure Key Release."
                          },
                          {
                            "name": "ImportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                            "description": "Import an HSM key."
                          },
                          {
                            "name": "PurgeDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                            "description": "Purge a deleted HSM key."
                          },
                          {
                            "name": "DownloadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                            "description": "Download an HSM security domain."
                          },
                          {
                            "name": "DownloadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                            "description": "Check status of HSM security domain download."
                          },
                          {
                            "name": "UploadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                            "description": "Upload an HSM security domain."
                          },
                          {
                            "name": "ReadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                            "description": "Check the status of the HSM security domain exchange file."
                          },
                          {
                            "name": "ReadHsmSecurityDomainTransferKey",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                            "description": "Download an HSM security domain transfer key."
                          },
                          {
                            "name": "StartHsmBackup",
                            "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                            "description": "Start an HSM backup."
                          },
                          {
                            "name": "StartHsmRestore",
                            "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                            "description": "Start an HSM restore."
                          },
                          {
                            "name": "ReadHsmBackupStatus",
                            "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                            "description": "Read an HSM backup status."
                          },
                          {
                            "name": "ReadHsmRestoreStatus",
                            "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                            "description": "Read an HSM restore status."
                          },
                          {
                            "name": "RandomNumbersGenerate",
                            "value": "Microsoft.KeyVault/managedHsm/rng/action",
                            "description": "Generate random numbers."
                          }
                        ]
                      }
                    }
                  },
                  "notDataActions": {
                    "type": "array",
                    "description": "Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal.",
                    "items": {
                      "type": "string",
                      "description": "Supported permissions for data actions.",
                      "enum": [
                        "Microsoft.KeyVault/managedHsm/keys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/write/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                        "Microsoft.KeyVault/managedHsm/keys/backup/action",
                        "Microsoft.KeyVault/managedHsm/keys/restore/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                        "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                        "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                        "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                        "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                        "Microsoft.KeyVault/managedHsm/keys/sign/action",
                        "Microsoft.KeyVault/managedHsm/keys/verify/action",
                        "Microsoft.KeyVault/managedHsm/keys/create",
                        "Microsoft.KeyVault/managedHsm/keys/delete",
                        "Microsoft.KeyVault/managedHsm/keys/export/action",
                        "Microsoft.KeyVault/managedHsm/keys/release/action",
                        "Microsoft.KeyVault/managedHsm/keys/import/action",
                        "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                        "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                        "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                        "Microsoft.KeyVault/managedHsm/backup/start/action",
                        "Microsoft.KeyVault/managedHsm/restore/start/action",
                        "Microsoft.KeyVault/managedHsm/backup/status/action",
                        "Microsoft.KeyVault/managedHsm/restore/status/action",
                        "Microsoft.KeyVault/managedHsm/rng/action"
                      ],
                      "x-ms-enum": {
                        "name": "DataAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ReadHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/read/action",
                            "description": "Read HSM key metadata."
                          },
                          {
                            "name": "WriteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/write/action",
                            "description": "Update an HSM key."
                          },
                          {
                            "name": "ReadDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action",
                            "description": "Read deleted HSM key."
                          },
                          {
                            "name": "RecoverDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action",
                            "description": "Recover deleted HSM key."
                          },
                          {
                            "name": "BackupHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/backup/action",
                            "description": "Backup HSM keys."
                          },
                          {
                            "name": "RestoreHsmKeys",
                            "value": "Microsoft.KeyVault/managedHsm/keys/restore/action",
                            "description": "Restore HSM keys."
                          },
                          {
                            "name": "DeleteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/delete/action",
                            "description": "Delete role assignment."
                          },
                          {
                            "name": "GetRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/read/action",
                            "description": "Get role assignment."
                          },
                          {
                            "name": "WriteRoleAssignment",
                            "value": "Microsoft.KeyVault/managedHsm/roleAssignments/write/action",
                            "description": "Create or update role assignment."
                          },
                          {
                            "name": "ReadRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/read/action",
                            "description": "Get role definition."
                          },
                          {
                            "name": "WriteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/write/action",
                            "description": "Create or update role definition."
                          },
                          {
                            "name": "DeleteRoleDefinition",
                            "value": "Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action",
                            "description": "Delete role definition."
                          },
                          {
                            "name": "EncryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/encrypt/action",
                            "description": "Encrypt using an HSM key."
                          },
                          {
                            "name": "DecryptHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/decrypt/action",
                            "description": "Decrypt using an HSM key."
                          },
                          {
                            "name": "WrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/wrap/action",
                            "description": "Wrap using an HSM key."
                          },
                          {
                            "name": "UnwrapHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/unwrap/action",
                            "description": "Unwrap using an HSM key."
                          },
                          {
                            "name": "SignHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/sign/action",
                            "description": "Sign using an HSM key."
                          },
                          {
                            "name": "VerifyHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/verify/action",
                            "description": "Verify using an HSM key."
                          },
                          {
                            "name": "CreateHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/create",
                            "description": "Create an HSM key."
                          },
                          {
                            "name": "DeleteHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/delete",
                            "description": "Delete an HSM key."
                          },
                          {
                            "name": "ExportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/export/action",
                            "description": "Export an HSM key."
                          },
                          {
                            "name": "ReleaseKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/release/action",
                            "description": "Release an HSM key using Secure Key Release."
                          },
                          {
                            "name": "ImportHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/import/action",
                            "description": "Import an HSM key."
                          },
                          {
                            "name": "PurgeDeletedHsmKey",
                            "value": "Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete",
                            "description": "Purge a deleted HSM key."
                          },
                          {
                            "name": "DownloadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/action",
                            "description": "Download an HSM security domain."
                          },
                          {
                            "name": "DownloadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/download/read",
                            "description": "Check status of HSM security domain download."
                          },
                          {
                            "name": "UploadHsmSecurityDomain",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/action",
                            "description": "Upload an HSM security domain."
                          },
                          {
                            "name": "ReadHsmSecurityDomainStatus",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/upload/read",
                            "description": "Check the status of the HSM security domain exchange file."
                          },
                          {
                            "name": "ReadHsmSecurityDomainTransferKey",
                            "value": "Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read",
                            "description": "Download an HSM security domain transfer key."
                          },
                          {
                            "name": "StartHsmBackup",
                            "value": "Microsoft.KeyVault/managedHsm/backup/start/action",
                            "description": "Start an HSM backup."
                          },
                          {
                            "name": "StartHsmRestore",
                            "value": "Microsoft.KeyVault/managedHsm/restore/start/action",
                            "description": "Start an HSM restore."
                          },
                          {
                            "name": "ReadHsmBackupStatus",
                            "value": "Microsoft.KeyVault/managedHsm/backup/status/action",
                            "description": "Read an HSM backup status."
                          },
                          {
                            "name": "ReadHsmRestoreStatus",
                            "value": "Microsoft.KeyVault/managedHsm/restore/status/action",
                            "description": "Read an HSM restore status."
                          },
                          {
                            "name": "RandomNumbersGenerate",
                            "value": "Microsoft.KeyVault/managedHsm/rng/action",
                            "description": "Generate random numbers."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "assignableScopes": {
              "type": "array",
              "description": "Role definition assignable scopes.",
              "items": {
                "type": "string",
                "description": "The role scope.",
                "enum": [
                  "/",
                  "/keys"
                ],
                "x-ms-enum": {
                  "name": "RoleScope",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Global",
                      "value": "/",
                      "description": "Global scope"
                    },
                    {
                      "name": "Keys",
                      "value": "/keys",
                      "description": "Keys scope"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "RoleDefinitionType": {
      "type": "string",
      "description": "The role definition type.",
      "enum": [
        "Microsoft.Authorization/roleDefinitions"
      ],
      "x-ms-enum": {
        "name": "RoleDefinitionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft.Authorization/roleDefinitions",
            "value": "Microsoft.Authorization/roleDefinitions",
            "description": "Microsoft-defined role definitions."
          }
        ]
      }
    },
    "RoleScope": {
      "type": "string",
      "description": "The role scope.",
      "enum": [
        "/",
        "/keys"
      ],
      "x-ms-enum": {
        "name": "RoleScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Global",
            "value": "/",
            "description": "Global scope"
          },
          {
            "name": "Keys",
            "value": "/keys",
            "description": "Keys scope"
          }
        ]
      }
    },
    "RoleType": {
      "type": "string",
      "description": "The role type.",
      "enum": [
        "AKVBuiltInRole",
        "CustomRole"
      ],
      "x-ms-enum": {
        "name": "RoleType",
        "modelAsString": true,
        "values": [
          {
            "name": "BuiltInRole",
            "value": "AKVBuiltInRole",
            "description": "Built in role."
          },
          {
            "name": "CustomRole",
            "value": "CustomRole",
            "description": "Custom role."
          }
        ]
      }
    }
  },
  "parameters": {
    "ResourceProviderNamespaceParameter": {
      "name": "resourceProviderNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The namespace of the resource provider.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
      "x-ms-parameter-location": "method"
    },
    "RoleAssignmentFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleAssignmentNameParameter": {
      "name": "roleAssignmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the role assignment. It can be any valid GUID.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleAssignmentIdParameter": {
      "name": "roleAssignmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified ID of the role assignment including scope, resource name, and resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleAssignmentCreateParameters": {
      "name": "parameters",
      "in": "body",
      "required": true,
      "schema": {
        "properties": {
          "properties": {
            "x-ms-client-flatten": true,
            "description": "Role assignment properties.",
            "properties": {
              "scope": {
                "readOnly": true,
                "type": "string",
                "description": "The role assignment scope."
              },
              "roleDefinitionId": {
                "type": "string",
                "description": "The role definition ID."
              },
              "principalId": {
                "type": "string",
                "description": "The principal ID."
              },
              "principalType": {
                "type": "string",
                "description": "The principal type of the assigned principal ID.",
                "enum": [
                  "User",
                  "Group",
                  "ServicePrincipal",
                  "ForeignGroup",
                  "Device"
                ],
                "default": "User",
                "x-ms-enum": {
                  "name": "PrincipalType",
                  "modelAsString": true
                }
              },
              "description": {
                "type": "string",
                "description": "Description of role assignment"
              },
              "condition": {
                "type": "string",
                "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
              },
              "conditionVersion": {
                "type": "string",
                "description": "Version of the condition. Currently the only accepted value is '2.0'"
              },
              "createdOn": {
                "readOnly": true,
                "type": "string",
                "description": "Time it was created",
                "format": "date-time"
              },
              "updatedOn": {
                "readOnly": true,
                "type": "string",
                "description": "Time it was updated",
                "format": "date-time"
              },
              "createdBy": {
                "readOnly": true,
                "type": "string",
                "description": "Id of the user who created the assignment"
              },
              "updatedBy": {
                "readOnly": true,
                "type": "string",
                "description": "Id of the user who updated the assignment"
              },
              "delegatedManagedIdentityResourceId": {
                "type": "string",
                "description": "Id of the delegated managed identity resource"
              }
            },
            "required": [
              "roleDefinitionId",
              "principalId"
            ],
            "type": "object"
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "description": "Role assignment create parameters."
      },
      "description": "Parameters for the role assignment.",
      "x-ms-parameter-location": "method"
    },
    "TenantIdQueryParameter": {
      "name": "tenantId",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Tenant ID for cross-tenant request",
      "x-ms-parameter-location": "method"
    },
    "PaginationSkipToken": {
      "name": "$skipToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "ResourceTypeParameter": {
      "name": "resourceType",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites).",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource name.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}