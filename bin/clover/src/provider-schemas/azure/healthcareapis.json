{
  "swagger": "2.0",
  "info": {
    "title": "Azure healthcareapis",
    "version": "2024-03-31",
    "description": "Azure healthcareapis service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "description": "Get the metadata of a service instance.",
        "operationId": "Services_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the service instance.",
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir",
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": false
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of the resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of the resource."
                    },
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicies": {
                      "description": "The access policies of the service instance.",
                      "type": "array",
                      "items": {
                        "description": "An access policy entry.",
                        "properties": {
                          "objectId": {
                            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                            "type": "string",
                            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                          }
                        },
                        "required": [
                          "objectId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "objectId"
                      ]
                    },
                    "cosmosDbConfiguration": {
                      "description": "The settings for the Cosmos DB database backing the service.",
                      "type": "object",
                      "properties": {
                        "offerThroughput": {
                          "type": "integer",
                          "description": "The provisioned throughput for the backing database.",
                          "readOnly": false,
                          "minimum": 400
                        },
                        "keyVaultKeyUri": {
                          "type": "string",
                          "description": "The URI of the customer-managed key for the backing database.",
                          "readOnly": false
                        },
                        "crossTenantCmkApplicationId": {
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                          "readOnly": false
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "The authentication configuration for the service instance.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "The settings for the CORS configuration of the service instance.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "The settings for the export operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "The azure container registry settings used for convert data operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the ACR login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "The settings for the import operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "description": "Create or update the metadata of a service instance.",
        "operationId": "Services_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "serviceDescription",
            "in": "body",
            "description": "The service instance metadata.",
            "required": true,
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir",
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": false
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of the resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of the resource."
                    },
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicies": {
                      "description": "The access policies of the service instance.",
                      "type": "array",
                      "items": {
                        "description": "An access policy entry.",
                        "properties": {
                          "objectId": {
                            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                            "type": "string",
                            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                          }
                        },
                        "required": [
                          "objectId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "objectId"
                      ]
                    },
                    "cosmosDbConfiguration": {
                      "description": "The settings for the Cosmos DB database backing the service.",
                      "type": "object",
                      "properties": {
                        "offerThroughput": {
                          "type": "integer",
                          "description": "The provisioned throughput for the backing database.",
                          "readOnly": false,
                          "minimum": 400
                        },
                        "keyVaultKeyUri": {
                          "type": "string",
                          "description": "The URI of the customer-managed key for the backing database.",
                          "readOnly": false
                        },
                        "crossTenantCmkApplicationId": {
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                          "readOnly": false
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "The authentication configuration for the service instance.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "The settings for the CORS configuration of the service instance.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "The settings for the export operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "The azure container registry settings used for convert data operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the ACR login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "The settings for the import operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is being updated; the operation will complete asynchronously.",
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir",
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": false
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of the resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of the resource."
                    },
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicies": {
                      "description": "The access policies of the service instance.",
                      "type": "array",
                      "items": {
                        "description": "An access policy entry.",
                        "properties": {
                          "objectId": {
                            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                            "type": "string",
                            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                          }
                        },
                        "required": [
                          "objectId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "objectId"
                      ]
                    },
                    "cosmosDbConfiguration": {
                      "description": "The settings for the Cosmos DB database backing the service.",
                      "type": "object",
                      "properties": {
                        "offerThroughput": {
                          "type": "integer",
                          "description": "The provisioned throughput for the backing database.",
                          "readOnly": false,
                          "minimum": 400
                        },
                        "keyVaultKeyUri": {
                          "type": "string",
                          "description": "The URI of the customer-managed key for the backing database.",
                          "readOnly": false
                        },
                        "crossTenantCmkApplicationId": {
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                          "readOnly": false
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "The authentication configuration for the service instance.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "The settings for the CORS configuration of the service instance.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "The settings for the export operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "The azure container registry settings used for convert data operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the ACR login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "The settings for the import operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and a new resource was created; the operation will complete asynchronously.",
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir",
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": false
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of the resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of the resource."
                    },
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicies": {
                      "description": "The access policies of the service instance.",
                      "type": "array",
                      "items": {
                        "description": "An access policy entry.",
                        "properties": {
                          "objectId": {
                            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                            "type": "string",
                            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                          }
                        },
                        "required": [
                          "objectId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "objectId"
                      ]
                    },
                    "cosmosDbConfiguration": {
                      "description": "The settings for the Cosmos DB database backing the service.",
                      "type": "object",
                      "properties": {
                        "offerThroughput": {
                          "type": "integer",
                          "description": "The provisioned throughput for the backing database.",
                          "readOnly": false,
                          "minimum": 400
                        },
                        "keyVaultKeyUri": {
                          "type": "string",
                          "description": "The URI of the customer-managed key for the backing database.",
                          "readOnly": false
                        },
                        "crossTenantCmkApplicationId": {
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                          "readOnly": false
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "The authentication configuration for the service instance.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "The settings for the CORS configuration of the service instance.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "The settings for the export operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "The azure container registry settings used for convert data operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the ACR login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "The settings for the import operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Resource"
        ],
        "description": "Update the metadata of a service instance.",
        "operationId": "Services_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "servicePatchDescription",
            "in": "body",
            "description": "The service instance metadata and security metadata.",
            "required": true,
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Instance tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties for updating a service instance.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tags for the resource were updated successfully.",
            "schema": {
              "description": "The description of the service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir",
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": false
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of the resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of the resource."
                    },
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicies": {
                      "description": "The access policies of the service instance.",
                      "type": "array",
                      "items": {
                        "description": "An access policy entry.",
                        "properties": {
                          "objectId": {
                            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                            "type": "string",
                            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                          }
                        },
                        "required": [
                          "objectId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "objectId"
                      ]
                    },
                    "cosmosDbConfiguration": {
                      "description": "The settings for the Cosmos DB database backing the service.",
                      "type": "object",
                      "properties": {
                        "offerThroughput": {
                          "type": "integer",
                          "description": "The provisioned throughput for the backing database.",
                          "readOnly": false,
                          "minimum": 400
                        },
                        "keyVaultKeyUri": {
                          "type": "string",
                          "description": "The URI of the customer-managed key for the backing database.",
                          "readOnly": false
                        },
                        "crossTenantCmkApplicationId": {
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                          "readOnly": false
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "The authentication configuration for the service instance.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "The settings for the CORS configuration of the service instance.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "The settings for the export operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "The azure container registry settings used for convert data operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the ACR login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "The settings for the import operation of the service instance.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "description": "Delete a service instance.",
        "operationId": "Services_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the service instances in a subscription.",
        "operationId": "Services_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the subscription.",
            "schema": {
              "description": "A list of service description objects with a next link.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of service description objects.",
                  "type": "string"
                },
                "value": {
                  "description": "A list of service description objects.",
                  "type": "array",
                  "items": {
                    "description": "The description of the service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "kind": {
                        "readOnly": false,
                        "type": "string",
                        "description": "The kind of the service.",
                        "enum": [
                          "fhir",
                          "fhir-Stu3",
                          "fhir-R4"
                        ],
                        "x-ms-enum": {
                          "name": "kind",
                          "modelAsString": false
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "identity": {
                        "type": "object",
                        "description": "Setting indicating whether the service has a managed identity associated with it.",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of the resource."
                          },
                          "type": {
                            "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": false,
                        "description": "The common properties of a service.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "accessPolicies": {
                            "description": "The access policies of the service instance.",
                            "type": "array",
                            "items": {
                              "description": "An access policy entry.",
                              "properties": {
                                "objectId": {
                                  "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                                  "type": "string",
                                  "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                                }
                              },
                              "required": [
                                "objectId"
                              ]
                            },
                            "x-ms-identifiers": [
                              "objectId"
                            ]
                          },
                          "cosmosDbConfiguration": {
                            "description": "The settings for the Cosmos DB database backing the service.",
                            "type": "object",
                            "properties": {
                              "offerThroughput": {
                                "type": "integer",
                                "description": "The provisioned throughput for the backing database.",
                                "readOnly": false,
                                "minimum": 400
                              },
                              "keyVaultKeyUri": {
                                "type": "string",
                                "description": "The URI of the customer-managed key for the backing database.",
                                "readOnly": false
                              },
                              "crossTenantCmkApplicationId": {
                                "type": "string",
                                "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                                "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                                "readOnly": false
                              }
                            }
                          },
                          "authenticationConfiguration": {
                            "description": "The authentication configuration for the service instance.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "type": "string",
                                "description": "The authority url for the service",
                                "readOnly": false
                              },
                              "audience": {
                                "type": "string",
                                "description": "The audience url for the service",
                                "readOnly": false
                              },
                              "smartProxyEnabled": {
                                "type": "boolean",
                                "description": "If the SMART on FHIR proxy is enabled",
                                "readOnly": false
                              }
                            }
                          },
                          "corsConfiguration": {
                            "description": "The settings for the CORS configuration of the service instance.",
                            "type": "object",
                            "properties": {
                              "origins": {
                                "type": "array",
                                "description": "The origins to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "An origin for CORS.",
                                  "type": "string",
                                  "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                                }
                              },
                              "headers": {
                                "type": "array",
                                "description": "The headers to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A header for CORS.",
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "description": "The methods to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A method for CORS.",
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "type": "integer",
                                "description": "The max age to be allowed via CORS.",
                                "readOnly": false,
                                "minimum": 0,
                                "maximum": 99999
                              },
                              "allowCredentials": {
                                "type": "boolean",
                                "description": "If credentials are allowed via CORS.",
                                "readOnly": false
                              }
                            }
                          },
                          "exportConfiguration": {
                            "description": "The settings for the export operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "storageAccountName": {
                                "type": "string",
                                "description": "The name of the default export storage account.",
                                "readOnly": false
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "acrConfiguration": {
                            "description": "The azure container registry settings used for convert data operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "loginServers": {
                                "type": "array",
                                "description": "The list of the ACR login servers.",
                                "readOnly": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ociArtifacts": {
                                "type": "array",
                                "description": "The list of Open Container Initiative (OCI) artifacts.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Open Container Initiative (OCI) artifact.",
                                  "type": "object",
                                  "properties": {
                                    "loginServer": {
                                      "description": "The Azure Container Registry login server.",
                                      "type": "string"
                                    },
                                    "imageName": {
                                      "description": "The artifact name.",
                                      "type": "string"
                                    },
                                    "digest": {
                                      "description": "The artifact digest.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "importConfiguration": {
                            "description": "The settings for the import operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "integrationDataStore": {
                                "type": "string",
                                "description": "The name of the default integration storage account.",
                                "readOnly": false
                              },
                              "initialImportMode": {
                                "type": "boolean",
                                "description": "If the FHIR service is in InitialImportMode.",
                                "readOnly": false
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "If the import operation is enabled.",
                                "readOnly": false
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the service instances in a resource group.",
        "operationId": "Services_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the resource group.",
            "schema": {
              "description": "A list of service description objects with a next link.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of service description objects.",
                  "type": "string"
                },
                "value": {
                  "description": "A list of service description objects.",
                  "type": "array",
                  "items": {
                    "description": "The description of the service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "kind": {
                        "readOnly": false,
                        "type": "string",
                        "description": "The kind of the service.",
                        "enum": [
                          "fhir",
                          "fhir-Stu3",
                          "fhir-R4"
                        ],
                        "x-ms-enum": {
                          "name": "kind",
                          "modelAsString": false
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "identity": {
                        "type": "object",
                        "description": "Setting indicating whether the service has a managed identity associated with it.",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of the resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of the resource."
                          },
                          "type": {
                            "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": false,
                        "description": "The common properties of a service.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "accessPolicies": {
                            "description": "The access policies of the service instance.",
                            "type": "array",
                            "items": {
                              "description": "An access policy entry.",
                              "properties": {
                                "objectId": {
                                  "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                                  "type": "string",
                                  "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                                }
                              },
                              "required": [
                                "objectId"
                              ]
                            },
                            "x-ms-identifiers": [
                              "objectId"
                            ]
                          },
                          "cosmosDbConfiguration": {
                            "description": "The settings for the Cosmos DB database backing the service.",
                            "type": "object",
                            "properties": {
                              "offerThroughput": {
                                "type": "integer",
                                "description": "The provisioned throughput for the backing database.",
                                "readOnly": false,
                                "minimum": 400
                              },
                              "keyVaultKeyUri": {
                                "type": "string",
                                "description": "The URI of the customer-managed key for the backing database.",
                                "readOnly": false
                              },
                              "crossTenantCmkApplicationId": {
                                "type": "string",
                                "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                                "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                                "readOnly": false
                              }
                            }
                          },
                          "authenticationConfiguration": {
                            "description": "The authentication configuration for the service instance.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "type": "string",
                                "description": "The authority url for the service",
                                "readOnly": false
                              },
                              "audience": {
                                "type": "string",
                                "description": "The audience url for the service",
                                "readOnly": false
                              },
                              "smartProxyEnabled": {
                                "type": "boolean",
                                "description": "If the SMART on FHIR proxy is enabled",
                                "readOnly": false
                              }
                            }
                          },
                          "corsConfiguration": {
                            "description": "The settings for the CORS configuration of the service instance.",
                            "type": "object",
                            "properties": {
                              "origins": {
                                "type": "array",
                                "description": "The origins to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "An origin for CORS.",
                                  "type": "string",
                                  "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                                }
                              },
                              "headers": {
                                "type": "array",
                                "description": "The headers to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A header for CORS.",
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "description": "The methods to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A method for CORS.",
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "type": "integer",
                                "description": "The max age to be allowed via CORS.",
                                "readOnly": false,
                                "minimum": 0,
                                "maximum": 99999
                              },
                              "allowCredentials": {
                                "type": "boolean",
                                "description": "If credentials are allowed via CORS.",
                                "readOnly": false
                              }
                            }
                          },
                          "exportConfiguration": {
                            "description": "The settings for the export operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "storageAccountName": {
                                "type": "string",
                                "description": "The name of the default export storage account.",
                                "readOnly": false
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "acrConfiguration": {
                            "description": "The azure container registry settings used for convert data operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "loginServers": {
                                "type": "array",
                                "description": "The list of the ACR login servers.",
                                "readOnly": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ociArtifacts": {
                                "type": "array",
                                "description": "The list of Open Container Initiative (OCI) artifacts.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Open Container Initiative (OCI) artifact.",
                                  "type": "object",
                                  "properties": {
                                    "loginServer": {
                                      "description": "The Azure Container Registry login server.",
                                      "type": "string"
                                    },
                                    "imageName": {
                                      "description": "The artifact name.",
                                      "type": "string"
                                    },
                                    "digest": {
                                      "description": "The artifact digest.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "importConfiguration": {
                            "description": "The settings for the import operation of the service instance.",
                            "type": "object",
                            "properties": {
                              "integrationDataStore": {
                                "type": "string",
                                "description": "The name of the default integration storage account.",
                                "readOnly": false
                              },
                              "initialImportMode": {
                                "type": "boolean",
                                "description": "If the FHIR service is in InitialImportMode.",
                                "readOnly": false
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "If the import operation is enabled.",
                                "readOnly": false
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability": {
      "post": {
        "tags": [
          "Proxy"
        ],
        "description": "Check if a service instance name is available.",
        "operationId": "Services_CheckNameAvailability",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "checkNameAvailabilityInputs",
            "in": "body",
            "description": "Set the name parameter in the CheckNameAvailabilityParameters structure to the name of the service instance to check.",
            "required": true,
            "schema": {
              "description": "Input values.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the service instance to check.",
                  "type": "string"
                },
                "type": {
                  "description": "The fully qualified resource type which includes provider namespace.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the service name is available. If the name is not available, the body contains the reason.",
            "schema": {
              "description": "The properties indicating whether a given service name is available.",
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "description": "The value which indicates whether the provided name is available.",
                  "type": "boolean",
                  "readOnly": true
                },
                "reason": {
                  "description": "The reason for unavailability.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "ServiceNameUnavailabilityReason",
                    "modelAsString": false
                  }
                },
                "message": {
                  "description": "The detailed reason message.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByService",
        "description": "Lists all private endpoint connections for a service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The ARM identifier for Private Endpoint"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "List of private endpoint connection associated with the specified storage account"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - The private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByService",
        "description": "Gets the private link resources that need to be created for a service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The private link resource Private link DNS zone name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "A list of private link resources"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "description": "Gets a private link resource that need to be created for a service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The private link resource Private link DNS zone name."
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the workspaces in the subscription.",
            "schema": {
              "description": "Collection of workspace object with a next link",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page.",
                  "type": "string"
                },
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Workspace resource.",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "description": "Workspaces resource specific properties.",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the workspaces in the resource group.",
            "schema": {
              "description": "Collection of workspace object with a next link",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page.",
                  "type": "string"
                },
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Workspace resource.",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "description": "Workspaces resource specific properties.",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified workspace.",
        "operationId": "Workspaces_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace resource with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspace",
            "description": "The parameters for creating or updating a healthcare workspace.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "description": "Patch workspace details.",
        "operationId": "Workspaces_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspacePatchResource",
            "description": "The parameters for updating a specified workspace.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workspace patch properties",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "Workspace resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "description": "Workspaces resource specific properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a specified workspace.",
        "operationId": "Workspaces_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices": {
      "get": {
        "tags": [
          "DicomServices"
        ],
        "description": "Lists all DICOM Services for the given workspace",
        "operationId": "DicomServices_ListByWorkspace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "List of DICOM Services.",
            "schema": {
              "description": "The collection of Dicom Services.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of Dicom Services.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of Dicom Services.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The description of Dicom Service",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "identity": {
                        "type": "object",
                        "description": "Setting indicating whether the service has a managed identity associated with it.",
                        "properties": {
                          "type": {
                            "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                            "type": "string",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceManagedIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "userAssignedIdentities": {
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "description": "The principal ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "The client ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Dicom Service configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "authenticationConfiguration": {
                            "description": "Dicom Service authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "type": "string",
                                "description": "The authority url for the service",
                                "readOnly": true
                              },
                              "audiences": {
                                "type": "array",
                                "description": "The audiences for the service",
                                "items": {
                                  "description": "The audience for Dicom Service",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "corsConfiguration": {
                            "description": "Dicom Service Cors configuration.",
                            "type": "object",
                            "properties": {
                              "origins": {
                                "type": "array",
                                "description": "The origins to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "An origin for CORS.",
                                  "type": "string",
                                  "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                                }
                              },
                              "headers": {
                                "type": "array",
                                "description": "The headers to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A header for CORS.",
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "description": "The methods to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A method for CORS.",
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The max age to be allowed via CORS.",
                                "readOnly": false,
                                "minimum": 0,
                                "maximum": 99999
                              },
                              "allowCredentials": {
                                "type": "boolean",
                                "description": "If credentials are allowed via CORS.",
                                "readOnly": false
                              }
                            }
                          },
                          "serviceUrl": {
                            "description": "The url of the Dicom Services.",
                            "type": "string",
                            "readOnly": true
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "eventState": {
                            "description": "DICOM Service event support status.",
                            "type": "string",
                            "enum": [
                              "Disabled",
                              "Enabled",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceEventState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "encryption": {
                            "description": "The encryption settings of the DICOM service",
                            "type": "object",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "type": "object",
                                "description": "The encryption settings for the customer-managed key",
                                "readOnly": false,
                                "properties": {
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "The URL of the key to use for encryption",
                                    "readOnly": false
                                  }
                                }
                              }
                            }
                          },
                          "storageConfiguration": {
                            "description": "The configuration of external storage account",
                            "type": "object",
                            "properties": {
                              "storageResourceId": {
                                "type": "string",
                                "description": "The resource id of connected storage account.",
                                "readOnly": false
                              },
                              "fileSystemName": {
                                "type": "string",
                                "description": "The filesystem name of connected storage account.",
                                "readOnly": false
                              }
                            }
                          },
                          "enableDataPartitions": {
                            "description": "If data partitions is enabled or not.",
                            "type": "boolean"
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices/{dicomServiceName}": {
      "get": {
        "tags": [
          "DicomServices"
        ],
        "description": "Gets the properties of the specified DICOM Service.",
        "operationId": "DicomServices_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of DICOM Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DicomServices"
        ],
        "description": "Creates or updates a DICOM Service resource with the specified parameters.",
        "operationId": "DicomServices_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of DICOM Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomservice",
            "description": "The parameters for creating or updating a Dicom Service resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DicomServices"
        ],
        "description": "Patch DICOM Service details.",
        "operationId": "DicomServices_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of DICOM Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomservicePatchResource",
            "description": "The parameters for updating a Dicom Service.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Dicom Service patch properties",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Dicom Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Dicom Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Dicom Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": true
                        },
                        "audiences": {
                          "type": "array",
                          "description": "The audiences for the service",
                          "items": {
                            "description": "The audience for Dicom Service",
                            "type": "string",
                            "readOnly": true
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Dicom Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "serviceUrl": {
                      "description": "The url of the Dicom Services.",
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "DICOM Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption settings of the DICOM service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    },
                    "storageConfiguration": {
                      "description": "The configuration of external storage account",
                      "type": "object",
                      "properties": {
                        "storageResourceId": {
                          "type": "string",
                          "description": "The resource id of connected storage account.",
                          "readOnly": false
                        },
                        "fileSystemName": {
                          "type": "string",
                          "description": "The filesystem name of connected storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "enableDataPartitions": {
                      "description": "If data partitions is enabled or not.",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DicomServices"
        ],
        "description": "Deletes a DICOM Service.",
        "operationId": "DicomServices_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of DICOM Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Lists all IoT Connectors for the given workspace",
        "operationId": "IotConnectors_ListByWorkspace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "List of IoT Connectors.",
            "schema": {
              "description": "A collection of IoT Connectors.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of IoT Connectors.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of IoT Connectors.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "IoT Connector definition.",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "identity": {
                        "type": "object",
                        "description": "Setting indicating whether the service has a managed identity associated with it.",
                        "properties": {
                          "type": {
                            "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                            "type": "string",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceManagedIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "userAssignedIdentities": {
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "description": "The principal ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "The client ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "IoT Connector configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "ingestionEndpointConfiguration": {
                            "description": "Source configuration.",
                            "type": "object",
                            "properties": {
                              "eventHubName": {
                                "type": "string",
                                "description": "Event Hub name to connect to."
                              },
                              "consumerGroup": {
                                "type": "string",
                                "description": "Consumer group of the event hub to connected to."
                              },
                              "fullyQualifiedEventHubNamespace": {
                                "type": "string",
                                "description": "Fully qualified namespace of the Event Hub to connect to."
                              }
                            }
                          },
                          "deviceMapping": {
                            "description": "Device Mappings.",
                            "type": "object",
                            "properties": {
                              "content": {
                                "description": "The mapping.",
                                "type": "object"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Gets the properties of the specified IoT Connector.",
        "operationId": "IotConnectors_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Creates or updates an IoT Connector resource with the specified parameters.",
        "operationId": "IotConnectors_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnector",
            "description": "The parameters for creating or updating an IoT Connectors resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Patch an IoT Connector.",
        "operationId": "IotConnectors_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorPatchResource",
            "description": "The parameters for updating an IoT Connector.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Iot Connector patch properties",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "IoT Connector definition.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "IoT Connector configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "ingestionEndpointConfiguration": {
                      "description": "Source configuration.",
                      "type": "object",
                      "properties": {
                        "eventHubName": {
                          "type": "string",
                          "description": "Event Hub name to connect to."
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Consumer group of the event hub to connected to."
                        },
                        "fullyQualifiedEventHubNamespace": {
                          "type": "string",
                          "description": "Fully qualified namespace of the Event Hub to connect to."
                        }
                      }
                    },
                    "deviceMapping": {
                      "description": "Device Mappings.",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Deletes an IoT Connector.",
        "operationId": "IotConnectors_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Lists all FHIR destinations for the given IoT Connector",
        "operationId": "FhirDestinations_ListByIotConnector",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "List of IoT Connector FHIR destinations.",
            "schema": {
              "description": "A collection of IoT Connector FHIR destinations.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of IoT FHIR destinations.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of IoT Connector FHIR destinations.",
                  "type": "array",
                  "items": {
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "description": "IoT Connector FHIR destination definition.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "properties": {
                        "description": "IoT FHIR Destination settings.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "resourceIdentityResolutionType",
                          "fhirServiceResourceId",
                          "fhirMapping"
                        ],
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "x-ms-client-flatten": true,
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "resourceIdentityResolutionType": {
                            "description": "Determines how resource identity is resolved on the destination.",
                            "enum": [
                              "Create",
                              "Lookup"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotIdentityResolutionType",
                              "modelAsString": true
                            }
                          },
                          "fhirServiceResourceId": {
                            "type": "string",
                            "description": "Fully qualified resource id of the FHIR service to connect to."
                          },
                          "fhirMapping": {
                            "description": "FHIR Mappings",
                            "type": "object",
                            "properties": {
                              "content": {
                                "description": "The mapping.",
                                "type": "object"
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations/{fhirDestinationName}": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Gets the properties of the specified Iot Connector FHIR destination.",
        "operationId": "IotConnectorFhirDestination_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector FHIR destination resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "IoT Connector FHIR destination definition.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "description": "IoT FHIR Destination settings.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "resourceIdentityResolutionType",
                    "fhirServiceResourceId",
                    "fhirMapping"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceIdentityResolutionType": {
                      "description": "Determines how resource identity is resolved on the destination.",
                      "enum": [
                        "Create",
                        "Lookup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotIdentityResolutionType",
                        "modelAsString": true
                      }
                    },
                    "fhirServiceResourceId": {
                      "type": "string",
                      "description": "Fully qualified resource id of the FHIR service to connect to."
                    },
                    "fhirMapping": {
                      "description": "FHIR Mappings",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Creates or updates an IoT Connector FHIR destination resource with the specified parameters.",
        "operationId": "IotConnectorFhirDestination_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector FHIR destination resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotFhirDestination",
            "description": "The parameters for creating or updating an IoT Connector FHIR destination resource.",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "IoT Connector FHIR destination definition.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "description": "IoT FHIR Destination settings.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "resourceIdentityResolutionType",
                    "fhirServiceResourceId",
                    "fhirMapping"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceIdentityResolutionType": {
                      "description": "Determines how resource identity is resolved on the destination.",
                      "enum": [
                        "Create",
                        "Lookup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotIdentityResolutionType",
                        "modelAsString": true
                      }
                    },
                    "fhirServiceResourceId": {
                      "type": "string",
                      "description": "Fully qualified resource id of the FHIR service to connect to."
                    },
                    "fhirMapping": {
                      "description": "FHIR Mappings",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "schema": {
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "IoT Connector FHIR destination definition.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "description": "IoT FHIR Destination settings.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "resourceIdentityResolutionType",
                    "fhirServiceResourceId",
                    "fhirMapping"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceIdentityResolutionType": {
                      "description": "Determines how resource identity is resolved on the destination.",
                      "enum": [
                        "Create",
                        "Lookup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotIdentityResolutionType",
                        "modelAsString": true
                      }
                    },
                    "fhirServiceResourceId": {
                      "type": "string",
                      "description": "Fully qualified resource id of the FHIR service to connect to."
                    },
                    "fhirMapping": {
                      "description": "FHIR Mappings",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "schema": {
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "IoT Connector FHIR destination definition.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "description": "IoT FHIR Destination settings.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "resourceIdentityResolutionType",
                    "fhirServiceResourceId",
                    "fhirMapping"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceIdentityResolutionType": {
                      "description": "Determines how resource identity is resolved on the destination.",
                      "enum": [
                        "Create",
                        "Lookup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotIdentityResolutionType",
                        "modelAsString": true
                      }
                    },
                    "fhirServiceResourceId": {
                      "type": "string",
                      "description": "Fully qualified resource id of the FHIR service to connect to."
                    },
                    "fhirMapping": {
                      "description": "FHIR Mappings",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "required": [
                "properties"
              ],
              "type": "object",
              "description": "IoT Connector FHIR destination definition.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "properties": {
                  "description": "IoT FHIR Destination settings.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "resourceIdentityResolutionType",
                    "fhirServiceResourceId",
                    "fhirMapping"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceIdentityResolutionType": {
                      "description": "Determines how resource identity is resolved on the destination.",
                      "enum": [
                        "Create",
                        "Lookup"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotIdentityResolutionType",
                        "modelAsString": true
                      }
                    },
                    "fhirServiceResourceId": {
                      "type": "string",
                      "description": "Fully qualified resource id of the FHIR service to connect to."
                    },
                    "fhirMapping": {
                      "description": "FHIR Mappings",
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The mapping.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Deletes an IoT Connector FHIR destination.",
        "operationId": "IotConnectorFhirDestination_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of IoT Connector FHIR destination resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices": {
      "get": {
        "tags": [
          "FhirServices"
        ],
        "description": "Lists all FHIR Services for the given workspace",
        "operationId": "FhirServices_ListByWorkspace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "List of FHIR Services.",
            "schema": {
              "description": "A collection of Fhir services.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of Fhir Services.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of Fhir Services.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The description of Fhir Service",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "etag": {
                        "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "identity": {
                        "type": "object",
                        "description": "Setting indicating whether the service has a managed identity associated with it.",
                        "properties": {
                          "type": {
                            "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                            "type": "string",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceManagedIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "userAssignedIdentities": {
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "description": "The principal ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "The client ID of the assigned identity.",
                                  "format": "uuid",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "kind": {
                        "readOnly": false,
                        "type": "string",
                        "description": "The kind of the service.",
                        "enum": [
                          "fhir-Stu3",
                          "fhir-R4"
                        ],
                        "x-ms-enum": {
                          "name": "fhirServiceKind",
                          "modelAsString": true
                        }
                      },
                      "properties": {
                        "description": "Fhir Service configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "enum": [
                              "Deleting",
                              "Succeeded",
                              "Creating",
                              "Accepted",
                              "Verifying",
                              "Updating",
                              "Failed",
                              "Canceled",
                              "Deprovisioned",
                              "Moving",
                              "Suspended",
                              "Warned",
                              "SystemMaintenance"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            }
                          },
                          "acrConfiguration": {
                            "description": "Fhir Service Azure container registry configuration.",
                            "type": "object",
                            "properties": {
                              "loginServers": {
                                "type": "array",
                                "description": "The list of the Azure container registry login servers.",
                                "readOnly": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ociArtifacts": {
                                "type": "array",
                                "description": "The list of Open Container Initiative (OCI) artifacts.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Open Container Initiative (OCI) artifact.",
                                  "type": "object",
                                  "properties": {
                                    "loginServer": {
                                      "description": "The Azure Container Registry login server.",
                                      "type": "string"
                                    },
                                    "imageName": {
                                      "description": "The artifact name.",
                                      "type": "string"
                                    },
                                    "digest": {
                                      "description": "The artifact digest.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "authenticationConfiguration": {
                            "description": "Fhir Service authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "type": "string",
                                "description": "The authority url for the service",
                                "readOnly": false
                              },
                              "audience": {
                                "type": "string",
                                "description": "The audience url for the service",
                                "readOnly": false
                              },
                              "smartProxyEnabled": {
                                "type": "boolean",
                                "description": "If the SMART on FHIR proxy is enabled",
                                "readOnly": false
                              },
                              "smartIdentityProviders": {
                                "type": "array",
                                "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                                  "type": "object",
                                  "properties": {
                                    "authority": {
                                      "description": "The identity provider token authority also known as the token issuing authority.",
                                      "type": "string"
                                    },
                                    "applications": {
                                      "type": "array",
                                      "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                      "readOnly": false,
                                      "items": {
                                        "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                        "type": "object",
                                        "properties": {
                                          "clientId": {
                                            "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                            "type": "string"
                                          },
                                          "audience": {
                                            "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                            "type": "string"
                                          },
                                          "allowedDataActions": {
                                            "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                              "enum": [
                                                "Read"
                                              ],
                                              "x-ms-enum": {
                                                "name": "SmartDataActions",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "corsConfiguration": {
                            "description": "Fhir Service Cors configuration.",
                            "type": "object",
                            "properties": {
                              "origins": {
                                "type": "array",
                                "description": "The origins to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "An origin for CORS.",
                                  "type": "string",
                                  "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                                }
                              },
                              "headers": {
                                "type": "array",
                                "description": "The headers to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A header for CORS.",
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "description": "The methods to be allowed via CORS.",
                                "readOnly": false,
                                "items": {
                                  "description": "A method for CORS.",
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The max age to be allowed via CORS.",
                                "readOnly": false,
                                "minimum": 0,
                                "maximum": 99999
                              },
                              "allowCredentials": {
                                "type": "boolean",
                                "description": "If credentials are allowed via CORS.",
                                "readOnly": false
                              }
                            }
                          },
                          "exportConfiguration": {
                            "description": "Fhir Service export configuration.",
                            "type": "object",
                            "properties": {
                              "storageAccountName": {
                                "type": "string",
                                "description": "The name of the default export storage account.",
                                "readOnly": false
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "The list of private endpoint connections that are set up for this resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "eventState": {
                            "description": "Fhir Service event support status.",
                            "type": "string",
                            "enum": [
                              "Disabled",
                              "Enabled",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceEventState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "resourceVersionPolicyConfiguration": {
                            "description": "Determines tracking of history for resources.",
                            "type": "object",
                            "properties": {
                              "default": {
                                "description": "The default value for tracking history across all resources.",
                                "type": "string",
                                "enum": [
                                  "no-version",
                                  "versioned",
                                  "versioned-update"
                                ],
                                "x-ms-enum": {
                                  "name": "FhirResourceVersionPolicy",
                                  "modelAsString": true
                                }
                              },
                              "resourceTypeOverrides": {
                                "description": "A list of FHIR Resources and their version policy overrides.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "Controls how resources are versioned on the FHIR service",
                                  "enum": [
                                    "no-version",
                                    "versioned",
                                    "versioned-update"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FhirResourceVersionPolicy",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          },
                          "importConfiguration": {
                            "description": "Fhir Service import configuration.",
                            "type": "object",
                            "properties": {
                              "integrationDataStore": {
                                "type": "string",
                                "description": "The name of the default integration storage account.",
                                "readOnly": false
                              },
                              "initialImportMode": {
                                "type": "boolean",
                                "description": "If the FHIR service is in InitialImportMode.",
                                "readOnly": false
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "If the import operation is enabled.",
                                "readOnly": false
                              }
                            }
                          },
                          "implementationGuidesConfiguration": {
                            "description": "Implementation Guides configuration.",
                            "type": "object",
                            "properties": {
                              "usCoreMissingData": {
                                "type": "boolean",
                                "description": "If US Core Missing Data requirement is enabled.",
                                "readOnly": false
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption settings of the FHIR service",
                            "type": "object",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "type": "object",
                                "description": "The encryption settings for the customer-managed key",
                                "readOnly": false,
                                "properties": {
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "The URL of the key to use for encryption",
                                    "readOnly": false
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices/{fhirServiceName}": {
      "get": {
        "tags": [
          "FhirServices"
        ],
        "description": "Gets the properties of the specified FHIR Service.",
        "operationId": "FhirServices_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of FHIR Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FhirServices"
        ],
        "description": "Creates or updates a FHIR Service resource with the specified parameters.",
        "operationId": "FhirServices_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of FHIR Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirservice",
            "description": "The parameters for creating or updating a Fhir Service resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FhirServices"
        ],
        "description": "Patch FHIR Service details.",
        "operationId": "FhirServices_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of FHIR Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirservicePatchResource",
            "description": "The parameters for updating a Fhir Service.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "FhirService patch properties",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "schema": {
              "type": "object",
              "description": "The description of Fhir Service",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "identity": {
                  "type": "object",
                  "description": "Setting indicating whether the service has a managed identity associated with it.",
                  "properties": {
                    "type": {
                      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "userAssignedIdentities": {
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "The client ID of the assigned identity.",
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service.",
                  "enum": [
                    "fhir-Stu3",
                    "fhir-R4"
                  ],
                  "x-ms-enum": {
                    "name": "fhirServiceKind",
                    "modelAsString": true
                  }
                },
                "properties": {
                  "description": "Fhir Service configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "enum": [
                        "Deleting",
                        "Succeeded",
                        "Creating",
                        "Accepted",
                        "Verifying",
                        "Updating",
                        "Failed",
                        "Canceled",
                        "Deprovisioned",
                        "Moving",
                        "Suspended",
                        "Warned",
                        "SystemMaintenance"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      }
                    },
                    "acrConfiguration": {
                      "description": "Fhir Service Azure container registry configuration.",
                      "type": "object",
                      "properties": {
                        "loginServers": {
                          "type": "array",
                          "description": "The list of the Azure container registry login servers.",
                          "readOnly": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "ociArtifacts": {
                          "type": "array",
                          "description": "The list of Open Container Initiative (OCI) artifacts.",
                          "readOnly": false,
                          "items": {
                            "description": "An Open Container Initiative (OCI) artifact.",
                            "type": "object",
                            "properties": {
                              "loginServer": {
                                "description": "The Azure Container Registry login server.",
                                "type": "string"
                              },
                              "imageName": {
                                "description": "The artifact name.",
                                "type": "string"
                              },
                              "digest": {
                                "description": "The artifact digest.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "authenticationConfiguration": {
                      "description": "Fhir Service authentication configuration.",
                      "type": "object",
                      "properties": {
                        "authority": {
                          "type": "string",
                          "description": "The authority url for the service",
                          "readOnly": false
                        },
                        "audience": {
                          "type": "string",
                          "description": "The audience url for the service",
                          "readOnly": false
                        },
                        "smartProxyEnabled": {
                          "type": "boolean",
                          "description": "If the SMART on FHIR proxy is enabled",
                          "readOnly": false
                        },
                        "smartIdentityProviders": {
                          "type": "array",
                          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                          "readOnly": false,
                          "items": {
                            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                            "type": "object",
                            "properties": {
                              "authority": {
                                "description": "The identity provider token authority also known as the token issuing authority.",
                                "type": "string"
                              },
                              "applications": {
                                "type": "array",
                                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                                "readOnly": false,
                                "items": {
                                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                  "type": "object",
                                  "properties": {
                                    "clientId": {
                                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "audience": {
                                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                      "type": "string"
                                    },
                                    "allowedDataActions": {
                                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                        "enum": [
                                          "Read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SmartDataActions",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "corsConfiguration": {
                      "description": "Fhir Service Cors configuration.",
                      "type": "object",
                      "properties": {
                        "origins": {
                          "type": "array",
                          "description": "The origins to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "An origin for CORS.",
                            "type": "string",
                            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "description": "The headers to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A header for CORS.",
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "description": "The methods to be allowed via CORS.",
                          "readOnly": false,
                          "items": {
                            "description": "A method for CORS.",
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max age to be allowed via CORS.",
                          "readOnly": false,
                          "minimum": 0,
                          "maximum": 99999
                        },
                        "allowCredentials": {
                          "type": "boolean",
                          "description": "If credentials are allowed via CORS.",
                          "readOnly": false
                        }
                      }
                    },
                    "exportConfiguration": {
                      "description": "Fhir Service export configuration.",
                      "type": "object",
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The name of the default export storage account.",
                          "readOnly": false
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "The list of private endpoint connections that are set up for this resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "eventState": {
                      "description": "Fhir Service event support status.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceEventState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "resourceVersionPolicyConfiguration": {
                      "description": "Determines tracking of history for resources.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The default value for tracking history across all resources.",
                          "type": "string",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        },
                        "resourceTypeOverrides": {
                          "description": "A list of FHIR Resources and their version policy overrides.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Controls how resources are versioned on the FHIR service",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ],
                            "x-ms-enum": {
                              "name": "FhirResourceVersionPolicy",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "importConfiguration": {
                      "description": "Fhir Service import configuration.",
                      "type": "object",
                      "properties": {
                        "integrationDataStore": {
                          "type": "string",
                          "description": "The name of the default integration storage account.",
                          "readOnly": false
                        },
                        "initialImportMode": {
                          "type": "boolean",
                          "description": "If the FHIR service is in InitialImportMode.",
                          "readOnly": false
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "If the import operation is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "implementationGuidesConfiguration": {
                      "description": "Implementation Guides configuration.",
                      "type": "object",
                      "properties": {
                        "usCoreMissingData": {
                          "type": "boolean",
                          "description": "If US Core Missing Data requirement is enabled.",
                          "readOnly": false
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption settings of the FHIR service",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "The encryption settings for the customer-managed key",
                          "readOnly": false,
                          "properties": {
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URL of the key to use for encryption",
                              "readOnly": false
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FhirServices"
        ],
        "description": "Deletes a FHIR Service.",
        "operationId": "FhirServices_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of FHIR Service resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_ListByWorkspace",
        "description": "Lists all private endpoint connections for a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The ARM identifier for Private Endpoint"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "List of private endpoint connection associated with the specified storage account"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "WorkspacePrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - The private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "WorkspacePrivateLinkResources_ListByWorkspace",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The private link resource Private link DNS zone name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "A list of private link resources"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "WorkspacePrivateLinkResources_Get",
        "description": "Gets a private link resource that need to be created for a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of workspace resource.",
            "x-ms-parameter-location": "method",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The private link resource Private link DNS zone name."
                    }
                  }
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HealthcareApis/operations": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Lists all of the available operations supported by Microsoft Healthcare resource provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Available operations of the service",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of available operation details",
                  "uniqueItems": false,
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "Service REST API operation.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the operation",
                        "type": "string",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "display": {
                        "description": "Display of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Service provider: Microsoft.HealthcareApis"
                          },
                          "resource": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Resource Type: Services"
                          },
                          "operation": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Name of the operation"
                          },
                          "description": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Friendly description for the operation,"
                          }
                        }
                      },
                      "origin": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Default value is 'user,system'."
                      },
                      "actionType": {
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        }
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Service specifications of the operation",
                            "type": "object",
                            "properties": {
                              "logSpecifications": {
                                "description": "Specifications of the Log for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Log for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the log",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the log",
                                      "type": "string"
                                    },
                                    "blobDuration": {
                                      "description": "Blob duration of the log",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "metricSpecifications": {
                                "description": "Specifications of the Metrics for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Metrics for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the metric",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the metric",
                                      "type": "string"
                                    },
                                    "displayDescription": {
                                      "description": "Localized friendly description of the metric",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit that makes sense for the metric",
                                      "type": "string"
                                    },
                                    "category": {
                                      "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                                      "type": "string"
                                    },
                                    "aggregationType": {
                                      "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                                      "type": "string"
                                    },
                                    "supportedAggregationTypes": {
                                      "description": "Supported aggregation types",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "supportedTimeGrainTypes": {
                                      "description": "Supported time grain types",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fillGapWithZero": {
                                      "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                                      "type": "boolean"
                                    },
                                    "metricFilterPattern": {
                                      "type": "string",
                                      "description": "Pattern for the filter of the metric."
                                    },
                                    "dimensions": {
                                      "description": "Dimensions of the metric",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "description": "Specifications of the Dimension of metrics",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the dimension",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "Localized friendly display name of the dimension",
                                            "type": "string"
                                          },
                                          "toBeExportedForShoebox": {
                                            "description": "Whether this dimension should be included for the Shoebox export scenario",
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "isInternal": {
                                      "type": "boolean",
                                      "description": "Whether the metric is internal."
                                    },
                                    "sourceMdmAccount": {
                                      "type": "string",
                                      "description": "The source MDM account."
                                    },
                                    "sourceMdmNamespace": {
                                      "type": "string",
                                      "description": "The source MDM namespace."
                                    },
                                    "enableRegionalMdmAccount": {
                                      "type": "boolean",
                                      "description": "Whether regional MDM account enabled."
                                    },
                                    "resourceIdDimensionNameOverride": {
                                      "type": "string",
                                      "description": "The resource Id dimension name override."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/operationresults/{operationResultId}": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Get the operation result for a long running operation.",
        "operationId": "OperationResults_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The location of the operation.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationResultId",
            "in": "path",
            "description": "The ID of the operation result to get.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the operation result.",
            "schema": {
              "description": "The properties indicating the operation result of an operation on a service.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the operation returned.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the operation result.",
                  "readOnly": true,
                  "type": "string"
                },
                "status": {
                  "description": "The status of the operation being performed.",
                  "enum": [
                    "Canceled",
                    "Succeeded",
                    "Failed",
                    "Requested",
                    "Running"
                  ],
                  "readOnly": true,
                  "type": "string",
                  "x-ms-enum": {
                    "name": "OperationResultStatus",
                    "modelAsString": true
                  }
                },
                "startTime": {
                  "description": "The time that the operation was started.",
                  "readOnly": true,
                  "type": "string"
                },
                "endTime": {
                  "description": "The time that the operation finished.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "Additional properties of the operation result.",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ServicesProperties": {
      "description": "The properties of a service instance.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned",
            "Moving",
            "Suspended",
            "Warned",
            "SystemMaintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "accessPolicies": {
          "description": "The access policies of the service instance.",
          "type": "array",
          "items": {
            "description": "An access policy entry.",
            "properties": {
              "objectId": {
                "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                "type": "string",
                "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
              }
            },
            "required": [
              "objectId"
            ]
          },
          "x-ms-identifiers": [
            "objectId"
          ]
        },
        "cosmosDbConfiguration": {
          "description": "The settings for the Cosmos DB database backing the service.",
          "type": "object",
          "properties": {
            "offerThroughput": {
              "type": "integer",
              "description": "The provisioned throughput for the backing database.",
              "readOnly": false,
              "minimum": 400
            },
            "keyVaultKeyUri": {
              "type": "string",
              "description": "The URI of the customer-managed key for the backing database.",
              "readOnly": false
            },
            "crossTenantCmkApplicationId": {
              "type": "string",
              "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
              "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
              "readOnly": false
            }
          }
        },
        "authenticationConfiguration": {
          "description": "The authentication configuration for the service instance.",
          "type": "object",
          "properties": {
            "authority": {
              "type": "string",
              "description": "The authority url for the service",
              "readOnly": false
            },
            "audience": {
              "type": "string",
              "description": "The audience url for the service",
              "readOnly": false
            },
            "smartProxyEnabled": {
              "type": "boolean",
              "description": "If the SMART on FHIR proxy is enabled",
              "readOnly": false
            }
          }
        },
        "corsConfiguration": {
          "description": "The settings for the CORS configuration of the service instance.",
          "type": "object",
          "properties": {
            "origins": {
              "type": "array",
              "description": "The origins to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "An origin for CORS.",
                "type": "string",
                "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
              }
            },
            "headers": {
              "type": "array",
              "description": "The headers to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A header for CORS.",
                "type": "string"
              }
            },
            "methods": {
              "type": "array",
              "description": "The methods to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A method for CORS.",
                "type": "string"
              }
            },
            "maxAge": {
              "type": "integer",
              "description": "The max age to be allowed via CORS.",
              "readOnly": false,
              "minimum": 0,
              "maximum": 99999
            },
            "allowCredentials": {
              "type": "boolean",
              "description": "If credentials are allowed via CORS.",
              "readOnly": false
            }
          }
        },
        "exportConfiguration": {
          "description": "The settings for the export operation of the service instance.",
          "type": "object",
          "properties": {
            "storageAccountName": {
              "type": "string",
              "description": "The name of the default export storage account.",
              "readOnly": false
            }
          }
        },
        "privateEndpointConnections": {
          "description": "The list of private endpoint connections that are set up for this resource.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        },
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "acrConfiguration": {
          "description": "The azure container registry settings used for convert data operation of the service instance.",
          "type": "object",
          "properties": {
            "loginServers": {
              "type": "array",
              "description": "The list of the ACR login servers.",
              "readOnly": false,
              "items": {
                "type": "string"
              }
            },
            "ociArtifacts": {
              "type": "array",
              "description": "The list of Open Container Initiative (OCI) artifacts.",
              "readOnly": false,
              "items": {
                "description": "An Open Container Initiative (OCI) artifact.",
                "type": "object",
                "properties": {
                  "loginServer": {
                    "description": "The Azure Container Registry login server.",
                    "type": "string"
                  },
                  "imageName": {
                    "description": "The artifact name.",
                    "type": "string"
                  },
                  "digest": {
                    "description": "The artifact digest.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "importConfiguration": {
          "description": "The settings for the import operation of the service instance.",
          "type": "object",
          "properties": {
            "integrationDataStore": {
              "type": "string",
              "description": "The name of the default integration storage account.",
              "readOnly": false
            },
            "initialImportMode": {
              "type": "boolean",
              "description": "If the FHIR service is in InitialImportMode.",
              "readOnly": false
            },
            "enabled": {
              "type": "boolean",
              "description": "If the import operation is enabled.",
              "readOnly": false
            }
          }
        }
      }
    },
    "ServiceAccessPoliciesInfo": {
      "description": "The access policies of the service instance.",
      "type": "array",
      "items": {
        "description": "An access policy entry.",
        "properties": {
          "objectId": {
            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
            "type": "string",
            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
          }
        },
        "required": [
          "objectId"
        ]
      },
      "x-ms-identifiers": [
        "objectId"
      ]
    },
    "ServiceAccessPolicyEntry": {
      "description": "An access policy entry.",
      "properties": {
        "objectId": {
          "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
          "type": "string",
          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
        }
      },
      "required": [
        "objectId"
      ]
    },
    "ServiceCosmosDbConfigurationInfo": {
      "description": "The settings for the Cosmos DB database backing the service.",
      "type": "object",
      "properties": {
        "offerThroughput": {
          "type": "integer",
          "description": "The provisioned throughput for the backing database.",
          "readOnly": false,
          "minimum": 400
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the customer-managed key for the backing database.",
          "readOnly": false
        },
        "crossTenantCmkApplicationId": {
          "type": "string",
          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
          "readOnly": false
        }
      }
    },
    "ServiceAuthenticationConfigurationInfo": {
      "description": "Authentication configuration information",
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service",
          "readOnly": false
        },
        "audience": {
          "type": "string",
          "description": "The audience url for the service",
          "readOnly": false
        },
        "smartProxyEnabled": {
          "type": "boolean",
          "description": "If the SMART on FHIR proxy is enabled",
          "readOnly": false
        }
      }
    },
    "ServiceCorsConfigurationInfo": {
      "description": "The settings for the CORS configuration of the service instance.",
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "An origin for CORS.",
            "type": "string",
            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A header for CORS.",
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A method for CORS.",
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "description": "The max age to be allowed via CORS.",
          "readOnly": false,
          "minimum": 0,
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS.",
          "readOnly": false
        }
      }
    },
    "ServiceExportConfigurationInfo": {
      "description": "Export operation configuration information",
      "type": "object",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The name of the default export storage account.",
          "readOnly": false
        }
      }
    },
    "ServiceImportConfigurationInfo": {
      "description": "Import operation configuration information",
      "type": "object",
      "properties": {
        "integrationDataStore": {
          "type": "string",
          "description": "The name of the default integration storage account.",
          "readOnly": false
        },
        "initialImportMode": {
          "type": "boolean",
          "description": "If the FHIR service is in InitialImportMode.",
          "readOnly": false
        },
        "enabled": {
          "type": "boolean",
          "description": "If the import operation is enabled.",
          "readOnly": false
        }
      }
    },
    "ServiceAcrConfigurationInfo": {
      "description": "Azure container registry configuration information",
      "type": "object",
      "properties": {
        "loginServers": {
          "type": "array",
          "description": "The list of the ACR login servers.",
          "readOnly": false,
          "items": {
            "type": "string"
          }
        },
        "ociArtifacts": {
          "type": "array",
          "description": "The list of Open Container Initiative (OCI) artifacts.",
          "readOnly": false,
          "items": {
            "description": "An Open Container Initiative (OCI) artifact.",
            "type": "object",
            "properties": {
              "loginServer": {
                "description": "The Azure Container Registry login server.",
                "type": "string"
              },
              "imageName": {
                "description": "The artifact name.",
                "type": "string"
              },
              "digest": {
                "description": "The artifact digest.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceCorsConfigurationOriginEntry": {
      "description": "An origin for CORS.",
      "type": "string",
      "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
    },
    "ServiceCorsConfigurationHeaderEntry": {
      "description": "A header for CORS.",
      "type": "string"
    },
    "ServiceCorsConfigurationMethodEntry": {
      "description": "A method for CORS.",
      "type": "string"
    },
    "ServicesDescription": {
      "description": "The description of the service.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "kind": {
          "readOnly": false,
          "type": "string",
          "description": "The kind of the service.",
          "enum": [
            "fhir",
            "fhir-Stu3",
            "fhir-R4"
          ],
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": false
          }
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of the resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of the resource."
            },
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": false,
          "description": "The common properties of a service.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "accessPolicies": {
              "description": "The access policies of the service instance.",
              "type": "array",
              "items": {
                "description": "An access policy entry.",
                "properties": {
                  "objectId": {
                    "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                    "type": "string",
                    "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                  }
                },
                "required": [
                  "objectId"
                ]
              },
              "x-ms-identifiers": [
                "objectId"
              ]
            },
            "cosmosDbConfiguration": {
              "description": "The settings for the Cosmos DB database backing the service.",
              "type": "object",
              "properties": {
                "offerThroughput": {
                  "type": "integer",
                  "description": "The provisioned throughput for the backing database.",
                  "readOnly": false,
                  "minimum": 400
                },
                "keyVaultKeyUri": {
                  "type": "string",
                  "description": "The URI of the customer-managed key for the backing database.",
                  "readOnly": false
                },
                "crossTenantCmkApplicationId": {
                  "type": "string",
                  "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                  "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                  "readOnly": false
                }
              }
            },
            "authenticationConfiguration": {
              "description": "The authentication configuration for the service instance.",
              "type": "object",
              "properties": {
                "authority": {
                  "type": "string",
                  "description": "The authority url for the service",
                  "readOnly": false
                },
                "audience": {
                  "type": "string",
                  "description": "The audience url for the service",
                  "readOnly": false
                },
                "smartProxyEnabled": {
                  "type": "boolean",
                  "description": "If the SMART on FHIR proxy is enabled",
                  "readOnly": false
                }
              }
            },
            "corsConfiguration": {
              "description": "The settings for the CORS configuration of the service instance.",
              "type": "object",
              "properties": {
                "origins": {
                  "type": "array",
                  "description": "The origins to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "An origin for CORS.",
                    "type": "string",
                    "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                  }
                },
                "headers": {
                  "type": "array",
                  "description": "The headers to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A header for CORS.",
                    "type": "string"
                  }
                },
                "methods": {
                  "type": "array",
                  "description": "The methods to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A method for CORS.",
                    "type": "string"
                  }
                },
                "maxAge": {
                  "type": "integer",
                  "description": "The max age to be allowed via CORS.",
                  "readOnly": false,
                  "minimum": 0,
                  "maximum": 99999
                },
                "allowCredentials": {
                  "type": "boolean",
                  "description": "If credentials are allowed via CORS.",
                  "readOnly": false
                }
              }
            },
            "exportConfiguration": {
              "description": "The settings for the export operation of the service instance.",
              "type": "object",
              "properties": {
                "storageAccountName": {
                  "type": "string",
                  "description": "The name of the default export storage account.",
                  "readOnly": false
                }
              }
            },
            "privateEndpointConnections": {
              "description": "The list of private endpoint connections that are set up for this resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            },
            "publicNetworkAccess": {
              "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            },
            "acrConfiguration": {
              "description": "The azure container registry settings used for convert data operation of the service instance.",
              "type": "object",
              "properties": {
                "loginServers": {
                  "type": "array",
                  "description": "The list of the ACR login servers.",
                  "readOnly": false,
                  "items": {
                    "type": "string"
                  }
                },
                "ociArtifacts": {
                  "type": "array",
                  "description": "The list of Open Container Initiative (OCI) artifacts.",
                  "readOnly": false,
                  "items": {
                    "description": "An Open Container Initiative (OCI) artifact.",
                    "type": "object",
                    "properties": {
                      "loginServer": {
                        "description": "The Azure Container Registry login server.",
                        "type": "string"
                      },
                      "imageName": {
                        "description": "The artifact name.",
                        "type": "string"
                      },
                      "digest": {
                        "description": "The artifact digest.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "importConfiguration": {
              "description": "The settings for the import operation of the service instance.",
              "type": "object",
              "properties": {
                "integrationDataStore": {
                  "type": "string",
                  "description": "The name of the default integration storage account.",
                  "readOnly": false
                },
                "initialImportMode": {
                  "type": "boolean",
                  "description": "If the FHIR service is in InitialImportMode.",
                  "readOnly": false
                },
                "enabled": {
                  "type": "boolean",
                  "description": "If the import operation is enabled.",
                  "readOnly": false
                }
              }
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "ServicesPatchDescription": {
      "description": "The description of the service.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Instance tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties for updating a service instance.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "ServicesResource": {
      "description": "The common properties of a service.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "kind": {
          "readOnly": false,
          "type": "string",
          "description": "The kind of the service.",
          "enum": [
            "fhir",
            "fhir-Stu3",
            "fhir-R4"
          ],
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": false
          }
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of the resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of the resource."
            },
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "kind"
      ]
    },
    "ServicesDescriptionListResult": {
      "description": "A list of service description objects with a next link.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of service description objects.",
          "type": "string"
        },
        "value": {
          "description": "A list of service description objects.",
          "type": "array",
          "items": {
            "description": "The description of the service.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "kind": {
                "readOnly": false,
                "type": "string",
                "description": "The kind of the service.",
                "enum": [
                  "fhir",
                  "fhir-Stu3",
                  "fhir-R4"
                ],
                "x-ms-enum": {
                  "name": "kind",
                  "modelAsString": false
                }
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The resource tags."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "identity": {
                "type": "object",
                "description": "Setting indicating whether the service has a managed identity associated with it.",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of the resource identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID of the resource."
                  },
                  "type": {
                    "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                    "type": "string",
                    "enum": [
                      "SystemAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": false,
                "description": "The common properties of a service.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "accessPolicies": {
                    "description": "The access policies of the service instance.",
                    "type": "array",
                    "items": {
                      "description": "An access policy entry.",
                      "properties": {
                        "objectId": {
                          "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
                          "type": "string",
                          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
                        }
                      },
                      "required": [
                        "objectId"
                      ]
                    },
                    "x-ms-identifiers": [
                      "objectId"
                    ]
                  },
                  "cosmosDbConfiguration": {
                    "description": "The settings for the Cosmos DB database backing the service.",
                    "type": "object",
                    "properties": {
                      "offerThroughput": {
                        "type": "integer",
                        "description": "The provisioned throughput for the backing database.",
                        "readOnly": false,
                        "minimum": 400
                      },
                      "keyVaultKeyUri": {
                        "type": "string",
                        "description": "The URI of the customer-managed key for the backing database.",
                        "readOnly": false
                      },
                      "crossTenantCmkApplicationId": {
                        "type": "string",
                        "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
                        "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
                        "readOnly": false
                      }
                    }
                  },
                  "authenticationConfiguration": {
                    "description": "The authentication configuration for the service instance.",
                    "type": "object",
                    "properties": {
                      "authority": {
                        "type": "string",
                        "description": "The authority url for the service",
                        "readOnly": false
                      },
                      "audience": {
                        "type": "string",
                        "description": "The audience url for the service",
                        "readOnly": false
                      },
                      "smartProxyEnabled": {
                        "type": "boolean",
                        "description": "If the SMART on FHIR proxy is enabled",
                        "readOnly": false
                      }
                    }
                  },
                  "corsConfiguration": {
                    "description": "The settings for the CORS configuration of the service instance.",
                    "type": "object",
                    "properties": {
                      "origins": {
                        "type": "array",
                        "description": "The origins to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "An origin for CORS.",
                          "type": "string",
                          "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "The headers to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A header for CORS.",
                          "type": "string"
                        }
                      },
                      "methods": {
                        "type": "array",
                        "description": "The methods to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A method for CORS.",
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "type": "integer",
                        "description": "The max age to be allowed via CORS.",
                        "readOnly": false,
                        "minimum": 0,
                        "maximum": 99999
                      },
                      "allowCredentials": {
                        "type": "boolean",
                        "description": "If credentials are allowed via CORS.",
                        "readOnly": false
                      }
                    }
                  },
                  "exportConfiguration": {
                    "description": "The settings for the export operation of the service instance.",
                    "type": "object",
                    "properties": {
                      "storageAccountName": {
                        "type": "string",
                        "description": "The name of the default export storage account.",
                        "readOnly": false
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "The list of private endpoint connections that are set up for this resource.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    }
                  },
                  "acrConfiguration": {
                    "description": "The azure container registry settings used for convert data operation of the service instance.",
                    "type": "object",
                    "properties": {
                      "loginServers": {
                        "type": "array",
                        "description": "The list of the ACR login servers.",
                        "readOnly": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "ociArtifacts": {
                        "type": "array",
                        "description": "The list of Open Container Initiative (OCI) artifacts.",
                        "readOnly": false,
                        "items": {
                          "description": "An Open Container Initiative (OCI) artifact.",
                          "type": "object",
                          "properties": {
                            "loginServer": {
                              "description": "The Azure Container Registry login server.",
                              "type": "string"
                            },
                            "imageName": {
                              "description": "The artifact name.",
                              "type": "string"
                            },
                            "digest": {
                              "description": "The artifact digest.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "importConfiguration": {
                    "description": "The settings for the import operation of the service instance.",
                    "type": "object",
                    "properties": {
                      "integrationDataStore": {
                        "type": "string",
                        "description": "The name of the default integration storage account.",
                        "readOnly": false
                      },
                      "initialImportMode": {
                        "type": "boolean",
                        "description": "If the FHIR service is in InitialImportMode.",
                        "readOnly": false
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "If the import operation is enabled.",
                        "readOnly": false
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ServicesPropertiesUpdateParameters": {
      "description": "The properties for updating a service instance.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "description": "Input values.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the service instance to check.",
          "type": "string"
        },
        "type": {
          "description": "The fully qualified resource type which includes provider namespace.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ServicesNameAvailabilityInfo": {
      "description": "The properties indicating whether a given service name is available.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "The value which indicates whether the provided name is available.",
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for unavailability.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ServiceNameUnavailabilityReason",
            "modelAsString": false
          }
        },
        "message": {
          "description": "The detailed reason message.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionDescription": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "The resource of private end point.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The ARM identifier for Private Endpoint"
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "A collection of information about the state of the connection between service consumer and provider.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateEndpointServiceConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "type": "string",
                  "description": "The reason for approval/rejection of the connection."
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                }
              }
            },
            "provisioningState": {
              "description": "The provisioning state of the private endpoint connection resource.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "PrivateEndpointConnectionProvisioningState",
                "modelAsString": true
              }
            }
          },
          "required": [
            "privateLinkServiceConnectionState"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateLinkResourceDescription": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "The private link resource required member names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The private link resource Private link DNS zone name."
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionListResultDescription": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        }
      },
      "description": "List of private endpoint connection associated with the specified storage account"
    },
    "PrivateLinkResourceListResultDescription": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "The private link resource required member names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The private link resource Private link DNS zone name."
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        }
      },
      "description": "A list of private link resources"
    },
    "Error": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error details",
          "type": "object",
          "properties": {
            "code": {
              "description": "The error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "The error message.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "The target of the particular error.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ErrorDetails": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error details",
          "type": "object",
          "properties": {
            "code": {
              "description": "The error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "The error message.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "The target of the particular error.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ErrorDetailsInternal": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the particular error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ListOperations": {
      "description": "Available operations of the service",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "Service REST API operation.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the operation",
                "type": "string",
                "readOnly": true
              },
              "isDataAction": {
                "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                "type": "boolean",
                "readOnly": true
              },
              "display": {
                "description": "Display of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Service provider: Microsoft.HealthcareApis"
                  },
                  "resource": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource Type: Services"
                  },
                  "operation": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Name of the operation"
                  },
                  "description": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Friendly description for the operation,"
                  }
                }
              },
              "origin": {
                "readOnly": true,
                "type": "string",
                "description": "Default value is 'user,system'."
              },
              "actionType": {
                "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Internal"
                ],
                "x-ms-enum": {
                  "name": "ActionType",
                  "modelAsString": true
                }
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Service specifications of the operation",
                    "type": "object",
                    "properties": {
                      "logSpecifications": {
                        "description": "Specifications of the Log for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Log for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the log",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the log",
                              "type": "string"
                            },
                            "blobDuration": {
                              "description": "Blob duration of the log",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "metricSpecifications": {
                        "description": "Specifications of the Metrics for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Metrics for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the metric",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the metric",
                              "type": "string"
                            },
                            "displayDescription": {
                              "description": "Localized friendly description of the metric",
                              "type": "string"
                            },
                            "unit": {
                              "description": "Unit that makes sense for the metric",
                              "type": "string"
                            },
                            "category": {
                              "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                              "type": "string"
                            },
                            "aggregationType": {
                              "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                              "type": "string"
                            },
                            "supportedAggregationTypes": {
                              "description": "Supported aggregation types",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "supportedTimeGrainTypes": {
                              "description": "Supported time grain types",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "fillGapWithZero": {
                              "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                              "type": "boolean"
                            },
                            "metricFilterPattern": {
                              "type": "string",
                              "description": "Pattern for the filter of the metric."
                            },
                            "dimensions": {
                              "description": "Dimensions of the metric",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Specifications of the Dimension of metrics",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the dimension",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Localized friendly display name of the dimension",
                                    "type": "string"
                                  },
                                  "toBeExportedForShoebox": {
                                    "description": "Whether this dimension should be included for the Shoebox export scenario",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "isInternal": {
                              "type": "boolean",
                              "description": "Whether the metric is internal."
                            },
                            "sourceMdmAccount": {
                              "type": "string",
                              "description": "The source MDM account."
                            },
                            "sourceMdmNamespace": {
                              "type": "string",
                              "description": "The source MDM namespace."
                            },
                            "enableRegionalMdmAccount": {
                              "type": "boolean",
                              "description": "Whether regional MDM account enabled."
                            },
                            "resourceIdDimensionNameOverride": {
                              "type": "string",
                              "description": "The resource Id dimension name override."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "OperationDetail": {
      "description": "Service REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Display of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "readOnly": true,
              "type": "string",
              "description": "Service provider: Microsoft.HealthcareApis"
            },
            "resource": {
              "readOnly": true,
              "type": "string",
              "description": "Resource Type: Services"
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "Name of the operation"
            },
            "description": {
              "readOnly": true,
              "type": "string",
              "description": "Friendly description for the operation,"
            }
          }
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "description": "Default value is 'user,system'."
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Service specifications of the operation",
              "type": "object",
              "properties": {
                "logSpecifications": {
                  "description": "Specifications of the Log for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Log for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the log",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the log",
                        "type": "string"
                      },
                      "blobDuration": {
                        "description": "Blob duration of the log",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "metricSpecifications": {
                  "description": "Specifications of the Metrics for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Metrics for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the metric",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the metric",
                        "type": "string"
                      },
                      "displayDescription": {
                        "description": "Localized friendly description of the metric",
                        "type": "string"
                      },
                      "unit": {
                        "description": "Unit that makes sense for the metric",
                        "type": "string"
                      },
                      "category": {
                        "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                        "type": "string"
                      },
                      "aggregationType": {
                        "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                        "type": "string"
                      },
                      "supportedAggregationTypes": {
                        "description": "Supported aggregation types",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "supportedTimeGrainTypes": {
                        "description": "Supported time grain types",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fillGapWithZero": {
                        "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                        "type": "boolean"
                      },
                      "metricFilterPattern": {
                        "type": "string",
                        "description": "Pattern for the filter of the metric."
                      },
                      "dimensions": {
                        "description": "Dimensions of the metric",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Dimension of metrics",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the dimension",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the dimension",
                              "type": "string"
                            },
                            "toBeExportedForShoebox": {
                              "description": "Whether this dimension should be included for the Shoebox export scenario",
                              "type": "boolean"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "isInternal": {
                        "type": "boolean",
                        "description": "Whether the metric is internal."
                      },
                      "sourceMdmAccount": {
                        "type": "string",
                        "description": "The source MDM account."
                      },
                      "sourceMdmNamespace": {
                        "type": "string",
                        "description": "The source MDM namespace."
                      },
                      "enableRegionalMdmAccount": {
                        "type": "boolean",
                        "description": "Whether regional MDM account enabled."
                      },
                      "resourceIdDimensionNameOverride": {
                        "type": "string",
                        "description": "The resource Id dimension name override."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "Service provider: Microsoft.HealthcareApis"
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Type: Services"
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the operation"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Friendly description for the operation,"
        }
      }
    },
    "OperationResultsDescription": {
      "description": "The properties indicating the operation result of an operation on a service.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the operation returned.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the operation result.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the operation being performed.",
          "enum": [
            "Canceled",
            "Succeeded",
            "Failed",
            "Requested",
            "Running"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "OperationResultStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "description": "The time that the operation was started.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "The time that the operation finished.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Additional properties of the operation result.",
          "type": "object"
        }
      }
    },
    "OperationProperties": {
      "description": "Extra Operation properties",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "description": "Service specifications of the operation",
          "type": "object",
          "properties": {
            "logSpecifications": {
              "description": "Specifications of the Log for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Log for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the log",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the log",
                    "type": "string"
                  },
                  "blobDuration": {
                    "description": "Blob duration of the log",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "metricSpecifications": {
              "description": "Specifications of the Metrics for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Metrics for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the metric",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the metric",
                    "type": "string"
                  },
                  "displayDescription": {
                    "description": "Localized friendly description of the metric",
                    "type": "string"
                  },
                  "unit": {
                    "description": "Unit that makes sense for the metric",
                    "type": "string"
                  },
                  "category": {
                    "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                    "type": "string"
                  },
                  "aggregationType": {
                    "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                    "type": "string"
                  },
                  "supportedAggregationTypes": {
                    "description": "Supported aggregation types",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "supportedTimeGrainTypes": {
                    "description": "Supported time grain types",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fillGapWithZero": {
                    "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                    "type": "boolean"
                  },
                  "metricFilterPattern": {
                    "type": "string",
                    "description": "Pattern for the filter of the metric."
                  },
                  "dimensions": {
                    "description": "Dimensions of the metric",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Specifications of the Dimension of metrics",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the dimension",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Localized friendly display name of the dimension",
                          "type": "string"
                        },
                        "toBeExportedForShoebox": {
                          "description": "Whether this dimension should be included for the Shoebox export scenario",
                          "type": "boolean"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "isInternal": {
                    "type": "boolean",
                    "description": "Whether the metric is internal."
                  },
                  "sourceMdmAccount": {
                    "type": "string",
                    "description": "The source MDM account."
                  },
                  "sourceMdmNamespace": {
                    "type": "string",
                    "description": "The source MDM namespace."
                  },
                  "enableRegionalMdmAccount": {
                    "type": "boolean",
                    "description": "Whether regional MDM account enabled."
                  },
                  "resourceIdDimensionNameOverride": {
                    "type": "string",
                    "description": "The resource Id dimension name override."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Log for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the log",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the log",
                "type": "string"
              },
              "blobDuration": {
                "description": "Blob duration of the log",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "description": "Specifications of the Metrics for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Metrics for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the metric",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the metric",
                "type": "string"
              },
              "displayDescription": {
                "description": "Localized friendly description of the metric",
                "type": "string"
              },
              "unit": {
                "description": "Unit that makes sense for the metric",
                "type": "string"
              },
              "category": {
                "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                "type": "string"
              },
              "aggregationType": {
                "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                "type": "string"
              },
              "supportedAggregationTypes": {
                "description": "Supported aggregation types",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "supportedTimeGrainTypes": {
                "description": "Supported time grain types",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fillGapWithZero": {
                "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                "type": "boolean"
              },
              "metricFilterPattern": {
                "type": "string",
                "description": "Pattern for the filter of the metric."
              },
              "dimensions": {
                "description": "Dimensions of the metric",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Specifications of the Dimension of metrics",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the dimension",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Localized friendly display name of the dimension",
                      "type": "string"
                    },
                    "toBeExportedForShoebox": {
                      "description": "Whether this dimension should be included for the Shoebox export scenario",
                      "type": "boolean"
                    }
                  }
                },
                "x-ms-identifiers": []
              },
              "isInternal": {
                "type": "boolean",
                "description": "Whether the metric is internal."
              },
              "sourceMdmAccount": {
                "type": "string",
                "description": "The source MDM account."
              },
              "sourceMdmNamespace": {
                "type": "string",
                "description": "The source MDM namespace."
              },
              "enableRegionalMdmAccount": {
                "type": "boolean",
                "description": "Whether regional MDM account enabled."
              },
              "resourceIdDimensionNameOverride": {
                "type": "string",
                "description": "The resource Id dimension name override."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Specifications of the Metrics for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the metric",
          "type": "string"
        },
        "displayDescription": {
          "description": "Localized friendly description of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Unit that makes sense for the metric",
          "type": "string"
        },
        "category": {
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
          "type": "string"
        },
        "aggregationType": {
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "Supported aggregation types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "description": "Supported time grain types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
          "type": "boolean"
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "Pattern for the filter of the metric."
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Dimension of metrics",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the dimension",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the dimension",
                "type": "string"
              },
              "toBeExportedForShoebox": {
                "description": "Whether this dimension should be included for the Shoebox export scenario",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "isInternal": {
          "type": "boolean",
          "description": "Whether the metric is internal."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace."
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Whether regional MDM account enabled."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "The resource Id dimension name override."
        }
      }
    },
    "MetricDimension": {
      "description": "Specifications of the Dimension of metrics",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the dimension",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the dimension",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "Whether this dimension should be included for the Shoebox export scenario",
          "type": "boolean"
        }
      }
    },
    "ProvisioningState": {
      "description": "The provisioning state.",
      "enum": [
        "Deleting",
        "Succeeded",
        "Creating",
        "Accepted",
        "Verifying",
        "Updating",
        "Failed",
        "Canceled",
        "Deprovisioned",
        "Moving",
        "Suspended",
        "Warned",
        "SystemMaintenance"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
        "name": "provisioningState",
        "modelAsString": true
      }
    },
    "ResourceTags": {
      "type": "object",
      "description": "List of key value pairs that describe the resource. This will overwrite the existing tags.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "ResourceCore": {
      "type": "object",
      "description": "The common properties for any resource, tracked or proxy.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "LocationBasedResource": {
      "type": "object",
      "description": "The common properties for any location based resource, tracked or proxy.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "TaggedResource": {
      "type": "object",
      "description": "The common properties of tracked resources in the service.",
      "x-ms-azure-resource": true,
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "ServiceManagedIdentity": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User assigned identity properties",
      "properties": {
        "principalId": {
          "description": "The principal ID of the assigned identity.",
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "description": "The client ID of the assigned identity.",
          "format": "uuid",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserAssignedIdentities": {
      "title": "User-Assigned Identities",
      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "description": "User assigned identity properties",
        "properties": {
          "principalId": {
            "description": "The principal ID of the assigned identity.",
            "format": "uuid",
            "type": "string",
            "readOnly": true
          },
          "clientId": {
            "description": "The client ID of the assigned identity.",
            "format": "uuid",
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Workspace resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "x-ms-client-flatten": false,
          "type": "object",
          "description": "Workspaces resource specific properties.",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "privateEndpointConnections": {
              "description": "The list of private endpoint connections that are set up for this resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              },
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "readOnly": true
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "WorkspacePatchResource": {
      "type": "object",
      "description": "Workspace patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "WorkspaceList": {
      "description": "Collection of workspace object with a next link",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Workspace resource.",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "properties": {
                "x-ms-client-flatten": false,
                "type": "object",
                "description": "Workspaces resource specific properties.",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "The list of private endpoint connections that are set up for this resource.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    },
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "DicomService": {
      "type": "object",
      "description": "The description of Dicom Service",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Dicom Service configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "authenticationConfiguration": {
              "description": "Dicom Service authentication configuration.",
              "type": "object",
              "properties": {
                "authority": {
                  "type": "string",
                  "description": "The authority url for the service",
                  "readOnly": true
                },
                "audiences": {
                  "type": "array",
                  "description": "The audiences for the service",
                  "items": {
                    "description": "The audience for Dicom Service",
                    "type": "string",
                    "readOnly": true
                  },
                  "readOnly": true
                }
              }
            },
            "corsConfiguration": {
              "description": "Dicom Service Cors configuration.",
              "type": "object",
              "properties": {
                "origins": {
                  "type": "array",
                  "description": "The origins to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "An origin for CORS.",
                    "type": "string",
                    "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                  }
                },
                "headers": {
                  "type": "array",
                  "description": "The headers to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A header for CORS.",
                    "type": "string"
                  }
                },
                "methods": {
                  "type": "array",
                  "description": "The methods to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A method for CORS.",
                    "type": "string"
                  }
                },
                "maxAge": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The max age to be allowed via CORS.",
                  "readOnly": false,
                  "minimum": 0,
                  "maximum": 99999
                },
                "allowCredentials": {
                  "type": "boolean",
                  "description": "If credentials are allowed via CORS.",
                  "readOnly": false
                }
              }
            },
            "serviceUrl": {
              "description": "The url of the Dicom Services.",
              "type": "string",
              "readOnly": true
            },
            "privateEndpointConnections": {
              "description": "The list of private endpoint connections that are set up for this resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              },
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "readOnly": true
            },
            "eventState": {
              "description": "DICOM Service event support status.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ServiceEventState",
                "modelAsString": true
              },
              "readOnly": true
            },
            "encryption": {
              "description": "The encryption settings of the DICOM service",
              "type": "object",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "The encryption settings for the customer-managed key",
                  "readOnly": false,
                  "properties": {
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "The URL of the key to use for encryption",
                      "readOnly": false
                    }
                  }
                }
              }
            },
            "storageConfiguration": {
              "description": "The configuration of external storage account",
              "type": "object",
              "properties": {
                "storageResourceId": {
                  "type": "string",
                  "description": "The resource id of connected storage account.",
                  "readOnly": false
                },
                "fileSystemName": {
                  "type": "string",
                  "description": "The filesystem name of connected storage account.",
                  "readOnly": false
                }
              }
            },
            "enableDataPartitions": {
              "description": "If data partitions is enabled or not.",
              "type": "boolean"
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "DicomServicePatchResource": {
      "type": "object",
      "description": "Dicom Service patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "DicomServiceCollection": {
      "description": "The collection of Dicom Services.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Dicom Services.",
          "type": "string"
        },
        "value": {
          "description": "The list of Dicom Services.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The description of Dicom Service",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "identity": {
                "type": "object",
                "description": "Setting indicating whether the service has a managed identity associated with it.",
                "properties": {
                  "type": {
                    "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                    "type": "string",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceManagedIdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "userAssignedIdentities": {
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "description": "The principal ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "The client ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "Dicom Service configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "authenticationConfiguration": {
                    "description": "Dicom Service authentication configuration.",
                    "type": "object",
                    "properties": {
                      "authority": {
                        "type": "string",
                        "description": "The authority url for the service",
                        "readOnly": true
                      },
                      "audiences": {
                        "type": "array",
                        "description": "The audiences for the service",
                        "items": {
                          "description": "The audience for Dicom Service",
                          "type": "string",
                          "readOnly": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "corsConfiguration": {
                    "description": "Dicom Service Cors configuration.",
                    "type": "object",
                    "properties": {
                      "origins": {
                        "type": "array",
                        "description": "The origins to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "An origin for CORS.",
                          "type": "string",
                          "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "The headers to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A header for CORS.",
                          "type": "string"
                        }
                      },
                      "methods": {
                        "type": "array",
                        "description": "The methods to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A method for CORS.",
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The max age to be allowed via CORS.",
                        "readOnly": false,
                        "minimum": 0,
                        "maximum": 99999
                      },
                      "allowCredentials": {
                        "type": "boolean",
                        "description": "If credentials are allowed via CORS.",
                        "readOnly": false
                      }
                    }
                  },
                  "serviceUrl": {
                    "description": "The url of the Dicom Services.",
                    "type": "string",
                    "readOnly": true
                  },
                  "privateEndpointConnections": {
                    "description": "The list of private endpoint connections that are set up for this resource.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    },
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "eventState": {
                    "description": "DICOM Service event support status.",
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceEventState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "encryption": {
                    "description": "The encryption settings of the DICOM service",
                    "type": "object",
                    "properties": {
                      "customerManagedKeyEncryption": {
                        "type": "object",
                        "description": "The encryption settings for the customer-managed key",
                        "readOnly": false,
                        "properties": {
                          "keyEncryptionKeyUrl": {
                            "type": "string",
                            "description": "The URL of the key to use for encryption",
                            "readOnly": false
                          }
                        }
                      }
                    }
                  },
                  "storageConfiguration": {
                    "description": "The configuration of external storage account",
                    "type": "object",
                    "properties": {
                      "storageResourceId": {
                        "type": "string",
                        "description": "The resource id of connected storage account.",
                        "readOnly": false
                      },
                      "fileSystemName": {
                        "type": "string",
                        "description": "The filesystem name of connected storage account.",
                        "readOnly": false
                      }
                    }
                  },
                  "enableDataPartitions": {
                    "description": "If data partitions is enabled or not.",
                    "type": "boolean"
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "DicomServiceProperties": {
      "description": "Dicom Service properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned",
            "Moving",
            "Suspended",
            "Warned",
            "SystemMaintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "authenticationConfiguration": {
          "description": "Dicom Service authentication configuration.",
          "type": "object",
          "properties": {
            "authority": {
              "type": "string",
              "description": "The authority url for the service",
              "readOnly": true
            },
            "audiences": {
              "type": "array",
              "description": "The audiences for the service",
              "items": {
                "description": "The audience for Dicom Service",
                "type": "string",
                "readOnly": true
              },
              "readOnly": true
            }
          }
        },
        "corsConfiguration": {
          "description": "Dicom Service Cors configuration.",
          "type": "object",
          "properties": {
            "origins": {
              "type": "array",
              "description": "The origins to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "An origin for CORS.",
                "type": "string",
                "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
              }
            },
            "headers": {
              "type": "array",
              "description": "The headers to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A header for CORS.",
                "type": "string"
              }
            },
            "methods": {
              "type": "array",
              "description": "The methods to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A method for CORS.",
                "type": "string"
              }
            },
            "maxAge": {
              "type": "integer",
              "format": "int32",
              "description": "The max age to be allowed via CORS.",
              "readOnly": false,
              "minimum": 0,
              "maximum": 99999
            },
            "allowCredentials": {
              "type": "boolean",
              "description": "If credentials are allowed via CORS.",
              "readOnly": false
            }
          }
        },
        "serviceUrl": {
          "description": "The url of the Dicom Services.",
          "type": "string",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "description": "The list of private endpoint connections that are set up for this resource.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "readOnly": true
        },
        "eventState": {
          "description": "DICOM Service event support status.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServiceEventState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "encryption": {
          "description": "The encryption settings of the DICOM service",
          "type": "object",
          "properties": {
            "customerManagedKeyEncryption": {
              "type": "object",
              "description": "The encryption settings for the customer-managed key",
              "readOnly": false,
              "properties": {
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "The URL of the key to use for encryption",
                  "readOnly": false
                }
              }
            }
          }
        },
        "storageConfiguration": {
          "description": "The configuration of external storage account",
          "type": "object",
          "properties": {
            "storageResourceId": {
              "type": "string",
              "description": "The resource id of connected storage account.",
              "readOnly": false
            },
            "fileSystemName": {
              "type": "string",
              "description": "The filesystem name of connected storage account.",
              "readOnly": false
            }
          }
        },
        "enableDataPartitions": {
          "description": "If data partitions is enabled or not.",
          "type": "boolean"
        }
      }
    },
    "DicomServiceAuthenticationConfiguration": {
      "description": "Authentication configuration information",
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service",
          "readOnly": true
        },
        "audiences": {
          "type": "array",
          "description": "The audiences for the service",
          "items": {
            "description": "The audience for Dicom Service",
            "type": "string",
            "readOnly": true
          },
          "readOnly": true
        }
      }
    },
    "DicomAudience": {
      "description": "The audience for Dicom Service",
      "type": "string",
      "readOnly": true
    },
    "CorsConfiguration": {
      "description": "The settings for the CORS configuration of the service instance.",
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "An origin for CORS.",
            "type": "string",
            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A header for CORS.",
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A method for CORS.",
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "The max age to be allowed via CORS.",
          "readOnly": false,
          "minimum": 0,
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS.",
          "readOnly": false
        }
      }
    },
    "IotConnector": {
      "type": "object",
      "description": "IoT Connector definition.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "IoT Connector configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "ingestionEndpointConfiguration": {
              "description": "Source configuration.",
              "type": "object",
              "properties": {
                "eventHubName": {
                  "type": "string",
                  "description": "Event Hub name to connect to."
                },
                "consumerGroup": {
                  "type": "string",
                  "description": "Consumer group of the event hub to connected to."
                },
                "fullyQualifiedEventHubNamespace": {
                  "type": "string",
                  "description": "Fully qualified namespace of the Event Hub to connect to."
                }
              }
            },
            "deviceMapping": {
              "description": "Device Mappings.",
              "type": "object",
              "properties": {
                "content": {
                  "description": "The mapping.",
                  "type": "object"
                }
              }
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "IotConnectorPatchResource": {
      "type": "object",
      "description": "Iot Connector patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "IotConnectorCollection": {
      "description": "A collection of IoT Connectors.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of IoT Connectors.",
          "type": "string"
        },
        "value": {
          "description": "The list of IoT Connectors.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "IoT Connector definition.",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "identity": {
                "type": "object",
                "description": "Setting indicating whether the service has a managed identity associated with it.",
                "properties": {
                  "type": {
                    "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                    "type": "string",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceManagedIdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "userAssignedIdentities": {
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "description": "The principal ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "The client ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "IoT Connector configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "ingestionEndpointConfiguration": {
                    "description": "Source configuration.",
                    "type": "object",
                    "properties": {
                      "eventHubName": {
                        "type": "string",
                        "description": "Event Hub name to connect to."
                      },
                      "consumerGroup": {
                        "type": "string",
                        "description": "Consumer group of the event hub to connected to."
                      },
                      "fullyQualifiedEventHubNamespace": {
                        "type": "string",
                        "description": "Fully qualified namespace of the Event Hub to connect to."
                      }
                    }
                  },
                  "deviceMapping": {
                    "description": "Device Mappings.",
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The mapping.",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "IotConnectorProperties": {
      "description": "IoT Connector properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned",
            "Moving",
            "Suspended",
            "Warned",
            "SystemMaintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "ingestionEndpointConfiguration": {
          "description": "Source configuration.",
          "type": "object",
          "properties": {
            "eventHubName": {
              "type": "string",
              "description": "Event Hub name to connect to."
            },
            "consumerGroup": {
              "type": "string",
              "description": "Consumer group of the event hub to connected to."
            },
            "fullyQualifiedEventHubNamespace": {
              "type": "string",
              "description": "Fully qualified namespace of the Event Hub to connect to."
            }
          }
        },
        "deviceMapping": {
          "description": "Device Mappings.",
          "type": "object",
          "properties": {
            "content": {
              "description": "The mapping.",
              "type": "object"
            }
          }
        }
      }
    },
    "IotEventHubIngestionEndpointConfiguration": {
      "type": "object",
      "properties": {
        "eventHubName": {
          "type": "string",
          "description": "Event Hub name to connect to."
        },
        "consumerGroup": {
          "type": "string",
          "description": "Consumer group of the event hub to connected to."
        },
        "fullyQualifiedEventHubNamespace": {
          "type": "string",
          "description": "Fully qualified namespace of the Event Hub to connect to."
        }
      },
      "description": "Event Hub ingestion endpoint configuration"
    },
    "IotMappingProperties": {
      "description": "The mapping content.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The mapping.",
          "type": "object"
        }
      }
    },
    "IotIdentityResolutionType": {
      "description": "The type of IoT identity resolution to use with the destination.",
      "enum": [
        "Create",
        "Lookup"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IotIdentityResolutionType",
        "modelAsString": true
      }
    },
    "IotDestinationProperties": {
      "type": "object",
      "description": "Common IoT Connector destination properties.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "x-ms-client-flatten": true,
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned",
            "Moving",
            "Suspended",
            "Warned",
            "SystemMaintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "IotFhirDestinationProperties": {
      "required": [
        "resourceIdentityResolutionType",
        "fhirServiceResourceId",
        "fhirMapping"
      ],
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "description": "Common IoT Connector destination properties.",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "x-ms-client-flatten": true,
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "description": "IoT Connector destination properties for an Azure FHIR service.",
      "properties": {
        "resourceIdentityResolutionType": {
          "description": "Determines how resource identity is resolved on the destination.",
          "enum": [
            "Create",
            "Lookup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotIdentityResolutionType",
            "modelAsString": true
          }
        },
        "fhirServiceResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of the FHIR service to connect to."
        },
        "fhirMapping": {
          "description": "FHIR Mappings",
          "type": "object",
          "properties": {
            "content": {
              "description": "The mapping.",
              "type": "object"
            }
          }
        }
      }
    },
    "IotFhirDestination": {
      "required": [
        "properties"
      ],
      "type": "object",
      "description": "IoT Connector FHIR destination definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "description": "IoT FHIR Destination settings.",
          "x-ms-client-flatten": true,
          "required": [
            "resourceIdentityResolutionType",
            "fhirServiceResourceId",
            "fhirMapping"
          ],
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "x-ms-client-flatten": true,
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "resourceIdentityResolutionType": {
              "description": "Determines how resource identity is resolved on the destination.",
              "enum": [
                "Create",
                "Lookup"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IotIdentityResolutionType",
                "modelAsString": true
              }
            },
            "fhirServiceResourceId": {
              "type": "string",
              "description": "Fully qualified resource id of the FHIR service to connect to."
            },
            "fhirMapping": {
              "description": "FHIR Mappings",
              "type": "object",
              "properties": {
                "content": {
                  "description": "The mapping.",
                  "type": "object"
                }
              }
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "IotFhirDestinationCollection": {
      "description": "A collection of IoT Connector FHIR destinations.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of IoT FHIR destinations.",
          "type": "string"
        },
        "value": {
          "description": "The list of IoT Connector FHIR destinations.",
          "type": "array",
          "items": {
            "required": [
              "properties"
            ],
            "type": "object",
            "description": "IoT Connector FHIR destination definition.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "properties": {
                "description": "IoT FHIR Destination settings.",
                "x-ms-client-flatten": true,
                "required": [
                  "resourceIdentityResolutionType",
                  "fhirServiceResourceId",
                  "fhirMapping"
                ],
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "x-ms-client-flatten": true,
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "resourceIdentityResolutionType": {
                    "description": "Determines how resource identity is resolved on the destination.",
                    "enum": [
                      "Create",
                      "Lookup"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotIdentityResolutionType",
                      "modelAsString": true
                    }
                  },
                  "fhirServiceResourceId": {
                    "type": "string",
                    "description": "Fully qualified resource id of the FHIR service to connect to."
                  },
                  "fhirMapping": {
                    "description": "FHIR Mappings",
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The mapping.",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "FhirServiceCollection": {
      "description": "A collection of Fhir services.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Fhir Services.",
          "type": "string"
        },
        "value": {
          "description": "The list of Fhir Services.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The description of Fhir Service",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "etag": {
                "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                "type": "string"
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "identity": {
                "type": "object",
                "description": "Setting indicating whether the service has a managed identity associated with it.",
                "properties": {
                  "type": {
                    "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                    "type": "string",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceManagedIdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "userAssignedIdentities": {
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "description": "The principal ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "The client ID of the assigned identity.",
                          "format": "uuid",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "kind": {
                "readOnly": false,
                "type": "string",
                "description": "The kind of the service.",
                "enum": [
                  "fhir-Stu3",
                  "fhir-R4"
                ],
                "x-ms-enum": {
                  "name": "fhirServiceKind",
                  "modelAsString": true
                }
              },
              "properties": {
                "description": "Fhir Service configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned",
                      "Moving",
                      "Suspended",
                      "Warned",
                      "SystemMaintenance"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    }
                  },
                  "acrConfiguration": {
                    "description": "Fhir Service Azure container registry configuration.",
                    "type": "object",
                    "properties": {
                      "loginServers": {
                        "type": "array",
                        "description": "The list of the Azure container registry login servers.",
                        "readOnly": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "ociArtifacts": {
                        "type": "array",
                        "description": "The list of Open Container Initiative (OCI) artifacts.",
                        "readOnly": false,
                        "items": {
                          "description": "An Open Container Initiative (OCI) artifact.",
                          "type": "object",
                          "properties": {
                            "loginServer": {
                              "description": "The Azure Container Registry login server.",
                              "type": "string"
                            },
                            "imageName": {
                              "description": "The artifact name.",
                              "type": "string"
                            },
                            "digest": {
                              "description": "The artifact digest.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "authenticationConfiguration": {
                    "description": "Fhir Service authentication configuration.",
                    "type": "object",
                    "properties": {
                      "authority": {
                        "type": "string",
                        "description": "The authority url for the service",
                        "readOnly": false
                      },
                      "audience": {
                        "type": "string",
                        "description": "The audience url for the service",
                        "readOnly": false
                      },
                      "smartProxyEnabled": {
                        "type": "boolean",
                        "description": "If the SMART on FHIR proxy is enabled",
                        "readOnly": false
                      },
                      "smartIdentityProviders": {
                        "type": "array",
                        "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                        "readOnly": false,
                        "items": {
                          "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                          "type": "object",
                          "properties": {
                            "authority": {
                              "description": "The identity provider token authority also known as the token issuing authority.",
                              "type": "string"
                            },
                            "applications": {
                              "type": "array",
                              "description": "The array of identity provider applications for SMART on FHIR authentication.",
                              "readOnly": false,
                              "items": {
                                "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                                    "type": "string"
                                  },
                                  "audience": {
                                    "description": "The audience that will be used to validate bearer tokens against the given authority.",
                                    "type": "string"
                                  },
                                  "allowedDataActions": {
                                    "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                      "enum": [
                                        "Read"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SmartDataActions",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "corsConfiguration": {
                    "description": "Fhir Service Cors configuration.",
                    "type": "object",
                    "properties": {
                      "origins": {
                        "type": "array",
                        "description": "The origins to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "An origin for CORS.",
                          "type": "string",
                          "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "The headers to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A header for CORS.",
                          "type": "string"
                        }
                      },
                      "methods": {
                        "type": "array",
                        "description": "The methods to be allowed via CORS.",
                        "readOnly": false,
                        "items": {
                          "description": "A method for CORS.",
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The max age to be allowed via CORS.",
                        "readOnly": false,
                        "minimum": 0,
                        "maximum": 99999
                      },
                      "allowCredentials": {
                        "type": "boolean",
                        "description": "If credentials are allowed via CORS.",
                        "readOnly": false
                      }
                    }
                  },
                  "exportConfiguration": {
                    "description": "Fhir Service export configuration.",
                    "type": "object",
                    "properties": {
                      "storageAccountName": {
                        "type": "string",
                        "description": "The name of the default export storage account.",
                        "readOnly": false
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "The list of private endpoint connections that are set up for this resource.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    },
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "eventState": {
                    "description": "Fhir Service event support status.",
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceEventState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "resourceVersionPolicyConfiguration": {
                    "description": "Determines tracking of history for resources.",
                    "type": "object",
                    "properties": {
                      "default": {
                        "description": "The default value for tracking history across all resources.",
                        "type": "string",
                        "enum": [
                          "no-version",
                          "versioned",
                          "versioned-update"
                        ],
                        "x-ms-enum": {
                          "name": "FhirResourceVersionPolicy",
                          "modelAsString": true
                        }
                      },
                      "resourceTypeOverrides": {
                        "description": "A list of FHIR Resources and their version policy overrides.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Controls how resources are versioned on the FHIR service",
                          "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                          ],
                          "x-ms-enum": {
                            "name": "FhirResourceVersionPolicy",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "importConfiguration": {
                    "description": "Fhir Service import configuration.",
                    "type": "object",
                    "properties": {
                      "integrationDataStore": {
                        "type": "string",
                        "description": "The name of the default integration storage account.",
                        "readOnly": false
                      },
                      "initialImportMode": {
                        "type": "boolean",
                        "description": "If the FHIR service is in InitialImportMode.",
                        "readOnly": false
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "If the import operation is enabled.",
                        "readOnly": false
                      }
                    }
                  },
                  "implementationGuidesConfiguration": {
                    "description": "Implementation Guides configuration.",
                    "type": "object",
                    "properties": {
                      "usCoreMissingData": {
                        "type": "boolean",
                        "description": "If US Core Missing Data requirement is enabled.",
                        "readOnly": false
                      }
                    }
                  },
                  "encryption": {
                    "description": "The encryption settings of the FHIR service",
                    "type": "object",
                    "properties": {
                      "customerManagedKeyEncryption": {
                        "type": "object",
                        "description": "The encryption settings for the customer-managed key",
                        "readOnly": false,
                        "properties": {
                          "keyEncryptionKeyUrl": {
                            "type": "string",
                            "description": "The URL of the key to use for encryption",
                            "readOnly": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "FhirService": {
      "type": "object",
      "description": "The description of Fhir Service",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "kind": {
          "readOnly": false,
          "type": "string",
          "description": "The kind of the service.",
          "enum": [
            "fhir-Stu3",
            "fhir-R4"
          ],
          "x-ms-enum": {
            "name": "fhirServiceKind",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "Fhir Service configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state.",
              "enum": [
                "Deleting",
                "Succeeded",
                "Creating",
                "Accepted",
                "Verifying",
                "Updating",
                "Failed",
                "Canceled",
                "Deprovisioned",
                "Moving",
                "Suspended",
                "Warned",
                "SystemMaintenance"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              }
            },
            "acrConfiguration": {
              "description": "Fhir Service Azure container registry configuration.",
              "type": "object",
              "properties": {
                "loginServers": {
                  "type": "array",
                  "description": "The list of the Azure container registry login servers.",
                  "readOnly": false,
                  "items": {
                    "type": "string"
                  }
                },
                "ociArtifacts": {
                  "type": "array",
                  "description": "The list of Open Container Initiative (OCI) artifacts.",
                  "readOnly": false,
                  "items": {
                    "description": "An Open Container Initiative (OCI) artifact.",
                    "type": "object",
                    "properties": {
                      "loginServer": {
                        "description": "The Azure Container Registry login server.",
                        "type": "string"
                      },
                      "imageName": {
                        "description": "The artifact name.",
                        "type": "string"
                      },
                      "digest": {
                        "description": "The artifact digest.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "authenticationConfiguration": {
              "description": "Fhir Service authentication configuration.",
              "type": "object",
              "properties": {
                "authority": {
                  "type": "string",
                  "description": "The authority url for the service",
                  "readOnly": false
                },
                "audience": {
                  "type": "string",
                  "description": "The audience url for the service",
                  "readOnly": false
                },
                "smartProxyEnabled": {
                  "type": "boolean",
                  "description": "If the SMART on FHIR proxy is enabled",
                  "readOnly": false
                },
                "smartIdentityProviders": {
                  "type": "array",
                  "description": "The array of identity provider configurations for SMART on FHIR authentication.",
                  "readOnly": false,
                  "items": {
                    "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                    "type": "object",
                    "properties": {
                      "authority": {
                        "description": "The identity provider token authority also known as the token issuing authority.",
                        "type": "string"
                      },
                      "applications": {
                        "type": "array",
                        "description": "The array of identity provider applications for SMART on FHIR authentication.",
                        "readOnly": false,
                        "items": {
                          "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                              "type": "string"
                            },
                            "audience": {
                              "description": "The audience that will be used to validate bearer tokens against the given authority.",
                              "type": "string"
                            },
                            "allowedDataActions": {
                              "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                                "enum": [
                                  "Read"
                                ],
                                "x-ms-enum": {
                                  "name": "SmartDataActions",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "corsConfiguration": {
              "description": "Fhir Service Cors configuration.",
              "type": "object",
              "properties": {
                "origins": {
                  "type": "array",
                  "description": "The origins to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "An origin for CORS.",
                    "type": "string",
                    "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
                  }
                },
                "headers": {
                  "type": "array",
                  "description": "The headers to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A header for CORS.",
                    "type": "string"
                  }
                },
                "methods": {
                  "type": "array",
                  "description": "The methods to be allowed via CORS.",
                  "readOnly": false,
                  "items": {
                    "description": "A method for CORS.",
                    "type": "string"
                  }
                },
                "maxAge": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The max age to be allowed via CORS.",
                  "readOnly": false,
                  "minimum": 0,
                  "maximum": 99999
                },
                "allowCredentials": {
                  "type": "boolean",
                  "description": "If credentials are allowed via CORS.",
                  "readOnly": false
                }
              }
            },
            "exportConfiguration": {
              "description": "Fhir Service export configuration.",
              "type": "object",
              "properties": {
                "storageAccountName": {
                  "type": "string",
                  "description": "The name of the default export storage account.",
                  "readOnly": false
                }
              }
            },
            "privateEndpointConnections": {
              "description": "The list of private endpoint connections that are set up for this resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              },
              "readOnly": true
            },
            "publicNetworkAccess": {
              "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "readOnly": true
            },
            "eventState": {
              "description": "Fhir Service event support status.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ServiceEventState",
                "modelAsString": true
              },
              "readOnly": true
            },
            "resourceVersionPolicyConfiguration": {
              "description": "Determines tracking of history for resources.",
              "type": "object",
              "properties": {
                "default": {
                  "description": "The default value for tracking history across all resources.",
                  "type": "string",
                  "enum": [
                    "no-version",
                    "versioned",
                    "versioned-update"
                  ],
                  "x-ms-enum": {
                    "name": "FhirResourceVersionPolicy",
                    "modelAsString": true
                  }
                },
                "resourceTypeOverrides": {
                  "description": "A list of FHIR Resources and their version policy overrides.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Controls how resources are versioned on the FHIR service",
                    "enum": [
                      "no-version",
                      "versioned",
                      "versioned-update"
                    ],
                    "x-ms-enum": {
                      "name": "FhirResourceVersionPolicy",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "importConfiguration": {
              "description": "Fhir Service import configuration.",
              "type": "object",
              "properties": {
                "integrationDataStore": {
                  "type": "string",
                  "description": "The name of the default integration storage account.",
                  "readOnly": false
                },
                "initialImportMode": {
                  "type": "boolean",
                  "description": "If the FHIR service is in InitialImportMode.",
                  "readOnly": false
                },
                "enabled": {
                  "type": "boolean",
                  "description": "If the import operation is enabled.",
                  "readOnly": false
                }
              }
            },
            "implementationGuidesConfiguration": {
              "description": "Implementation Guides configuration.",
              "type": "object",
              "properties": {
                "usCoreMissingData": {
                  "type": "boolean",
                  "description": "If US Core Missing Data requirement is enabled.",
                  "readOnly": false
                }
              }
            },
            "encryption": {
              "description": "The encryption settings of the FHIR service",
              "type": "object",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "The encryption settings for the customer-managed key",
                  "readOnly": false,
                  "properties": {
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "The URL of the key to use for encryption",
                      "readOnly": false
                    }
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "FhirServicePatchResource": {
      "type": "object",
      "description": "FhirService patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ServiceManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "userAssignedIdentities": {
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "The client ID of the assigned identity.",
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "FhirServiceProperties": {
      "description": "Fhir Service properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned",
            "Moving",
            "Suspended",
            "Warned",
            "SystemMaintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "acrConfiguration": {
          "description": "Fhir Service Azure container registry configuration.",
          "type": "object",
          "properties": {
            "loginServers": {
              "type": "array",
              "description": "The list of the Azure container registry login servers.",
              "readOnly": false,
              "items": {
                "type": "string"
              }
            },
            "ociArtifacts": {
              "type": "array",
              "description": "The list of Open Container Initiative (OCI) artifacts.",
              "readOnly": false,
              "items": {
                "description": "An Open Container Initiative (OCI) artifact.",
                "type": "object",
                "properties": {
                  "loginServer": {
                    "description": "The Azure Container Registry login server.",
                    "type": "string"
                  },
                  "imageName": {
                    "description": "The artifact name.",
                    "type": "string"
                  },
                  "digest": {
                    "description": "The artifact digest.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "authenticationConfiguration": {
          "description": "Fhir Service authentication configuration.",
          "type": "object",
          "properties": {
            "authority": {
              "type": "string",
              "description": "The authority url for the service",
              "readOnly": false
            },
            "audience": {
              "type": "string",
              "description": "The audience url for the service",
              "readOnly": false
            },
            "smartProxyEnabled": {
              "type": "boolean",
              "description": "If the SMART on FHIR proxy is enabled",
              "readOnly": false
            },
            "smartIdentityProviders": {
              "type": "array",
              "description": "The array of identity provider configurations for SMART on FHIR authentication.",
              "readOnly": false,
              "items": {
                "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
                "type": "object",
                "properties": {
                  "authority": {
                    "description": "The identity provider token authority also known as the token issuing authority.",
                    "type": "string"
                  },
                  "applications": {
                    "type": "array",
                    "description": "The array of identity provider applications for SMART on FHIR authentication.",
                    "readOnly": false,
                    "items": {
                      "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                          "type": "string"
                        },
                        "audience": {
                          "description": "The audience that will be used to validate bearer tokens against the given authority.",
                          "type": "string"
                        },
                        "allowedDataActions": {
                          "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                            "enum": [
                              "Read"
                            ],
                            "x-ms-enum": {
                              "name": "SmartDataActions",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "corsConfiguration": {
          "description": "Fhir Service Cors configuration.",
          "type": "object",
          "properties": {
            "origins": {
              "type": "array",
              "description": "The origins to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "An origin for CORS.",
                "type": "string",
                "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
              }
            },
            "headers": {
              "type": "array",
              "description": "The headers to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A header for CORS.",
                "type": "string"
              }
            },
            "methods": {
              "type": "array",
              "description": "The methods to be allowed via CORS.",
              "readOnly": false,
              "items": {
                "description": "A method for CORS.",
                "type": "string"
              }
            },
            "maxAge": {
              "type": "integer",
              "format": "int32",
              "description": "The max age to be allowed via CORS.",
              "readOnly": false,
              "minimum": 0,
              "maximum": 99999
            },
            "allowCredentials": {
              "type": "boolean",
              "description": "If credentials are allowed via CORS.",
              "readOnly": false
            }
          }
        },
        "exportConfiguration": {
          "description": "Fhir Service export configuration.",
          "type": "object",
          "properties": {
            "storageAccountName": {
              "type": "string",
              "description": "The name of the default export storage account.",
              "readOnly": false
            }
          }
        },
        "privateEndpointConnections": {
          "description": "The list of private endpoint connections that are set up for this resource.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "readOnly": true
        },
        "eventState": {
          "description": "Fhir Service event support status.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServiceEventState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "resourceVersionPolicyConfiguration": {
          "description": "Determines tracking of history for resources.",
          "type": "object",
          "properties": {
            "default": {
              "description": "The default value for tracking history across all resources.",
              "type": "string",
              "enum": [
                "no-version",
                "versioned",
                "versioned-update"
              ],
              "x-ms-enum": {
                "name": "FhirResourceVersionPolicy",
                "modelAsString": true
              }
            },
            "resourceTypeOverrides": {
              "description": "A list of FHIR Resources and their version policy overrides.",
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "Controls how resources are versioned on the FHIR service",
                "enum": [
                  "no-version",
                  "versioned",
                  "versioned-update"
                ],
                "x-ms-enum": {
                  "name": "FhirResourceVersionPolicy",
                  "modelAsString": true
                }
              }
            }
          }
        },
        "importConfiguration": {
          "description": "Fhir Service import configuration.",
          "type": "object",
          "properties": {
            "integrationDataStore": {
              "type": "string",
              "description": "The name of the default integration storage account.",
              "readOnly": false
            },
            "initialImportMode": {
              "type": "boolean",
              "description": "If the FHIR service is in InitialImportMode.",
              "readOnly": false
            },
            "enabled": {
              "type": "boolean",
              "description": "If the import operation is enabled.",
              "readOnly": false
            }
          }
        },
        "implementationGuidesConfiguration": {
          "description": "Implementation Guides configuration.",
          "type": "object",
          "properties": {
            "usCoreMissingData": {
              "type": "boolean",
              "description": "If US Core Missing Data requirement is enabled.",
              "readOnly": false
            }
          }
        },
        "encryption": {
          "description": "The encryption settings of the FHIR service",
          "type": "object",
          "properties": {
            "customerManagedKeyEncryption": {
              "type": "object",
              "description": "The encryption settings for the customer-managed key",
              "readOnly": false,
              "properties": {
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "The URL of the key to use for encryption",
                  "readOnly": false
                }
              }
            }
          }
        }
      }
    },
    "ResourceVersionPolicyConfiguration": {
      "description": "The settings for history tracking for FHIR resources.",
      "type": "object",
      "properties": {
        "default": {
          "description": "The default value for tracking history across all resources.",
          "type": "string",
          "enum": [
            "no-version",
            "versioned",
            "versioned-update"
          ],
          "x-ms-enum": {
            "name": "FhirResourceVersionPolicy",
            "modelAsString": true
          }
        },
        "resourceTypeOverrides": {
          "description": "A list of FHIR Resources and their version policy overrides.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Controls how resources are versioned on the FHIR service",
            "enum": [
              "no-version",
              "versioned",
              "versioned-update"
            ],
            "x-ms-enum": {
              "name": "FhirResourceVersionPolicy",
              "modelAsString": true
            }
          }
        }
      }
    },
    "ImplementationGuidesConfiguration": {
      "description": "The settings for Implementation Guides - defining capabilities for national standards, vendor consortiums, clinical societies, etc.",
      "type": "object",
      "properties": {
        "usCoreMissingData": {
          "type": "boolean",
          "description": "If US Core Missing Data requirement is enabled.",
          "readOnly": false
        }
      }
    },
    "FhirResourceVersionPolicy": {
      "type": "string",
      "description": "Controls how resources are versioned on the FHIR service",
      "enum": [
        "no-version",
        "versioned",
        "versioned-update"
      ],
      "x-ms-enum": {
        "name": "FhirResourceVersionPolicy",
        "modelAsString": true
      }
    },
    "FhirServiceAcrConfiguration": {
      "description": "Azure container registry configuration information",
      "type": "object",
      "properties": {
        "loginServers": {
          "type": "array",
          "description": "The list of the Azure container registry login servers.",
          "readOnly": false,
          "items": {
            "type": "string"
          }
        },
        "ociArtifacts": {
          "type": "array",
          "description": "The list of Open Container Initiative (OCI) artifacts.",
          "readOnly": false,
          "items": {
            "description": "An Open Container Initiative (OCI) artifact.",
            "type": "object",
            "properties": {
              "loginServer": {
                "description": "The Azure Container Registry login server.",
                "type": "string"
              },
              "imageName": {
                "description": "The artifact name.",
                "type": "string"
              },
              "digest": {
                "description": "The artifact digest.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FhirServiceAuthenticationConfiguration": {
      "description": "Authentication configuration information",
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service",
          "readOnly": false
        },
        "audience": {
          "type": "string",
          "description": "The audience url for the service",
          "readOnly": false
        },
        "smartProxyEnabled": {
          "type": "boolean",
          "description": "If the SMART on FHIR proxy is enabled",
          "readOnly": false
        },
        "smartIdentityProviders": {
          "type": "array",
          "description": "The array of identity provider configurations for SMART on FHIR authentication.",
          "readOnly": false,
          "items": {
            "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
            "type": "object",
            "properties": {
              "authority": {
                "description": "The identity provider token authority also known as the token issuing authority.",
                "type": "string"
              },
              "applications": {
                "type": "array",
                "description": "The array of identity provider applications for SMART on FHIR authentication.",
                "readOnly": false,
                "items": {
                  "description": "An Application configured in the Identity Provider used to access FHIR resources.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                      "type": "string"
                    },
                    "audience": {
                      "description": "The audience that will be used to validate bearer tokens against the given authority.",
                      "type": "string"
                    },
                    "allowedDataActions": {
                      "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                        "enum": [
                          "Read"
                        ],
                        "x-ms-enum": {
                          "name": "SmartDataActions",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SmartIdentityProviderConfiguration": {
      "description": "An object to configure an identity provider for use with SMART on FHIR authentication.",
      "type": "object",
      "properties": {
        "authority": {
          "description": "The identity provider token authority also known as the token issuing authority.",
          "type": "string"
        },
        "applications": {
          "type": "array",
          "description": "The array of identity provider applications for SMART on FHIR authentication.",
          "readOnly": false,
          "items": {
            "description": "An Application configured in the Identity Provider used to access FHIR resources.",
            "type": "object",
            "properties": {
              "clientId": {
                "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
                "type": "string"
              },
              "audience": {
                "description": "The audience that will be used to validate bearer tokens against the given authority.",
                "type": "string"
              },
              "allowedDataActions": {
                "description": "The actions that are permitted to be performed on FHIR resources for the application.",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
                  "enum": [
                    "Read"
                  ],
                  "x-ms-enum": {
                    "name": "SmartDataActions",
                    "modelAsString": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SmartIdentityProviderApplication": {
      "description": "An Application configured in the Identity Provider used to access FHIR resources.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The application client id defined in the identity provider. This value will be used to validate bearer tokens against the given authority.",
          "type": "string"
        },
        "audience": {
          "description": "The audience that will be used to validate bearer tokens against the given authority.",
          "type": "string"
        },
        "allowedDataActions": {
          "description": "The actions that are permitted to be performed on FHIR resources for the application.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
            "enum": [
              "Read"
            ],
            "x-ms-enum": {
              "name": "SmartDataActions",
              "modelAsString": true
            }
          }
        }
      }
    },
    "SmartDataActions": {
      "type": "string",
      "description": "The Data Actions that can be enabled for a Smart Identity Provider Application.",
      "enum": [
        "Read"
      ],
      "x-ms-enum": {
        "name": "SmartDataActions",
        "modelAsString": true
      }
    },
    "FhirServiceCorsConfiguration": {
      "description": "The settings for the CORS configuration of the service instance.",
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "An origin for CORS.",
            "type": "string",
            "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A header for CORS.",
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "description": "A method for CORS.",
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "The max age to be allowed via CORS.",
          "readOnly": false,
          "minimum": 0,
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS.",
          "readOnly": false
        }
      }
    },
    "CorsConfigurationOriginEntry": {
      "description": "An origin for CORS.",
      "type": "string",
      "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
    },
    "CorsConfigurationHeaderEntry": {
      "description": "A header for CORS.",
      "type": "string"
    },
    "CorsConfigurationMethodEntry": {
      "description": "A method for CORS.",
      "type": "string"
    },
    "ServiceOciArtifactEntry": {
      "description": "An Open Container Initiative (OCI) artifact.",
      "type": "object",
      "properties": {
        "loginServer": {
          "description": "The Azure Container Registry login server.",
          "type": "string"
        },
        "imageName": {
          "description": "The artifact name.",
          "type": "string"
        },
        "digest": {
          "description": "The artifact digest.",
          "type": "string"
        }
      }
    },
    "FhirServiceExportConfiguration": {
      "description": "Export operation configuration information",
      "type": "object",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The name of the default export storage account.",
          "readOnly": false
        }
      }
    },
    "FhirServiceImportConfiguration": {
      "description": "Import operation configuration information",
      "type": "object",
      "properties": {
        "integrationDataStore": {
          "type": "string",
          "description": "The name of the default integration storage account.",
          "readOnly": false
        },
        "initialImportMode": {
          "type": "boolean",
          "description": "If the FHIR service is in InitialImportMode.",
          "readOnly": false
        },
        "enabled": {
          "type": "boolean",
          "description": "If the import operation is enabled.",
          "readOnly": false
        }
      }
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "ResourcePublicNetworkAccess": {
      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      },
      "readOnly": true
    },
    "Encryption": {
      "description": "Settings to encrypt a service",
      "type": "object",
      "properties": {
        "customerManagedKeyEncryption": {
          "type": "object",
          "description": "The encryption settings for the customer-managed key",
          "readOnly": false,
          "properties": {
            "keyEncryptionKeyUrl": {
              "type": "string",
              "description": "The URL of the key to use for encryption",
              "readOnly": false
            }
          }
        }
      }
    },
    "StorageConfiguration": {
      "description": "The configuration of connected storage",
      "type": "object",
      "properties": {
        "storageResourceId": {
          "type": "string",
          "description": "The resource id of connected storage account.",
          "readOnly": false
        },
        "fileSystemName": {
          "type": "string",
          "description": "The filesystem name of connected storage account.",
          "readOnly": false
        }
      }
    },
    "EnableDataPartitions": {
      "description": "Boolean to indicate if data partitions is enabled or not.",
      "type": "boolean"
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        }
      },
      "description": "List of private endpoint connection associated with the specified storage account"
    },
    "ResourceEventState": {
      "type": "string",
      "description": "Indicates the current status of event support for the resource.",
      "enum": [
        "Disabled",
        "Enabled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ServiceEventState",
        "modelAsString": true
      },
      "readOnly": true
    }
  },
  "parameters": {
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the service instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90
    },
    "locationName": {
      "name": "locationName",
      "in": "path",
      "description": "The location of the operation.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "operationResultId": {
      "name": "operationResultId",
      "in": "path",
      "description": "The ID of the operation result to get.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "workspaceName": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of workspace resource.",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "dicomServiceName": {
      "name": "dicomServiceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of DICOM Service resource.",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "iotConnectorName": {
      "name": "iotConnectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of IoT Connector resource.",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "fhirDestinationName": {
      "name": "fhirDestinationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of IoT Connector FHIR destination resource.",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "fhirServiceName": {
      "name": "fhirServiceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of FHIR Service resource.",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "resourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the service instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    }
  }
}